{"ast":null,"code":"import _slicedToArray from \"C:/Users/spenc/Documents/GitHub/hci-com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/spenc/Documents/GitHub/hci-com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\spenc\\\\Documents\\\\GitHub\\\\hci-com\\\\src\\\\components\\\\BackToTop.tsx\",\n    _templateObject,\n    _templateObject2,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { animateScroll } from 'react-scroll';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst scrollOptions = {\n  delay: 5,\n  duration: 500,\n  smooth: 'easeInOutCubic'\n};\nconst BackToTopLink = styled.a(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  width: 3.5rem;\\n  z-index: 9999;\\n  display: block;\\n  height: 3.5rem;\\n  right: 1.25rem;\\n  cursor: pointer;\\n  position: fixed;\\n  user-select: none;\\n  border-radius: 50%;\\n  -webkit-touch-callout: none;\\n  background: rgb(37, 40, 47);\\n  -webkit-tap-highlight-color: transparent;\\n  border: 1px solid rgba(255, 255, 255, 0.1);\\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 0px 20px;\\n  transition: opacity 0.4s ease, bottom 0.4s ease;\\n  bottom: \", \";\\n  opacity: \", \";\\n\"])), ({\n  $show\n}) => $show ? '1.25rem' : '-3.5rem', ({\n  $show\n}) => $show ? 1 : 0);\n_c = BackToTopLink;\nconst AngleDoubleUpIcon = styled(FontAwesomeIcon)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  display: block;\\n  color: #98a2df;\\n  font-size: 1.75em;\\n  padding-left: 0.1rem;\\n  margin: 0.75rem auto auto auto;\\n\"]))); // Write the show state value to a ref so we can use it as a check to prevent\n// ...re-renders on every scroll down that triggers a show for the button\n\n_c2 = AngleDoubleUpIcon;\n\nconst BackToTop = () => {\n  _s();\n\n  const showRef = useRef(false);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollY = window.scrollY || window.pageYOffset;\n\n      if (!showRef.current && scrollY > 100) {\n        showRef.current = true;\n        setShow(showRef.current);\n      } else if (scrollY === 0) {\n        showRef.current = false;\n        setShow(showRef.current);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BackToTopLink, {\n    $show: show,\n    role: \"button\",\n    \"aria-label\": \"BackToTop\",\n    onClick: () => animateScroll.scrollToTop(scrollOptions),\n    children: /*#__PURE__*/_jsxDEV(AngleDoubleUpIcon, {\n      icon: \"angle-double-up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BackToTop, \"IhV0u79FSCEL1DRGI7hAYJ4iJOY=\");\n\n_c3 = BackToTop;\nexport default BackToTop;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"BackToTopLink\");\n$RefreshReg$(_c2, \"AngleDoubleUpIcon\");\n$RefreshReg$(_c3, \"BackToTop\");","map":{"version":3,"sources":["C:/Users/spenc/Documents/GitHub/hci-com/src/components/BackToTop.tsx"],"names":["useEffect","useState","useRef","styled","animateScroll","FontAwesomeIcon","React","scrollOptions","delay","duration","smooth","BackToTopLink","a","$show","AngleDoubleUpIcon","BackToTop","showRef","show","setShow","handleScroll","scrollY","window","pageYOffset","current","addEventListener","removeEventListener","scrollToTop"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA+D,OAA/D;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,CADa;AAEpBC,EAAAA,QAAQ,EAAE,GAFU;AAGpBC,EAAAA,MAAM,EAAE;AAHY,CAAtB;AAMA,MAAMC,aAAa,GAAGR,MAAM,CAACS,CAAV,6hBAgBP,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,GAAG,SAAH,GAAe,SAhB5B,EAiBN,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAeA,KAAK,GAAG,CAAH,GAAO,CAjBrB,CAAnB;KAAMF,a;AAoBN,MAAMG,iBAAiB,GAAGX,MAAM,CAACE,eAAD,CAAT,iMAAvB,C,CAQA;AACA;;MATMS,iB;;AAUN,MAAMC,SAA4B,GAAG,MAAM;AAAA;;AACzC,QAAMC,OAAO,GAAGd,MAAM,CAAU,KAAV,CAAtB;;AADyC,oBAEjBD,QAAQ,CAAU,KAAV,CAFS;AAAA;AAAA,QAElCgB,IAFkC;AAAA,QAE5BC,OAF4B;;AAIzClB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,YAAY,GAAG,MAAY;AAC/B,YAAMC,OAAO,GAAIC,MAAM,CAACD,OAAP,IAAkBC,MAAM,CAACC,WAA1C;;AAEA,UAAI,CAACN,OAAO,CAACO,OAAT,IAAoBH,OAAO,GAAG,GAAlC,EAAuC;AACrCJ,QAAAA,OAAO,CAACO,OAAR,GAAkB,IAAlB;AACAL,QAAAA,OAAO,CAACF,OAAO,CAACO,OAAT,CAAP;AACD,OAHD,MAGO,IAAIH,OAAO,KAAK,CAAhB,EAAmB;AACxBJ,QAAAA,OAAO,CAACO,OAAR,GAAkB,KAAlB;AACAL,QAAAA,OAAO,CAACF,OAAO,CAACO,OAAT,CAAP;AACD;AACF,KAVD;;AAYAF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCL,YAAlC;AAEA,WAAO,MAAM;AACXE,MAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCN,YAArC;AACD,KAFD;AAGD,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAEF,IADT;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,kBAAW,WAHb;AAIE,IAAA,OAAO,EAAE,MAAMb,aAAa,CAACsB,WAAd,CAA0BnB,aAA1B,CAJjB;AAAA,2BAME,QAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAlCD;;GAAMQ,S;;MAAAA,S;AAoCN,eAAeA,SAAf","sourcesContent":["import { useEffect, useState, useRef, FunctionComponent } from 'react';\r\nimport styled from 'styled-components';\r\nimport { animateScroll } from 'react-scroll';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\n\r\nconst scrollOptions = {\r\n  delay: 5,\r\n  duration: 500,\r\n  smooth: 'easeInOutCubic'\r\n};\r\n\r\nconst BackToTopLink = styled.a<{ $show: boolean }>`\r\n  width: 3.5rem;\r\n  z-index: 9999;\r\n  display: block;\r\n  height: 3.5rem;\r\n  right: 1.25rem;\r\n  cursor: pointer;\r\n  position: fixed;\r\n  user-select: none;\r\n  border-radius: 50%;\r\n  -webkit-touch-callout: none;\r\n  background: rgb(37, 40, 47);\r\n  -webkit-tap-highlight-color: transparent;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 0px 20px;\r\n  transition: opacity 0.4s ease, bottom 0.4s ease;\r\n  bottom: ${({ $show }) => $show ? '1.25rem' : '-3.5rem'};\r\n  opacity: ${({ $show }) => $show ? 1 : 0};\r\n`;\r\n\r\nconst AngleDoubleUpIcon = styled(FontAwesomeIcon)`\r\n  display: block;\r\n  color: #98a2df;\r\n  font-size: 1.75em;\r\n  padding-left: 0.1rem;\r\n  margin: 0.75rem auto auto auto;\r\n`;\r\n\r\n// Write the show state value to a ref so we can use it as a check to prevent\r\n// ...re-renders on every scroll down that triggers a show for the button\r\nconst BackToTop: FunctionComponent = () => {\r\n  const showRef = useRef<boolean>(false);\r\n  const [show, setShow] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = (): void => {\r\n      const scrollY = (window.scrollY || window.pageYOffset);\r\n\r\n      if (!showRef.current && scrollY > 100) {\r\n        showRef.current = true;\r\n        setShow(showRef.current);\r\n      } else if (scrollY === 0) {\r\n        showRef.current = false;\r\n        setShow(showRef.current);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <BackToTopLink\r\n      $show={show}\r\n      role='button'\r\n      aria-label='BackToTop'\r\n      onClick={() => animateScroll.scrollToTop(scrollOptions)}\r\n    >\r\n      <AngleDoubleUpIcon icon='angle-double-up' />\r\n    </BackToTopLink>\r\n  );\r\n};\r\n\r\nexport default BackToTop;"]},"metadata":{},"sourceType":"module"}