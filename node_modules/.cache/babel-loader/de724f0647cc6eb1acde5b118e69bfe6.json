{"ast":null,"code":"import _slicedToArray from \"C:/Users/spenc/Documents/GitHub/hci-com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/spenc/Documents/GitHub/hci-com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\spenc\\\\Documents\\\\GitHub\\\\hci-com\\\\src\\\\containers\\\\Home\\\\components\\\\MyTweets.tsx\",\n    _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Card from 'react-bootstrap/Card';\nimport axios from 'axios';\nimport { Tweet } from 'react-twitter-widgets';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover'; //var id = \"634739719\"\n//var id = \"1293416714923683841\"\n//var id = \"192812670\"\n//var id = \"802233409338675200\"\n//var id = \"18256350\"\n//var id = \"2490180804\"\n//var id = \"18670940\"\n//var id = \"486899842\"\n//var id = \"238753895\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = styled.p(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    &&& {\\n    padding: 1em;\\n    font-size: 30px;\\n    font-weight:bold;\\n}\"])));\n_c = Title;\nconst Subtitle = styled.p(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    &&& {\\n    padding: .05em;\\n    font-size: 16px;\\n}\"])));\nconst Retweet = styled.p(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    &&& {\\n    padding: 1em;\\n    font-size: 24px;\\n    font-weight:bold;\\n    margin-left:80px\\n}\"])));\nconst tweetwind = {\n  padding: '1em',\n  width: '880px',\n  maxWidth: '880px',\n  maxHeight: '600px',\n  'overflow-y': 'auto'\n};\nconst square = {\n  width: \"200px\",\n  maxWidth: \"200px\",\n  maxHeight: \"200x\",\n  height: \"200px\",\n  padding: \"0.5em\"\n};\nconst Pop = styled.button(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"{\\n    background:none;\\n    border:none;\\n    margin:0;\\n    padding:0;\\n    cursor: pointer;\\n    color:blue;\\n  }\"])));\nconst tweetpop = {\n  width: '600px',\n  maxWidth: 'none',\n  maxHeight: '500px',\n  'overflow-y': 'auto'\n};\n/*\r\nfunction RenderTweet(tweets, num){\r\n    if (tweets.length < num){\r\n        return (<div></div>);\r\n    } else if (tweets[tweets.length - num]['downstream_r'] + tweets[tweets.length - num]['downstream_n'] <= 0){\r\n        return (<div></div>);\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n                <Card style ={{padding:\"3em\"}}>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Tweet tweetId={tweets[tweets.length - num]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n\r\n                    \r\n                </div>\r\n                <div className='column'>\r\n                    <WaffleChart legend_pos = \"right\" title = {tweets[tweets.length - num]['retweets'].toString()} divid={\"td\".concat(num.toString())} vars = {[{name: \"Researchers\", data: tweets[tweets.length - num]['downstream_r']}, {name: \"Non-researchers\", data: tweets[tweets.length - num]['downstream_n']}]} />\r\n                    <Retweet>\r\n                    Retweets: {tweets[tweets.length - num]['retweets']}\r\n                    </Retweet>\r\n                </div>\r\n            </div>\r\n            </Card>\r\n\r\n            <br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n*/\n\nfunction PopButton(tweet) {\n  return /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n    trigger: \"click\",\n    placement: \"left\",\n    overlay: TweetPop(tweet),\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"See Tweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = PopButton;\n;\n\nfunction TweetPop(tweet_id) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Popover, {\n      id: \"popover-basic\",\n      placement: \"bottom\",\n      style: tweetpop,\n      children: [/*#__PURE__*/_jsxDEV(Popover.Title, {\n        children: \"Sample Tweets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popover.Content, {\n        children: /*#__PURE__*/_jsxDEV(Tweet, {\n          tweetId: tweet_id,\n          options: {\n            width: \"90%\",\n            cards: \"hidden\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = TweetPop;\n\nfunction RenderTweet(tweet_id, text) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Tweet, {\n      tweetId: tweet_id,\n      options: {\n        width: \"90%\",\n        cards: \"hidden\",\n        conversation: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), PopButton(tweet_id)]\n  }, tweet_id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n  /*\r\n  var new_text = \"\"\r\n   if (text.length > 110){\r\n     new_text = text.slice(0, 110)\r\n     new_text = new_text + \"...\"\r\n  } else{\r\n     new_text = text\r\n  }\r\n   return(\r\n  <div key = {tweet_id}>\r\n      <Card style = {square}>\r\n      <p>{new_text}</p>\r\n      </Card>\r\n      <br/>\r\n  </div>\r\n  )\r\n  */\n}\n\n_c4 = RenderTweet;\n\nfunction MyTweets(props) {\n  _s();\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tweets = _useState4[0],\n        setTweets = _useState4[1];\n\n  var id = props.id;\n  useEffect(() => {\n    axios.get(\"http://localhost:4001/twitter/retweetsWhereUserID/\".concat(id)).then(response => {\n      setTweets(response.data);\n      setLoading(false);\n    }).catch(error => console.error(\"There was an error retrieving the retweets list: \".concat(error)));\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"My Tweets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 16\n    }, this);\n  }\n  /*\r\n    var col1 = []\r\n  var col2 = []\r\n  var col3 = []\r\n  */\n\n\n  var tweet_array = [];\n  var max = Math.min(tweets.length, 21);\n\n  for (var i = 0; i < max; i++) {\n    /*\r\n    if (i % 3 == 0){\r\n      console.log(\"col1\")\r\n      col1.push(RenderTweet(tweets[i].tweet_id_text, tweets[i].tweet_text))\r\n    }\r\n    if (i % 3 == 1){\r\n      console.log(\"col2\")\r\n      col2.push(RenderTweet(tweets[i].tweet_id_text, tweets[i].tweet_text))\r\n    }\r\n    if (i % 3 == 2){\r\n      console.log(\"col3\")\r\n      col3.push(RenderTweet(tweets[i].tweet_id_text, tweets[i].tweet_text))\r\n    }\r\n    */\n    tweets.push(RenderTweet(tweets[i].tweet_id_text, tweets[i].tweet_text));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: tweetwind,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: tweet_array\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 9\n  }, this);\n  /*\r\n  return (\r\n  <div>\r\n  <Card style ={{padding:\"3em\"}}>\r\n      <Title>My Tweets</Title>\r\n          <div className='columns'>\r\n              <div className='column'>\r\n                  <Title>Tweets</Title>\r\n                  <Tweet tweetId={tweets[tweets.length - 1]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n                    \r\n              </div>\r\n              <div className='column'>\r\n                  <Title>Downstream Audience</Title>\r\n                  <WaffleChart title = {tweets[tweets.length - 1]['retweets']} divid=\"td1\" r = {tweets[tweets.length - 1]['downstream_r']} n = {tweets[tweets.length - 1]['downstream_n']}/>\r\n              </div>\r\n          </div>\r\n            <br/>\r\n          <div className='columns'>\r\n              <div className='column'>\r\n                  <Tweet tweetId={tweets[tweets.length - 2]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n              </div>\r\n              <div className='column'>\r\n                  <WaffleChart title = {tweets[tweets.length - 2]['retweets']} divid=\"td2\" r = {tweets[tweets.length - 2]['downstream_r']} n = {tweets[tweets.length - 2]['downstream_n']}/>\r\n              </div>\r\n          </div>\r\n            <br/>\r\n          <div className='columns'>\r\n              <div className='column'>\r\n                  <Tweet tweetId={tweets[tweets.length - 3]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n              </div>\r\n              <div className='column'>\r\n                  <WaffleChart title = {tweets[tweets.length - 3]['retweets']} divid=\"td3\" r = {tweets[tweets.length - 3]['downstream_r']} n = {tweets[tweets.length - 3]['downstream_n']}/>\r\n              </div>\r\n          </div>\r\n            <br/>\r\n          <div className='columns'>\r\n              <div className='column'>\r\n                  <Tweet tweetId={tweets[tweets.length - 4]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n              </div>\r\n              <div className='column'>\r\n                  <WaffleChart title = {tweets[tweets.length - 4]['retweets']} divid=\"td4\" r = {tweets[tweets.length - 4]['downstream_r']} n = {tweets[tweets.length - 4]['downstream_n']}/>\r\n              </div>\r\n          </div>\r\n            <br/>\r\n          <div className='columns'>\r\n              <div className='column'>\r\n                  <Tweet tweetId={tweets[tweets.length - 5]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n              </div>\r\n              <div className='column'>\r\n                  <WaffleChart title = {tweets[tweets.length - 5]['retweets']} divid=\"td5\" r = {tweets[tweets.length - 5]['downstream_r']} n = {tweets[tweets.length - 5]['downstream_n']}/>\r\n              </div>\r\n          </div>\r\n    </Card>\r\n  </div>\r\n  );*/\n}\n\n_s(MyTweets, \"2eC+Id8v39Nmueex3OQO1vL/H3E=\");\n\n_c5 = MyTweets;\nexport default MyTweets;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"PopButton\");\n$RefreshReg$(_c3, \"TweetPop\");\n$RefreshReg$(_c4, \"RenderTweet\");\n$RefreshReg$(_c5, \"MyTweets\");","map":{"version":3,"sources":["C:/Users/spenc/Documents/GitHub/hci-com/src/containers/Home/components/MyTweets.tsx"],"names":["React","useEffect","useState","styled","Card","axios","Tweet","OverlayTrigger","Popover","Title","p","Subtitle","Retweet","tweetwind","padding","width","maxWidth","maxHeight","square","height","Pop","button","tweetpop","PopButton","tweet","TweetPop","tweet_id","cards","RenderTweet","text","conversation","MyTweets","props","isLoading","setLoading","tweets","setTweets","id","get","then","response","data","catch","error","console","tweet_array","max","Math","min","length","i","push","tweet_id_text","tweet_text"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport WaffleChart from './WaffleChart';\r\nimport axios from 'axios'\r\nimport { Tweet} from 'react-twitter-widgets'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Popover from 'react-bootstrap/Popover'\r\n\r\n//var id = \"634739719\"\r\n//var id = \"1293416714923683841\"\r\n//var id = \"192812670\"\r\n//var id = \"802233409338675200\"\r\n//var id = \"18256350\"\r\n//var id = \"2490180804\"\r\n//var id = \"18670940\"\r\n//var id = \"486899842\"\r\n//var id = \"238753895\"\r\n\r\nconst Title = styled.p`\r\n    &&& {\r\n    padding: 1em;\r\n    font-size: 30px;\r\n    font-weight:bold;\r\n}`\r\n\r\nconst Subtitle = styled.p`\r\n    &&& {\r\n    padding: .05em;\r\n    font-size: 16px;\r\n}`\r\n\r\nconst Retweet = styled.p`\r\n    &&& {\r\n    padding: 1em;\r\n    font-size: 24px;\r\n    font-weight:bold;\r\n    margin-left:80px\r\n}`\r\n\r\nconst tweetwind = {\r\n    padding: '1em',\r\n    width: '880px',\r\n    maxWidth: '880px',\r\n    maxHeight: '600px',\r\n    'overflow-y': 'auto'\r\n    \r\n  };\r\n\r\nconst square = {\r\n    width: \"200px\",\r\n    maxWidth: \"200px\",\r\n    maxHeight: \"200x\",\r\n    height: \"200px\",\r\n    padding: \"0.5em\",\r\n}\r\n\r\nconst Pop = styled.button `{\r\n    background:none;\r\n    border:none;\r\n    margin:0;\r\n    padding:0;\r\n    cursor: pointer;\r\n    color:blue;\r\n  }`\r\n  \r\n  const tweetpop = {\r\n    width: '600px',\r\n    maxWidth: 'none',\r\n    maxHeight: '500px',\r\n    'overflow-y': 'auto'\r\n    \r\n  };\r\n\r\n\r\n/*\r\nfunction RenderTweet(tweets, num){\r\n    if (tweets.length < num){\r\n        return (<div></div>);\r\n    } else if (tweets[tweets.length - num]['downstream_r'] + tweets[tweets.length - num]['downstream_n'] <= 0){\r\n        return (<div></div>);\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n                <Card style ={{padding:\"3em\"}}>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Tweet tweetId={tweets[tweets.length - num]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n\r\n                    \r\n                </div>\r\n                <div className='column'>\r\n                    <WaffleChart legend_pos = \"right\" title = {tweets[tweets.length - num]['retweets'].toString()} divid={\"td\".concat(num.toString())} vars = {[{name: \"Researchers\", data: tweets[tweets.length - num]['downstream_r']}, {name: \"Non-researchers\", data: tweets[tweets.length - num]['downstream_n']}]} />\r\n                    <Retweet>\r\n                    Retweets: {tweets[tweets.length - num]['retweets']}\r\n                    </Retweet>\r\n                </div>\r\n            </div>\r\n            </Card>\r\n\r\n            <br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n*/\r\n\r\nfunction PopButton(tweet) {\r\n    return (\r\n    <OverlayTrigger trigger=\"click\" placement=\"left\" overlay={TweetPop(tweet)}>\r\n    <button>See Tweet</button>\r\n      \r\n    </OverlayTrigger>\r\n    )\r\n  };\r\n  \r\n  function TweetPop(tweet_id){\r\n    return(\r\n    <div>\r\n      <Popover id=\"popover-basic\" placement=\"bottom\" style={tweetpop}>\r\n        <Popover.Title>Sample Tweets</Popover.Title>\r\n        <Popover.Content>\r\n            <Tweet tweetId={tweet_id} options={{ width: \"90%\", cards: \"hidden\" }}/>\r\n        </Popover.Content>\r\n      </Popover>\r\n    </div>\r\n    )\r\n  }\r\n\r\nfunction RenderTweet(tweet_id, text){\r\n\r\n\r\n\r\n    return(\r\n        <div key = {tweet_id}>\r\n        <Tweet tweetId={tweet_id} options={{ width: \"90%\", cards: \"hidden\", conversation: \"none\"}}/>\r\n        {PopButton(tweet_id)}\r\n        </div>\r\n    )\r\n\r\n\r\n    /*\r\n   var new_text = \"\"\r\n\r\n   if (text.length > 110){\r\n       new_text = text.slice(0, 110)\r\n       new_text = new_text + \"...\"\r\n   } else{\r\n       new_text = text\r\n   }\r\n\r\n   return(\r\n    <div key = {tweet_id}>\r\n        <Card style = {square}>\r\n        <p>{new_text}</p>\r\n        </Card>\r\n        <br/>\r\n    </div>\r\n   )\r\n   */\r\n   \r\n}\r\n\r\n\r\n\r\n\r\nfunction MyTweets(props) {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [tweets, setTweets] = useState([]);\r\n    var id = props.id\r\n  \r\n    useEffect(() => {\r\n        axios\r\n        .get(`http://localhost:4001/twitter/retweetsWhereUserID/${id}`)\r\n        .then(response => {\r\n          setTweets(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch(error => console.error(`There was an error retrieving the retweets list: ${error}`));\r\n      }, []);\r\n\r\n      if (isLoading) {\r\n        return <div>\r\n\r\n            <Title>My Tweets</Title>\r\n            <p>Loading...</p>\r\n \r\n        </div>\r\n      }\r\n\r\n      /*\r\n\r\n      var col1 = []\r\n      var col2 = []\r\n      var col3 = []\r\n      */\r\n     var tweet_array = []\r\n\r\n      var max = Math.min(tweets.length, 21)\r\n\r\n      for (var i = 0; i < max; i++){\r\n          /*\r\n        if (i % 3 == 0){\r\n            console.log(\"col1\")\r\n            col1.push(RenderTweet(tweets[i].tweet_id_text, tweets[i].tweet_text))\r\n        }\r\n        if (i % 3 == 1){\r\n            console.log(\"col2\")\r\n            col2.push(RenderTweet(tweets[i].tweet_id_text, tweets[i].tweet_text))\r\n        }\r\n        if (i % 3 == 2){\r\n            console.log(\"col3\")\r\n            col3.push(RenderTweet(tweets[i].tweet_id_text, tweets[i].tweet_text))\r\n        }\r\n        */\r\n       tweets.push(RenderTweet(tweets[i].tweet_id_text, tweets[i].tweet_text))\r\n      }\r\n\r\n      return (\r\n        <Card style = {tweetwind}>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    {tweet_array}\r\n                </div>\r\n            </div>\r\n        \r\n        \r\n        </Card>\r\n        );\r\n    \r\n    /*\r\n    return (\r\n<div>\r\n    <Card style ={{padding:\"3em\"}}>\r\n        <Title>My Tweets</Title>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Title>Tweets</Title>\r\n                    <Tweet tweetId={tweets[tweets.length - 1]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n\r\n                    \r\n                </div>\r\n                <div className='column'>\r\n                    <Title>Downstream Audience</Title>\r\n                    <WaffleChart title = {tweets[tweets.length - 1]['retweets']} divid=\"td1\" r = {tweets[tweets.length - 1]['downstream_r']} n = {tweets[tweets.length - 1]['downstream_n']}/>\r\n                </div>\r\n            </div>\r\n\r\n            <br/>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Tweet tweetId={tweets[tweets.length - 2]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n                </div>\r\n                <div className='column'>\r\n                    <WaffleChart title = {tweets[tweets.length - 2]['retweets']} divid=\"td2\" r = {tweets[tweets.length - 2]['downstream_r']} n = {tweets[tweets.length - 2]['downstream_n']}/>\r\n                </div>\r\n            </div>\r\n\r\n            <br/>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Tweet tweetId={tweets[tweets.length - 3]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n                </div>\r\n                <div className='column'>\r\n                    <WaffleChart title = {tweets[tweets.length - 3]['retweets']} divid=\"td3\" r = {tweets[tweets.length - 3]['downstream_r']} n = {tweets[tweets.length - 3]['downstream_n']}/>\r\n                </div>\r\n            </div>\r\n\r\n            <br/>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Tweet tweetId={tweets[tweets.length - 4]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n                </div>\r\n                <div className='column'>\r\n                    <WaffleChart title = {tweets[tweets.length - 4]['retweets']} divid=\"td4\" r = {tweets[tweets.length - 4]['downstream_r']} n = {tweets[tweets.length - 4]['downstream_n']}/>\r\n                </div>\r\n            </div>\r\n\r\n            <br/>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Tweet tweetId={tweets[tweets.length - 5]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n                </div>\r\n                <div className='column'>\r\n                    <WaffleChart title = {tweets[tweets.length - 5]['retweets']} divid=\"td5\" r = {tweets[tweets.length - 5]['downstream_r']} n = {tweets[tweets.length - 5]['downstream_n']}/>\r\n                </div>\r\n            </div>\r\n\r\n    </Card>\r\n\r\n</div>\r\n);*/\r\n}\r\n\r\n\r\nexport default MyTweets;"]},"metadata":{},"sourceType":"module"}