{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/spenc/Documents/GitHub/hci-com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\spenc\\\\Documents\\\\GitHub\\\\hci-com\\\\src\\\\containers\\\\Home\\\\components\\\\TopTweets.tsx\",\n    _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _s = $RefreshSig$();\n\nimport React, { useLayoutEffect } from 'react';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport styled from 'styled-components';\nimport Card from 'react-bootstrap/Card';\nimport { Tweet } from 'react-twitter-widgets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrendTable = styled.table(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n&&& {\\n  font-family: arial, sans-serif;\\n  border-collapse: collapse;\\n  width: 100%;\\n}\"])));\nconst TrendTd = styled.td(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"{\\n  text-align: left;\\n  padding: 8px;\\n}\"])));\nconst TrendNum = styled.td(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"{\\n  text-align: right;\\n  padding: 8px;\\n  width: 25%;\\n}\"])));\nconst TrendTrGray = styled.tr(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"{\\n  background-color: #dddddd;\\n}\"])));\nconst Pop = styled.button(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"{\\n  background:none;\\n  border:none;\\n  margin:0;\\n  padding:0;\\n  cursor: pointer;\\n  color:blue;\\n}\"])));\nconst tweetpop = {\n  width: '275px',\n  maxWidth: '275px',\n  maxHeight: '400px'\n};\nam4core.useTheme(am4themes_animated);\n\nfunction compare(a, b) {\n  if (a.value < b.value) {\n    return -1;\n  }\n\n  if (a.value > b.value) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction organizeData(data, num) {\n  var new_data = [];\n\n  for (const key in data) {\n    new_data.push(data[key].slice(0, num));\n  }\n\n  return new_data;\n}\n\nfunction renderTweet(tweet_id) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Tweet, {\n      tweetId: tweet_id,\n      options: {\n        width: \"200px\",\n        cards: \"hidden\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)\n  }, tweet_id + \"tt\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\nfunction renderTweetTable(data, num) {\n  var r_tweets = [];\n  var p_tweets = [];\n  var o_tweets = [];\n\n  for (const key in data) {\n    if (key == \"r\") {\n      var r_min = Math.min(data[key].length, num);\n\n      for (var i = 0; i < r_min; i++) {\n        r_tweets.push(renderTweet(data[key][i]));\n      }\n    } else if (key == \"p\") {\n      var p_min = Math.min(data[key].length, num);\n\n      for (var i = 0; i < p_min; i++) {\n        p_tweets.push(renderTweet(data[key][i]));\n      }\n    } else if (key == \"o\") {\n      var o_min = Math.min(data[key].length, num);\n\n      for (var i = 0; i < o_min; i++) {\n        o_tweets.push(renderTweet(data[key][i]));\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"columns\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Among researchers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        style: tweetpop,\n        children: r_tweets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Among practitioners\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        style: tweetpop,\n        children: p_tweets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Among other publics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        style: tweetpop,\n        children: o_tweets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\nfunction TopTweets(props) {\n  _s();\n\n  var data = []; //const [activeComs, setActiveComs] = useState({\"r\": true, \"d\": true, \"s\": true, \"o\": true})\n  //data = organizeData(props.data, 10)\n\n  data = props.data;\n  var table = renderTweetTable(data, 5); //const[table, setTable] = useState(renderTweetTable(data))\n  //const[comList, setComList] = useState(<p>Topics among <strong>Researchers</strong>, <strong>Designers</strong>, <strong>Software Engineers</strong>, <strong>Others</strong> in your audience this week.</p>)\n\n  /*\r\n  const setState = (key) => {\r\n    var state = {\"r\": activeComs[\"r\"], \"d\": activeComs[\"d\"], \"s\": activeComs[\"s\"], \"o\": activeComs[\"o\"]}\r\n    state[key] = !state[key]\r\n    setActiveComs(state)\r\n    var p = writeComList(state)\r\n    setComList(p)\r\n  }\r\n  */\n\n  /*\r\n  function writeComList(coms){\r\n    var r = <></>\r\n    var d = <></>\r\n    var s = <></>\r\n    var o = <></>\r\n    var num = 0\r\n      if (coms.r){\r\n      r = <strong> Researchers</strong>\r\n      num++\r\n    }\r\n    if (coms.d){\r\n      if (num > 0){d = <>,<strong> Designers</strong></>}\r\n      else{d = <strong> Designers</strong>}\r\n      num++\r\n    }\r\n    if (coms.s){\r\n      if (num > 0){s = <>,<strong> Software Engineers</strong></>}\r\n      else{d = <strong> Software Engineers</strong>}\r\n      num++\r\n    }\r\n    if (coms.o){\r\n      if (num > 0){o = <>,<strong> Others</strong></>}\r\n      else{d = <strong> Others</strong>}\r\n    }\r\n      return <p> Top tweets among{r}{d}{s}{o} in your audience this week.</p>\r\n  }\r\n  */\n\n  useLayoutEffect(() => {//data = organizeData(props.data, 10, activeComs)\n    //setTable(renderTweetTable(data))\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: props.divid,\n      style: {\n        width: \"80%\",\n        height: \"500px\"\n      },\n      children: table\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TopTweets, \"n7/vCynhJvM+pLkyL2DMQUF0odM=\");\n\n_c = TopTweets;\nexport default TopTweets;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopTweets\");","map":{"version":3,"sources":["C:/Users/spenc/Documents/GitHub/hci-com/src/containers/Home/components/TopTweets.tsx"],"names":["React","useLayoutEffect","am4core","am4themes_animated","styled","Card","Tweet","TrendTable","table","TrendTd","td","TrendNum","TrendTrGray","tr","Pop","button","tweetpop","width","maxWidth","maxHeight","useTheme","compare","a","b","value","organizeData","data","num","new_data","key","push","slice","renderTweet","tweet_id","cards","renderTweetTable","r_tweets","p_tweets","o_tweets","r_min","Math","min","length","i","p_min","o_min","TopTweets","props","divid","height"],"mappings":"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","sourcesContent":["import React, { useRef, useLayoutEffect, useState } from 'react';\r\nimport logo from './logo.svg';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport axios from 'axios'\r\nimport { Tweet} from 'react-twitter-widgets'\r\nimport PopoverContent from 'react-bootstrap/esm/PopoverContent';\r\n\r\nconst TrendTable = styled.table`\r\n&&& {\r\n  font-family: arial, sans-serif;\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n}`\r\n\r\nconst TrendTd = styled.td`{\r\n  text-align: left;\r\n  padding: 8px;\r\n}`\r\n\r\nconst TrendNum = styled.td`{\r\n  text-align: right;\r\n  padding: 8px;\r\n  width: 25%;\r\n}`\r\n\r\nconst TrendTrGray = styled.tr `{\r\n  background-color: #dddddd;\r\n}`\r\n\r\nconst Pop = styled.button `{\r\n  background:none;\r\n  border:none;\r\n  margin:0;\r\n  padding:0;\r\n  cursor: pointer;\r\n  color:blue;\r\n}`\r\n\r\nconst tweetpop = {\r\n  width: '275px',\r\n  maxWidth: '275px',\r\n  maxHeight: '400px'\r\n  \r\n};\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nfunction compare( a, b ) {\r\n  if ( a.value < b.value ){\r\n    return -1;\r\n  }\r\n  if ( a.value > b.value ){\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\n\r\nfunction organizeData(data, num){\r\n  var new_data = []\r\n  \r\n  for (const key in data){\r\n    new_data.push(data[key].slice(0, num))\r\n  }\r\n\r\n  return (new_data)\r\n}\r\n\r\nfunction renderTweet(tweet_id){\r\n  return(\r\n    <div key = {tweet_id + \"tt\"}>\r\n    <Tweet tweetId={tweet_id} options={{ width: \"200px\", cards: \"hidden\"}}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction renderTweetTable(data, num){\r\n  var r_tweets = []\r\n  var p_tweets = []\r\n  var o_tweets = []\r\n  for (const key in data){\r\n    if (key == \"r\"){\r\n      var r_min = Math.min(data[key].length, num)\r\n      for (var i = 0; i < r_min; i++){\r\n        r_tweets.push(renderTweet(data[key][i]))\r\n      }\r\n    } else if (key == \"p\"){\r\n      var p_min = Math.min(data[key].length, num)\r\n      for (var i = 0; i < p_min; i++){\r\n        p_tweets.push(renderTweet(data[key][i]))\r\n      }\r\n    } else if (key == \"o\"){\r\n      var o_min = Math.min(data[key].length, num)\r\n      for (var i = 0; i < o_min; i++){\r\n        o_tweets.push(renderTweet(data[key][i]))\r\n      }\r\n    }\r\n  }\r\n  return(\r\n    <div className='columns'>\r\n        <div className='column'>\r\n        <h4>Among researchers</h4>\r\n          <Card style = {tweetpop}>\r\n            {r_tweets}\r\n          </Card>\r\n        </div>\r\n        <div className='column'>\r\n        <h4>Among practitioners</h4>\r\n          <Card style = {tweetpop}>\r\n            {p_tweets}\r\n          </Card>\r\n        </div>\r\n        <div className='column'>\r\n        <h4>Among other publics</h4>\r\n          <Card style = {tweetpop}>\r\n            {o_tweets}\r\n          </Card>\r\n        </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nfunction TopTweets(props) {\r\n  var data = []\r\n  //const [activeComs, setActiveComs] = useState({\"r\": true, \"d\": true, \"s\": true, \"o\": true})\r\n  //data = organizeData(props.data, 10)\r\n  data = props.data\r\n  var table = renderTweetTable(data, 5)\r\n  //const[table, setTable] = useState(renderTweetTable(data))\r\n\r\n  //const[comList, setComList] = useState(<p>Topics among <strong>Researchers</strong>, <strong>Designers</strong>, <strong>Software Engineers</strong>, <strong>Others</strong> in your audience this week.</p>)\r\n\r\n  /*\r\n  const setState = (key) => {\r\n    var state = {\"r\": activeComs[\"r\"], \"d\": activeComs[\"d\"], \"s\": activeComs[\"s\"], \"o\": activeComs[\"o\"]}\r\n    state[key] = !state[key]\r\n    setActiveComs(state)\r\n    var p = writeComList(state)\r\n    setComList(p)\r\n  }\r\n  */\r\n  /*\r\n  function writeComList(coms){\r\n    var r = <></>\r\n    var d = <></>\r\n    var s = <></>\r\n    var o = <></>\r\n    var num = 0\r\n\r\n    if (coms.r){\r\n      r = <strong> Researchers</strong>\r\n      num++\r\n    }\r\n    if (coms.d){\r\n      if (num > 0){d = <>,<strong> Designers</strong></>}\r\n      else{d = <strong> Designers</strong>}\r\n      num++\r\n    }\r\n    if (coms.s){\r\n      if (num > 0){s = <>,<strong> Software Engineers</strong></>}\r\n      else{d = <strong> Software Engineers</strong>}\r\n      num++\r\n    }\r\n    if (coms.o){\r\n      if (num > 0){o = <>,<strong> Others</strong></>}\r\n      else{d = <strong> Others</strong>}\r\n    }\r\n\r\n    return <p> Top tweets among{r}{d}{s}{o} in your audience this week.</p>\r\n  }\r\n  */\r\n\r\n  useLayoutEffect(() => {\r\n    //data = organizeData(props.data, 10, activeComs)\r\n    //setTable(renderTweetTable(data))\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n        <div id={props.divid} style={{ width: \"80%\", height: \"500px\" }}>\r\n         {table}\r\n        </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default TopTweets;"]},"metadata":{},"sourceType":"module"}