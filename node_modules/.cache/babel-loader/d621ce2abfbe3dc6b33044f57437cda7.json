{"ast":null,"code":"import _slicedToArray from \"C:/Users/spenc/Documents/GitHub/hci-com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/spenc/Documents/GitHub/hci-com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\spenc\\\\Documents\\\\GitHub\\\\hci-com\\\\src\\\\containers\\\\Home\\\\components\\\\MyTweets.tsx\",\n    _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//var id = \"634739719\"\n//var id = \"1293416714923683841\"\n//var id = \"192812670\"\n//var id = \"802233409338675200\"\n//var id = \"18256350\"\n//var id = \"2490180804\"\n//var id = \"18670940\"\n//var id = \"486899842\"\n//var id = \"238753895\"\nconst Title = styled.p(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    &&& {\\n    padding: 1em;\\n    font-size: 30px;\\n    font-weight:bold;\\n}\"])));\n_c = Title;\nconst Subtitle = styled.p(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    &&& {\\n    padding: .05em;\\n    font-size: 16px;\\n}\"])));\nconst Retweet = styled.p(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    &&& {\\n    padding: 1em;\\n    font-size: 24px;\\n    font-weight:bold;\\n    margin-left:80px\\n}\"])));\n/*\r\nfunction RenderTweet(tweets, num){\r\n    if (tweets.length < num){\r\n        return (<div></div>);\r\n    } else if (tweets[tweets.length - num]['downstream_r'] + tweets[tweets.length - num]['downstream_n'] <= 0){\r\n        return (<div></div>);\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n                <Card style ={{padding:\"3em\"}}>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Tweet tweetId={tweets[tweets.length - num]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n\r\n                    \r\n                </div>\r\n                <div className='column'>\r\n                    <WaffleChart legend_pos = \"right\" title = {tweets[tweets.length - num]['retweets'].toString()} divid={\"td\".concat(num.toString())} vars = {[{name: \"Researchers\", data: tweets[tweets.length - num]['downstream_r']}, {name: \"Non-researchers\", data: tweets[tweets.length - num]['downstream_n']}]} />\r\n                    <Retweet>\r\n                    Retweets: {tweets[tweets.length - num]['retweets']}\r\n                    </Retweet>\r\n                </div>\r\n            </div>\r\n            </Card>\r\n\r\n            <br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n*/\n\nfunction RenderTweet(tweet_id) {\n  console.log(tweet_id);\n  /*\r\n  return(\r\n      <Tweet tweetId={tweet_id} options={{ width: \"100%\", cards: \"hidden\", conversation: \"none\"}}/>\r\n  )\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: tweet_id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 11\n  }, this);\n}\n\n_c2 = RenderTweet;\n\nfunction MyTweets(props) {\n  _s();\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tweets = _useState4[0],\n        setTweets = _useState4[1];\n\n  var id = props.id;\n  useEffect(() => {\n    axios.get(\"http://localhost:4001/twitter/retweetsWhereUserID/\".concat(id)).then(response => {\n      setTweets(response.data);\n      setLoading(false);\n    }).catch(error => console.error(\"There was an error retrieving the retweets list: \".concat(error)));\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"My Tweets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 16\n    }, this);\n  }\n\n  var col1 = [];\n  var col2 = [];\n  var col3 = [];\n  var max = Math.min(tweets.length, 12);\n\n  for (var i = 0; i < max; i++) {\n    if (i % 3 == 0) {\n      console.log(\"col1\");\n      col1.push(RenderTweet(tweets[i].tweet_id_text));\n    }\n\n    if (i % 3 == 1) {\n      console.log(\"col2\");\n      col2.push(RenderTweet(tweets[i].tweet_id_text));\n    }\n\n    if (i % 3 == 2) {\n      console.log(\"col3\");\n      col3.push(RenderTweet(tweets[i].tweet_id_text));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Tweets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: col1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: col2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: col3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n  /*\r\n  return (\r\n  <div>\r\n  <Card style ={{padding:\"3em\"}}>\r\n      <Title>My Tweets</Title>\r\n          <div className='columns'>\r\n              <div className='column'>\r\n                  <Title>Tweets</Title>\r\n                  <Tweet tweetId={tweets[tweets.length - 1]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n                    \r\n              </div>\r\n              <div className='column'>\r\n                  <Title>Downstream Audience</Title>\r\n                  <WaffleChart title = {tweets[tweets.length - 1]['retweets']} divid=\"td1\" r = {tweets[tweets.length - 1]['downstream_r']} n = {tweets[tweets.length - 1]['downstream_n']}/>\r\n              </div>\r\n          </div>\r\n            <br/>\r\n          <div className='columns'>\r\n              <div className='column'>\r\n                  <Tweet tweetId={tweets[tweets.length - 2]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n              </div>\r\n              <div className='column'>\r\n                  <WaffleChart title = {tweets[tweets.length - 2]['retweets']} divid=\"td2\" r = {tweets[tweets.length - 2]['downstream_r']} n = {tweets[tweets.length - 2]['downstream_n']}/>\r\n              </div>\r\n          </div>\r\n            <br/>\r\n          <div className='columns'>\r\n              <div className='column'>\r\n                  <Tweet tweetId={tweets[tweets.length - 3]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n              </div>\r\n              <div className='column'>\r\n                  <WaffleChart title = {tweets[tweets.length - 3]['retweets']} divid=\"td3\" r = {tweets[tweets.length - 3]['downstream_r']} n = {tweets[tweets.length - 3]['downstream_n']}/>\r\n              </div>\r\n          </div>\r\n            <br/>\r\n          <div className='columns'>\r\n              <div className='column'>\r\n                  <Tweet tweetId={tweets[tweets.length - 4]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n              </div>\r\n              <div className='column'>\r\n                  <WaffleChart title = {tweets[tweets.length - 4]['retweets']} divid=\"td4\" r = {tweets[tweets.length - 4]['downstream_r']} n = {tweets[tweets.length - 4]['downstream_n']}/>\r\n              </div>\r\n          </div>\r\n            <br/>\r\n          <div className='columns'>\r\n              <div className='column'>\r\n                  <Tweet tweetId={tweets[tweets.length - 5]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n              </div>\r\n              <div className='column'>\r\n                  <WaffleChart title = {tweets[tweets.length - 5]['retweets']} divid=\"td5\" r = {tweets[tweets.length - 5]['downstream_r']} n = {tweets[tweets.length - 5]['downstream_n']}/>\r\n              </div>\r\n          </div>\r\n    </Card>\r\n  </div>\r\n  );*/\n}\n\n_s(MyTweets, \"2eC+Id8v39Nmueex3OQO1vL/H3E=\");\n\n_c3 = MyTweets;\nexport default MyTweets;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"RenderTweet\");\n$RefreshReg$(_c3, \"MyTweets\");","map":{"version":3,"sources":["C:/Users/spenc/Documents/GitHub/hci-com/src/containers/Home/components/MyTweets.tsx"],"names":["React","useEffect","useState","styled","axios","Title","p","Subtitle","Retweet","RenderTweet","tweet_id","console","log","MyTweets","props","isLoading","setLoading","tweets","setTweets","id","get","then","response","data","catch","error","col1","col2","col3","max","Math","min","length","i","push","tweet_id_text"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport WaffleChart from './WaffleChart';\r\nimport axios from 'axios'\r\nimport { Tweet} from 'react-twitter-widgets'\r\n\r\n//var id = \"634739719\"\r\n//var id = \"1293416714923683841\"\r\n//var id = \"192812670\"\r\n//var id = \"802233409338675200\"\r\n//var id = \"18256350\"\r\n//var id = \"2490180804\"\r\n//var id = \"18670940\"\r\n//var id = \"486899842\"\r\n//var id = \"238753895\"\r\n\r\nconst Title = styled.p`\r\n    &&& {\r\n    padding: 1em;\r\n    font-size: 30px;\r\n    font-weight:bold;\r\n}`\r\n\r\nconst Subtitle = styled.p`\r\n    &&& {\r\n    padding: .05em;\r\n    font-size: 16px;\r\n}`\r\n\r\nconst Retweet = styled.p`\r\n    &&& {\r\n    padding: 1em;\r\n    font-size: 24px;\r\n    font-weight:bold;\r\n    margin-left:80px\r\n}`\r\n/*\r\nfunction RenderTweet(tweets, num){\r\n    if (tweets.length < num){\r\n        return (<div></div>);\r\n    } else if (tweets[tweets.length - num]['downstream_r'] + tweets[tweets.length - num]['downstream_n'] <= 0){\r\n        return (<div></div>);\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n                <Card style ={{padding:\"3em\"}}>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Tweet tweetId={tweets[tweets.length - num]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n\r\n                    \r\n                </div>\r\n                <div className='column'>\r\n                    <WaffleChart legend_pos = \"right\" title = {tweets[tweets.length - num]['retweets'].toString()} divid={\"td\".concat(num.toString())} vars = {[{name: \"Researchers\", data: tweets[tweets.length - num]['downstream_r']}, {name: \"Non-researchers\", data: tweets[tweets.length - num]['downstream_n']}]} />\r\n                    <Retweet>\r\n                    Retweets: {tweets[tweets.length - num]['retweets']}\r\n                    </Retweet>\r\n                </div>\r\n            </div>\r\n            </Card>\r\n\r\n            <br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n*/\r\n\r\nfunction RenderTweet(tweet_id){\r\n    console.log(tweet_id)\r\n    /*\r\n    return(\r\n        <Tweet tweetId={tweet_id} options={{ width: \"100%\", cards: \"hidden\", conversation: \"none\"}}/>\r\n    )\r\n    */\r\n   return(<p>{tweet_id}</p>)\r\n}\r\n\r\n\r\n\r\n\r\nfunction MyTweets(props) {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [tweets, setTweets] = useState([]);\r\n    var id = props.id\r\n  \r\n    useEffect(() => {\r\n        axios\r\n        .get(`http://localhost:4001/twitter/retweetsWhereUserID/${id}`)\r\n        .then(response => {\r\n          setTweets(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch(error => console.error(`There was an error retrieving the retweets list: ${error}`));\r\n      }, []);\r\n\r\n      if (isLoading) {\r\n        return <div>\r\n\r\n            <Title>My Tweets</Title>\r\n            <p>Loading...</p>\r\n \r\n        </div>\r\n      }\r\n\r\n      var col1 = []\r\n      var col2 = []\r\n      var col3 = []\r\n\r\n      var max = Math.min(tweets.length, 12)\r\n\r\n      for (var i = 0; i < max; i++){\r\n        if (i % 3 == 0){\r\n            console.log(\"col1\")\r\n            col1.push(RenderTweet(tweets[i].tweet_id_text))\r\n        }\r\n        if (i % 3 == 1){\r\n            console.log(\"col2\")\r\n            col2.push(RenderTweet(tweets[i].tweet_id_text))\r\n        }\r\n        if (i % 3 == 2){\r\n            console.log(\"col3\")\r\n            col3.push(RenderTweet(tweets[i].tweet_id_text))\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div>\r\n            <Title>Tweets</Title>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    {col1}\r\n                </div>\r\n                <div className='column'>\r\n                    {col2}\r\n                </div>\r\n                <div className='column'>\r\n                    {col3}\r\n                </div>\r\n            </div>\r\n        \r\n        \r\n        </div>\r\n        );\r\n    \r\n    /*\r\n    return (\r\n<div>\r\n    <Card style ={{padding:\"3em\"}}>\r\n        <Title>My Tweets</Title>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Title>Tweets</Title>\r\n                    <Tweet tweetId={tweets[tweets.length - 1]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n\r\n                    \r\n                </div>\r\n                <div className='column'>\r\n                    <Title>Downstream Audience</Title>\r\n                    <WaffleChart title = {tweets[tweets.length - 1]['retweets']} divid=\"td1\" r = {tweets[tweets.length - 1]['downstream_r']} n = {tweets[tweets.length - 1]['downstream_n']}/>\r\n                </div>\r\n            </div>\r\n\r\n            <br/>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Tweet tweetId={tweets[tweets.length - 2]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n                </div>\r\n                <div className='column'>\r\n                    <WaffleChart title = {tweets[tweets.length - 2]['retweets']} divid=\"td2\" r = {tweets[tweets.length - 2]['downstream_r']} n = {tweets[tweets.length - 2]['downstream_n']}/>\r\n                </div>\r\n            </div>\r\n\r\n            <br/>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Tweet tweetId={tweets[tweets.length - 3]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n                </div>\r\n                <div className='column'>\r\n                    <WaffleChart title = {tweets[tweets.length - 3]['retweets']} divid=\"td3\" r = {tweets[tweets.length - 3]['downstream_r']} n = {tweets[tweets.length - 3]['downstream_n']}/>\r\n                </div>\r\n            </div>\r\n\r\n            <br/>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Tweet tweetId={tweets[tweets.length - 4]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n                </div>\r\n                <div className='column'>\r\n                    <WaffleChart title = {tweets[tweets.length - 4]['retweets']} divid=\"td4\" r = {tweets[tweets.length - 4]['downstream_r']} n = {tweets[tweets.length - 4]['downstream_n']}/>\r\n                </div>\r\n            </div>\r\n\r\n            <br/>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Tweet tweetId={tweets[tweets.length - 5]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n                </div>\r\n                <div className='column'>\r\n                    <WaffleChart title = {tweets[tweets.length - 5]['retweets']} divid=\"td5\" r = {tweets[tweets.length - 5]['downstream_r']} n = {tweets[tweets.length - 5]['downstream_n']}/>\r\n                </div>\r\n            </div>\r\n\r\n    </Card>\r\n\r\n</div>\r\n);*/\r\n}\r\n\r\n\r\nexport default MyTweets;"]},"metadata":{},"sourceType":"module"}