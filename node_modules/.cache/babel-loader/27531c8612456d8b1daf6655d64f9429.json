{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spenc\\\\Documents\\\\GitHub\\\\hci-com\\\\src\\\\containers\\\\Home\\\\components\\\\CommunityLine.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useLayoutEffect } from 'react';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nam4core.useTheme(am4themes_animated);\n\nfunction date_format(s) {\n  s = s.substring(0, 10);\n  s = s.replaceAll('/', '-');\n  return s;\n}\n\nfunction CommunityLine(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const chart = useRef(null);\n  var rs = 3600;\n  var nrs = 6400;\n  useLayoutEffect(_s(() => {\n    _s();\n\n    let x = am4core.create(\"chartdivcl\", am4charts.XYChart);\n    x.paddingRight = 20;\n    x.paddingLeft = 20;\n    /* Chart code */\n    // Themes begin\n\n    am4core.useTheme(am4themes_animated); // Themes end\n    // Chart\n\n    let chart = am4core.create(\"chartdivcl\", am4charts.XYChart); // Add data\n\n    chart.data = [{\n      \"date\": \"2020-06-01\",\n      \"value\": 10000\n    }, {\n      \"date\": \"2020-06-10\",\n      \"value\": 10091\n    }, {\n      \"date\": \"2020-06-20\",\n      \"value\": 10514\n    }, {\n      \"date\": \"2020-07-01\",\n      \"value\": 11111\n    }, {\n      \"date\": \"2020-07-10\",\n      \"value\": 11138\n    }, {\n      \"date\": \"2020-07-20\",\n      \"value\": 13136\n    }, {\n      \"date\": \"2020-08-01\",\n      \"value\": 13204\n    }, {\n      \"date\": \"2020-08-10\",\n      \"value\": 13609\n    }, {\n      \"date\": \"2020-08-20\",\n      \"value\": 14609\n    }, {\n      \"date\": \"2020-09-01\",\n      \"value\": 16609\n    }, {\n      \"date\": \"2020-09-10\",\n      \"value\": 17111\n    }, {\n      \"date\": \"2020-09-20\",\n      \"value\": 17911\n    }];\n    axios.get(\"http://localhost:4001/twitter/communityAll\").then(response => {\n      // Update the books state\n      var com = response.data;\n      var coms = [];\n\n      for (let i = 0; i < com.length; i++) {\n        coms.push({\n          \"date\": date_format(com[i]['timestamp']),\n          \"value\": com[i]['total_followers']\n        });\n      }\n\n      chart.data = coms; //setBooks(response.data)\n      // Update loading state\n      //setLoading(false)\n    }).catch(error => console.error(\"There was an error retrieving the user list: \".concat(error))); // Create axes\n\n    var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    dateAxis.renderer.grid.template.location = 0;\n    dateAxis.renderer.minGridDistance = 50;\n    var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.title.text = \"Followers\"; // Create series\n\n    var series = chart.series.push(new am4charts.LineSeries());\n    series.dataFields.valueY = \"value\";\n    series.dataFields.dateX = \"date\";\n    series.tooltipText = \"{valueY}\";\n    series.strokeWidth = 3;\n    series.fillOpacity = 0.5;\n    series.minBulletDistance = 15; // Add vertical scrollbar\n    // chart.scrollbarY = new am4core.Scrollbar();\n    //chart.scrollbarY.marginLeft = 0;\n    // Add cursor\n\n    chart.cursor = new am4charts.XYCursor();\n    valueAxis.cursorTooltipEnabled = false; //chart.cursor.behavior = \"zoomY\";\n\n    chart.cursor.lineX.disabled = true;\n    chart.cursor.lineY.disabled = true; // Drop-shaped tooltips\n\n    series.tooltip.background.cornerRadius = 20;\n    series.tooltip.background.strokeOpacity = 0;\n    series.tooltip.pointerOrientation = \"vertical\";\n    series.tooltip.label.minWidth = 40;\n    series.tooltip.label.minHeight = 40;\n    series.tooltip.label.textAlign = \"middle\"; // Make bullets grow on hover\n\n    var bullet = series.bullets.push(new am4charts.CircleBullet());\n    bullet.circle.strokeWidth = 2;\n    bullet.circle.radius = 4;\n    bullet.circle.fill = am4core.color(\"#fff\");\n    var bullethover = bullet.states.create(\"hover\");\n    bullethover.properties.scale = 1.3;\n  }, \"tFi1QeP7MrrEQ5RfFlomBKZonOc=\", false, function () {\n    return [am4core.useTheme];\n  }), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chartdivcl\",\n      style: {\n        width: \"75%\",\n        height: \"300px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(CommunityLine, \"a4NZWiQVwnDvUnwE0MxHAIGLIqg=\");\n\n_c = CommunityLine;\n; // end am4core.ready()\n\nexport default CommunityLine;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommunityLine\");","map":{"version":3,"sources":["C:/Users/spenc/Documents/GitHub/hci-com/src/containers/Home/components/CommunityLine.tsx"],"names":["React","useRef","useLayoutEffect","am4core","am4charts","am4themes_animated","axios","useTheme","date_format","s","substring","replaceAll","CommunityLine","props","chart","rs","nrs","x","create","XYChart","paddingRight","paddingLeft","data","get","then","response","com","coms","i","length","push","catch","error","console","dateAxis","xAxes","DateAxis","renderer","grid","template","location","minGridDistance","valueAxis","yAxes","ValueAxis","title","text","series","LineSeries","dataFields","valueY","dateX","tooltipText","strokeWidth","fillOpacity","minBulletDistance","cursor","XYCursor","cursorTooltipEnabled","lineX","disabled","lineY","tooltip","background","cornerRadius","strokeOpacity","pointerOrientation","label","minWidth","minHeight","textAlign","bullet","bullets","CircleBullet","circle","radius","fill","color","bullethover","states","properties","scale","width","height"],"mappings":"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","sourcesContent":["import React, { useRef, useLayoutEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport axios from 'axios'\r\nimport { ContactlessOutlined } from '@material-ui/icons';\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nfunction date_format(s: string) {\r\n  s = s.substring(0, 10);\r\n  s = s.replaceAll('/', '-');\r\n  return s;\r\n}\r\n\r\nfunction CommunityLine(props) {\r\n  const chart = useRef(null);\r\n\r\n  var rs = 3600\r\n  var nrs = 6400\r\n\r\n  useLayoutEffect(() => {\r\n    let x = am4core.create(\"chartdivcl\", am4charts.XYChart);\r\n\r\n    x.paddingRight = 20;\r\n    x.paddingLeft = 20;\r\n\r\n    /* Chart code */\r\n// Themes begin\r\nam4core.useTheme(am4themes_animated);\r\n// Themes end\r\n\r\n// Chart\r\nlet chart = am4core.create( \"chartdivcl\", am4charts.XYChart );\r\n\r\n// Add data\r\nchart.data = [ {\r\n  \"date\": \"2020-06-01\",\r\n  \"value\": 10000\r\n}, {\r\n  \"date\": \"2020-06-10\",\r\n  \"value\": 10091\r\n},\r\n{\r\n  \"date\": \"2020-06-20\",\r\n  \"value\": 10514\r\n},\r\n{\r\n  \"date\": \"2020-07-01\",\r\n  \"value\": 11111\r\n}, {\r\n  \"date\": \"2020-07-10\",\r\n  \"value\": 11138\r\n},\r\n{\r\n  \"date\": \"2020-07-20\",\r\n  \"value\": 13136\r\n},\r\n{\r\n  \"date\": \"2020-08-01\",\r\n  \"value\": 13204\r\n}, {\r\n  \"date\": \"2020-08-10\",\r\n  \"value\": 13609\r\n},\r\n{\r\n  \"date\": \"2020-08-20\",\r\n  \"value\": 14609\r\n},\r\n{\r\n  \"date\": \"2020-09-01\",\r\n  \"value\": 16609\r\n}, {\r\n  \"date\": \"2020-09-10\",\r\n  \"value\": 17111\r\n},\r\n{\r\n  \"date\": \"2020-09-20\",\r\n  \"value\": 17911\r\n},\r\n   ];\r\n\r\n  axios\r\n    .get(`http://localhost:4001/twitter/communityAll`)\r\n    .then(response => {\r\n      // Update the books state\r\n      var com = response.data;\r\n      var coms:object[] = [];\r\n      for (let i = 0; i < com.length; i++){\r\n        coms.push({\"date\": date_format(com[i]['timestamp']),\r\n                    \"value\": com[i]['total_followers']})\r\n      }\r\n      chart.data = coms\r\n      //setBooks(response.data)\r\n\r\n      // Update loading state\r\n      //setLoading(false)\r\n    })\r\n    .catch(error => console.error(`There was an error retrieving the user list: ${error}`))\r\n\r\n// Create axes\r\nvar dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\ndateAxis.renderer.grid.template.location = 0;\r\ndateAxis.renderer.minGridDistance = 50;\r\n\r\nvar valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\nvalueAxis.title.text = \"Followers\"\r\n\r\n// Create series\r\nvar series = chart.series.push(new am4charts.LineSeries());\r\nseries.dataFields.valueY = \"value\";\r\nseries.dataFields.dateX = \"date\";\r\nseries.tooltipText = \"{valueY}\";\r\nseries.strokeWidth = 3;\r\nseries.fillOpacity = 0.5;\r\nseries.minBulletDistance = 15;\r\n\r\n// Add vertical scrollbar\r\n// chart.scrollbarY = new am4core.Scrollbar();\r\n//chart.scrollbarY.marginLeft = 0;\r\n\r\n// Add cursor\r\nchart.cursor = new am4charts.XYCursor();\r\nvalueAxis.cursorTooltipEnabled = false;\r\n//chart.cursor.behavior = \"zoomY\";\r\nchart.cursor.lineX.disabled = true;\r\nchart.cursor.lineY.disabled = true;\r\n\r\n\r\n\r\n// Drop-shaped tooltips\r\nseries.tooltip.background.cornerRadius = 20;\r\nseries.tooltip.background.strokeOpacity = 0;\r\nseries.tooltip.pointerOrientation = \"vertical\";\r\nseries.tooltip.label.minWidth = 40;\r\nseries.tooltip.label.minHeight = 40;\r\nseries.tooltip.label.textAlign = \"middle\";\r\n\r\n// Make bullets grow on hover\r\nvar bullet = series.bullets.push(new am4charts.CircleBullet());\r\nbullet.circle.strokeWidth = 2;\r\nbullet.circle.radius = 4;\r\nbullet.circle.fill = am4core.color(\"#fff\");\r\n\r\nvar bullethover = bullet.states.create(\"hover\");\r\nbullethover.properties.scale = 1.3;\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n        <div id=\"chartdivcl\" style={{ width: \"75%\", height: \"300px\" }}></div>\r\n    </div>\r\n    \r\n  );\r\n  \r\n  }; // end am4core.ready()\r\n\r\nexport default CommunityLine;"]},"metadata":{},"sourceType":"module"}