{"ast":null,"code":"import _slicedToArray from \"C:/Users/spenc/Documents/GitHub/hci-com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/spenc/Documents/GitHub/hci-com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\spenc\\\\Documents\\\\GitHub\\\\hci-com\\\\src\\\\containers\\\\Home\\\\components\\\\IndividualStats.tsx\",\n    _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Card from 'react-bootstrap/Card';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //var id = \"634739719\"\n//var id = \"1293416714923683841\"\n//var id = \"192812670\"\n//var id = \"802233409338675200\"\n//var id = \"18256350\"\n//var id = \"2490180804\"\n//var id = \"18670940\"\n//var id = \"486899842\"\n//var id = \"238753895\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar id = \"247943631\";\nconst Title = styled.p(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    &&& {\\n    font-size: 30px;\\n    font-weight:bold;\\n}\"])));\n_c = Title;\nconst Subtitle = styled.p(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    &&& {\\n    padding: .05em;\\n    font-size: 24px;\\n}\"])));\n_c2 = Subtitle;\nconst Poptitle = styled.p(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    &&& {\\n    padding: 0.3em;\\n    font-size: 24px;\\n}\"])));\nconst vizpop = {\n  width: '860px',\n  maxWidth: 'none'\n};\nconst linepop = {\n  width: '700px',\n  maxWidth: 'none'\n};\n\nfunction IndividualStats(props) {\n  _s();\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        user = _useState4[0],\n        setUser = _useState4[1];\n  /*\r\n  const [isLoading2, setLoading2] = useState(true);\r\n  const [med, setMed] = useState([]);\r\n  */\n\n\n  useEffect(() => {\n    axios.get(\"http://localhost:4001/twitter/userWhereID/\".concat(id)).then(response => {\n      setUser(response.data);\n      console.log(response);\n      console.log(user);\n      console.log(user[0]);\n      console.log(user[0]['followers_class']);\n      console.log(JSON.parse(user[0]['followers_class']));\n      setLoading(false);\n    }).catch(error => console.error(\"There was an error retrieving the retweets list: \".concat(error)));\n    /*\r\n    axios\r\n    .get(`http://localhost:4001/twitter/medsnaps`)\r\n    .then(response => {\r\n      setMed(response.data);\r\n      setLoading2(false);\r\n    })\r\n    .catch(error => console.error(`There was an error retrieving the median list: ${error}`));\r\n    */\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"My Tweets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 16\n    }, this);\n  }\n  /*\r\n  //Followers Popover\r\n  const pop_followers = (\r\n    <Popover id=\"popover-basic\" placement=\"bottom\" style={vizpop}>\r\n        <Popover.Title>Median Followers</Popover.Title>\r\n      <Popover.Content>\r\n      <Card>\r\n        <div className=\"columns\">\r\n        <div className=\"column\">\r\n        <Poptitle>Community Median</Poptitle>\r\n      <WaffleChart legend_pos = \"right\" divid = \"medfollowers\" vars = {[{name: \"Researchers\", data: med[med.length - 1]['researchers']}, {name: \"Non-researchers\", data: med[med.length-1]['non_researchers']}]} r = {med[med.length - 1]['researchers']} n = {med[med.length - 1]['non_researchers']} />\r\n      </div>\r\n      <div className=\"column\">\r\n        <Poptitle>My Followers</Poptitle>\r\n        <WaffleChart divid = \"myfollowerscomp\" vars = {[{name: \"Researchers\", data: snaps[snaps.length - 1]['researchers']}, {name: \"Non-researchers\", data: snaps[snaps.length-1]['non_researchers']}]} />\r\n        </div>\r\n        </div>\r\n        </Card>\r\n      </Popover.Content>\r\n    </Popover>\r\n  );\r\n  \r\n  const PopFollowers = () => (\r\n    <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={pop_followers}>\r\n    <Button variant=\"outline-primary\">Compare to Community Median</Button>\r\n      \r\n    </OverlayTrigger>\r\n  );\r\n    //Downstream Popover\r\n  const pop_downstream = (\r\n    <Popover id=\"popover-basic\" placement=\"top\" style={vizpop}>\r\n        <Popover.Title>Median Downstream</Popover.Title>\r\n      <Popover.Content>\r\n        <Card>\r\n        <div className=\"columns\">\r\n        <div className=\"column\">\r\n        <Poptitle>Community Median</Poptitle>\r\n        <WaffleChart legend_pos = \"right\" divid = \"meddownstream\" vars = {[{name: \"Researchers\", data: med[med.length - 1]['median_down_r']}, {name: \"Non-researchers\", data: med[med.length-1]['median_down_n']}]} />\r\n        </div>\r\n        <div className=\"column\">\r\n        <Poptitle>My Downstream</Poptitle>\r\n        <WaffleChart divid = \"mydownstreamcomp\" vars = {[{name: \"Researchers\", data: snaps[snaps.length - 1]['median_down_r']}, {name: \"Non-researchers\", data: snaps[snaps.length-1]['median_down_n']}]} />\r\n        </div>\r\n        </div>\r\n        </Card>\r\n      </Popover.Content>\r\n    </Popover>\r\n  );\r\n  \r\n  const PopDownstream = () => (\r\n    <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={pop_downstream}>\r\n    <Button variant=\"outline-primary\">Compare to Community Median</Button>\r\n      \r\n    </OverlayTrigger>\r\n  );\r\n    //Growth Popover\r\n  const pop_growth = (\r\n    <Popover id=\"popover-basic\" placement=\"top\" style={linepop}>\r\n      <Popover.Content>\r\n          <Poptitle>Community Median</Poptitle>\r\n      <LineChart data = {snaps} med = {med} id = {\"indlinemed\"} dv = \"total_followers\" yaxis = \"Followers\"/>\r\n        </Popover.Content>\r\n    </Popover>\r\n  );\r\n  \r\n  const PopGrowth= () => (\r\n    <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={pop_growth}>\r\n    <Button variant=\"outline-primary\">Compare to Community Median</Button>\r\n    </OverlayTrigger>\r\n  );\r\n    //Tweet Popover\r\n  const pop_tweet = (\r\n    <Popover id=\"popover-basic\" placement=\"top\" style={linepop}>\r\n      <Popover.Content>\r\n      <Poptitle>Community Median</Poptitle>\r\n      <LineChart data = {snaps} med = {med} id = {\"indlinemed2\"} dv = \"total_tweets\" yaxis = \"Tweets\"/>\r\n      </Popover.Content>\r\n    </Popover>\r\n  );\r\n  \r\n  const PopTweet= () => (\r\n    <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={pop_tweet}>\r\n    <Button variant=\"outline-primary\">Compare to Community Median</Button>\r\n    </OverlayTrigger>\r\n  ); */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        padding: \"2em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"My Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: /*#__PURE__*/_jsxDEV(Subtitle, {\n            children: \"My Followers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: /*#__PURE__*/_jsxDEV(Subtitle, {\n            children: \"My Downstream Audience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 1\n  }, this);\n}\n\n_s(IndividualStats, \"VCoUEuyOMy4IgCJOs5U7nYxhVyQ=\");\n\n_c3 = IndividualStats;\n;\nexport default IndividualStats;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Subtitle\");\n$RefreshReg$(_c3, \"IndividualStats\");","map":{"version":3,"sources":["C:/Users/spenc/Documents/GitHub/hci-com/src/containers/Home/components/IndividualStats.tsx"],"names":["React","useEffect","useState","styled","Card","axios","id","Title","p","Subtitle","Poptitle","vizpop","width","maxWidth","linepop","IndividualStats","props","isLoading","setLoading","user","setUser","get","then","response","data","console","log","JSON","parse","catch","error","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport Overlay from 'react-bootstrap/Overlay'\r\nimport Button from 'react-bootstrap/Button'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport MyWaffle from './MyWaffle';\r\nimport MyDownstream from './MyDownstream';\r\nimport WaffleChart from './WaffleChart';\r\nimport axios from 'axios';\r\nimport LineChart from './LineChart';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n//var id = \"634739719\"\r\n//var id = \"1293416714923683841\"\r\n//var id = \"192812670\"\r\n//var id = \"802233409338675200\"\r\n//var id = \"18256350\"\r\n//var id = \"2490180804\"\r\n//var id = \"18670940\"\r\n//var id = \"486899842\"\r\n//var id = \"238753895\"\r\nvar id = \"247943631\"\r\n\r\nconst Title = styled.p`\r\n    &&& {\r\n    font-size: 30px;\r\n    font-weight:bold;\r\n}`\r\n\r\nconst Subtitle = styled.p`\r\n    &&& {\r\n    padding: .05em;\r\n    font-size: 24px;\r\n}`\r\n\r\nconst Poptitle = styled.p`\r\n    &&& {\r\n    padding: 0.3em;\r\n    font-size: 24px;\r\n}`\r\n\r\nconst vizpop = {\r\n    width: '860px',\r\n    maxWidth: 'none'\r\n  };\r\n\r\nconst linepop = {\r\n    width: '700px',\r\n    maxWidth: 'none'\r\n  };\r\n    \r\n\r\nfunction IndividualStats(props) {\r\n    \r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [user, setUser] = useState([]);\r\n\r\n    /*\r\n    const [isLoading2, setLoading2] = useState(true);\r\n    const [med, setMed] = useState([]);\r\n    */\r\n\r\n    useEffect(() => {\r\n        axios\r\n        .get(`http://localhost:4001/twitter/userWhereID/${id}`)\r\n        .then(response => {\r\n          setUser(response.data);\r\n          console.log(response)\r\n          console.log(user)\r\n          console.log(user[0])\r\n          console.log(user[0]['followers_class'])\r\n          console.log(JSON.parse(user[0]['followers_class']))\r\n          setLoading(false);\r\n        })\r\n        .catch(error => console.error(`There was an error retrieving the retweets list: ${error}`));\r\n\r\n        /*\r\n        axios\r\n        .get(`http://localhost:4001/twitter/medsnaps`)\r\n        .then(response => {\r\n          setMed(response.data);\r\n          setLoading2(false);\r\n        })\r\n        .catch(error => console.error(`There was an error retrieving the median list: ${error}`));\r\n        */\r\n\r\n      }, []);\r\n\r\n      if (isLoading) {\r\n        return <div>\r\n        <Card>\r\n            <Title>My Tweets</Title>\r\n            <p>Loading...</p>\r\n        </Card>\r\n        </div>\r\n      }\r\n      \r\n      /*\r\n      //Followers Popover\r\n      const pop_followers = (\r\n        <Popover id=\"popover-basic\" placement=\"bottom\" style={vizpop}>\r\n            <Popover.Title>Median Followers</Popover.Title>\r\n          <Popover.Content>\r\n          <Card>\r\n            <div className=\"columns\">\r\n            <div className=\"column\">\r\n            <Poptitle>Community Median</Poptitle>\r\n          <WaffleChart legend_pos = \"right\" divid = \"medfollowers\" vars = {[{name: \"Researchers\", data: med[med.length - 1]['researchers']}, {name: \"Non-researchers\", data: med[med.length-1]['non_researchers']}]} r = {med[med.length - 1]['researchers']} n = {med[med.length - 1]['non_researchers']} />\r\n          </div>\r\n          <div className=\"column\">\r\n            <Poptitle>My Followers</Poptitle>\r\n            <WaffleChart divid = \"myfollowerscomp\" vars = {[{name: \"Researchers\", data: snaps[snaps.length - 1]['researchers']}, {name: \"Non-researchers\", data: snaps[snaps.length-1]['non_researchers']}]} />\r\n            </div>\r\n            </div>\r\n            </Card>\r\n          </Popover.Content>\r\n        </Popover>\r\n      );\r\n      \r\n      const PopFollowers = () => (\r\n        <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={pop_followers}>\r\n        <Button variant=\"outline-primary\">Compare to Community Median</Button>\r\n          \r\n        </OverlayTrigger>\r\n      );\r\n\r\n      //Downstream Popover\r\n      const pop_downstream = (\r\n        <Popover id=\"popover-basic\" placement=\"top\" style={vizpop}>\r\n            <Popover.Title>Median Downstream</Popover.Title>\r\n          <Popover.Content>\r\n            <Card>\r\n            <div className=\"columns\">\r\n            <div className=\"column\">\r\n            <Poptitle>Community Median</Poptitle>\r\n            <WaffleChart legend_pos = \"right\" divid = \"meddownstream\" vars = {[{name: \"Researchers\", data: med[med.length - 1]['median_down_r']}, {name: \"Non-researchers\", data: med[med.length-1]['median_down_n']}]} />\r\n            </div>\r\n            <div className=\"column\">\r\n            <Poptitle>My Downstream</Poptitle>\r\n            <WaffleChart divid = \"mydownstreamcomp\" vars = {[{name: \"Researchers\", data: snaps[snaps.length - 1]['median_down_r']}, {name: \"Non-researchers\", data: snaps[snaps.length-1]['median_down_n']}]} />\r\n            </div>\r\n            </div>\r\n            </Card>\r\n          </Popover.Content>\r\n        </Popover>\r\n      );\r\n      \r\n      const PopDownstream = () => (\r\n        <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={pop_downstream}>\r\n        <Button variant=\"outline-primary\">Compare to Community Median</Button>\r\n          \r\n        </OverlayTrigger>\r\n      );\r\n\r\n      //Growth Popover\r\n      const pop_growth = (\r\n        <Popover id=\"popover-basic\" placement=\"top\" style={linepop}>\r\n          <Popover.Content>\r\n\r\n            <Poptitle>Community Median</Poptitle>\r\n          <LineChart data = {snaps} med = {med} id = {\"indlinemed\"} dv = \"total_followers\" yaxis = \"Followers\"/>\r\n\r\n          </Popover.Content>\r\n        </Popover>\r\n      );\r\n      \r\n      const PopGrowth= () => (\r\n        <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={pop_growth}>\r\n        <Button variant=\"outline-primary\">Compare to Community Median</Button>\r\n        </OverlayTrigger>\r\n      );\r\n\r\n      //Tweet Popover\r\n      const pop_tweet = (\r\n        <Popover id=\"popover-basic\" placement=\"top\" style={linepop}>\r\n          <Popover.Content>\r\n          <Poptitle>Community Median</Poptitle>\r\n          <LineChart data = {snaps} med = {med} id = {\"indlinemed2\"} dv = \"total_tweets\" yaxis = \"Tweets\"/>\r\n          </Popover.Content>\r\n        </Popover>\r\n      );\r\n      \r\n      const PopTweet= () => (\r\n        <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={pop_tweet}>\r\n        <Button variant=\"outline-primary\">Compare to Community Median</Button>\r\n        </OverlayTrigger>\r\n      ); */\r\n\r\n      \r\n\r\n      return(\r\n\r\n<div>\r\n    <Card style ={{padding:\"2em\"}}>\r\n        <Title>My Statistics</Title>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Subtitle>My Followers</Subtitle>\r\n                    {/*<WaffleChart divid = \"myfollowers\" data = {user['followers_class']} />*/}\r\n                    {/*<PopFollowers/>*/}\r\n                    \r\n                </div>\r\n                <div className='column'>\r\n                    <Subtitle>My Downstream Audience</Subtitle>\r\n                    {/*<WaffleChart divid = \"mydownstream\" data = {user['followers_class']} />*/}\r\n                    {/*<PopDownstream/>*/}\r\n                </div>\r\n            </div>\r\n\r\n            <br/>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n\r\n                </div>\r\n                <div className='column'>\r\n\r\n                </div>\r\n            </div>\r\n    </Card>\r\n    <br/>\r\n\r\n</div>\r\n      );\r\n};\r\n\r\n\r\nexport default IndividualStats;"]},"metadata":{},"sourceType":"module"}