{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spenc\\\\Documents\\\\GitHub\\\\hci-com\\\\src\\\\containers\\\\Home\\\\components\\\\IconArray.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useLayoutEffect } from 'react';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar user_id = \"634739719\";\nam4core.useTheme(am4themes_animated);\n/*\r\nvar rd_grad = new am4core.LinearGradient();\r\nrd_grad.addColor(am4core.color(\"#9EFA99\"));\r\nrd_grad.addColor(am4core.color(\"#7BD2FA\"));\r\nrd_grad.rotation = 45\r\n\r\n\r\nvar rs_grad = new am4core.LinearGradient();\r\nrs_grad.addColor(am4core.color(\"#FA5F3A\"));\r\nrs_grad.addColor(am4core.color(\"#9EFA99\"));\r\nrs_grad.rotation = 45\r\n\r\nvar ds_grad = new am4core.LinearGradient();\r\nds_grad.addColor(am4core.color(\"#7BD2FA\"));\r\nds_grad.addColor(am4core.color(\"#FA5F3A\"));\r\nds_grad.rotation = 45\r\n\r\nvar rds_grad = new am4core.LinearGradient();\r\nrds_grad.addColor(am4core.color(\"#9EFA99\"));\r\nrds_grad.addColor(am4core.color(\"#7BD2FA\"));\r\nrds_grad.addColor(am4core.color(\"#FA5F3A\"));\r\nrds_grad.rotation = 45\r\n\r\nconst series_dict = {\r\n  r: {col: am4core.color( \"#9EFA99\" ),\r\n        name: \"Researchers\"\r\n       },\r\n  d: {col: am4core.color( \"#7BD2FA\" ),\r\n       name: \"Designers\"\r\n      },\r\n  s: {col: am4core.color( \"#FA5F3A\" ),\r\n       name: \"Software Engineers\"\r\n      },\r\n  o: {col: am4core.color( \"#FA9810\" ),\r\n  name: \"Other Publics\"\r\n },\r\n  rd: {col: rd_grad,\r\n  name: \"Researcher/Designers\"\r\n },\r\n rs: {col: rs_grad,\r\n  name: \"Researcher/Engineers\"\r\n },\r\n ds: {col: ds_grad,\r\n  name: \"Designer/Engineers\"\r\n },\r\n rds: {col: rds_grad,\r\n  name: \"Researcher/Designer/Engineers\"\r\n },\r\n}\r\n*/\n\nfunction CalculateData(nums, num_cols, num_rows, denom, data) {\n  var data_list = []; //actually need to calculate the number of rows, since we get them in reverse order\n\n  /*\r\n  var num_rows = 0\r\n  for (var i = 0; i < nums.length; i++){\r\n    var m = Math.round(nums[i] / denom)\r\n    num_rows = num_rows + m\r\n  }\r\n    num_rows = Math.ceil(num_rows / num_cols)\r\n  */\n\n  var cur_col = 1;\n  var cur_row = 1;\n  var tot_squares = 0;\n\n  for (var n in nums) {\n    var n0 = +n;\n    tot_squares = tot_squares + Math.round(n0 / denom);\n  }\n\n  var num2 = Math.floor(Math.sqrt(tot_squares)) + 1;\n  var num2_cols = num2;\n  var num2_rows = num2 + 1;\n  num_cols = Math.max(num_cols, num2_cols);\n  num_rows = Math.max(num_rows, num2_rows);\n  var new_yaxis = [{\n    y: num_rows.toString()\n  }];\n\n  for (var i = num_rows; i > 0; i--) {\n    new_yaxis.push({\n      y: i.toString()\n    });\n  }\n\n  for (var i = 0; i < nums.length; i++) {\n    var m = Math.round(nums[i] / denom);\n    var cur_data = [];\n\n    for (var j = 0; j < m; j++) {\n      var col = cur_col.toString();\n      var row = cur_row.toString();\n      cur_data.push({\n        x: col,\n        y: row\n      });\n      cur_col = cur_col + 1;\n\n      if (cur_col > num_cols) {\n        cur_col = 1;\n        cur_row = cur_row + 1;\n        new_yaxis.push({\n          y: cur_row.toString()\n        });\n      }\n    }\n\n    data_list.push(cur_data);\n  }\n\n  data_list.push(new_yaxis);\n  return data_list;\n}\n\n_c = CalculateData;\n\nfunction IconArray(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  useLayoutEffect(_s(() => {\n    _s();\n\n    console.log(props.divid);\n    /* Chart code */\n    // Themes begin\n\n    am4core.useTheme(am4themes_animated); // Themes end\n\n    var data0 = props.data;\n    var series_dict = props.series_dict; // Chart\n\n    var chart = am4core.create(props.divid, am4charts.XYChart);\n    chart.hiddenState.properties.opacity = 0; // this creates initial fade-in\n    //chart.colors.step = 2;\n    //chart.colors.list = [am4core.color( \"#9EFA99\" ), am4core.color( \"#7BD2FA\" ), am4core.color(\"#DB6EF0\"), am4core.color(\"#FA9810\")]\n    // X axis\n\n    var xAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n    xAxis.dataFields.category = \"x\";\n    xAxis.renderer.grid.template.disabled = true;\n    xAxis.renderer.minGridDistance = 10;\n    xAxis.renderer.labels.template.disabled = true; // Y axis\n\n    var yAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n    yAxis.renderer.labels.template.disabled = true;\n    yAxis.renderer.grid.template.disabled = true;\n    yAxis.renderer.minGridDistance = 10;\n    yAxis.dataFields.category = \"y\"; // Legend\n\n    chart.legend = new am4charts.Legend();\n    chart.tooltip.getFillFromObject = false;\n    chart.tooltip.background.fill = am4core.color(\"#67b7dc\"); // Create series\n\n    function createSeries(key, hidden) {\n      var series = chart.series.push(new am4charts.ColumnSeries());\n      series.dataFields.categoryX = \"x\";\n      series.dataFields.categoryY = \"y\";\n      series.sequencedInterpolation = true;\n      series.defaultState.transitionDuration = 3000;\n      series.name = series_dict[key][\"name\"];\n      series.hiddenInLegend = hidden;\n      var tool_text = series.name;\n      tool_text = tool_text + \": \";\n      tool_text = tool_text + data0[key].toString();\n      series.tooltipText = tool_text;\n      series.tooltipPosition = \"pointer\"; // Set up column appearance\n\n      var column = series.columns.template;\n      column.strokeWidth = 1;\n      column.strokeOpacity = 1;\n      column.stroke = am4core.color(\"#ffffff\");\n      column.width = am4core.percent(90);\n      column.height = am4core.percent(90);\n      series.columns.template.fill = series_dict[key]['col'];\n      column.fill = series_dict[key]['col'];\n      column.events.on(\"hit\", function (ev) {\n        var info = ev.target.realFill;\n        console.log(info);\n      }); //var mod = new am4core.LinearGradientModifier();\n      //mod.offsets = [0.99, 0.99, 1];\n      //column.column.cornerRadius(6, 6, 6, 6);\n\n      return series;\n    }\n\n    let series_list = [];\n    let num_list = [];\n    /*\r\n    for (const key in data){\r\n      series_list.push(createSeries(key))\r\n      num_list.push(data[key])\r\n    }*/\n    //actually, we gotta put these in the right order\n\n    if (\"r\" in data0) {\n      series_list.push(createSeries(\"r\", false));\n      num_list.push(data0[\"r\"]);\n    }\n    /*\r\n    if (\"rd\" in data0){\r\n      series_list.push(createSeries(\"rd\", true))\r\n      num_list.push(data0[\"rd\"])\r\n    }\r\n    if (\"d\" in data0){\r\n      series_list.push(createSeries(\"d\", false))\r\n      num_list.push(data0[\"d\"])\r\n    }\r\n    if (\"ds\" in data0){\r\n      series_list.push(createSeries(\"ds\", true))\r\n      num_list.push(data0[\"ds\"])\r\n    }\r\n    if (\"s\" in data0){\r\n      series_list.push(createSeries(\"s\", false))\r\n      num_list.push(data0[\"s\"])\r\n    }\r\n    if (\"rs\" in data0){\r\n      series_list.push(createSeries(\"rs\", true))\r\n      num_list.push(data0[\"rs\"])\r\n    }\r\n    if (\"rds\" in data0){\r\n      series_list.push(createSeries(\"rds\", true))\r\n      num_list.push(data0[\"rds\"])\r\n    }*/\n\n\n    if (\"rp\" in data0) {\n      series_list.push(createSeries(\"rp\", true));\n      num_list.push(data0[\"rp\"]);\n    }\n\n    if (\"p\" in data0) {\n      series_list.push(createSeries(\"p\", false));\n      num_list.push(data0[\"p\"]);\n    }\n\n    if (\"o\" in data0) {\n      series_list.push(createSeries(\"o\", false));\n      num_list.push(data0[\"o\"]);\n    }\n\n    var num_cols = props.cols;\n    var num_rows = props.rows;\n    var new_xaxis = [];\n\n    for (var i = 1; i <= num_cols; i++) {\n      new_xaxis.push({\n        x: i.toString()\n      });\n    }\n\n    var datas = CalculateData(num_list, num_cols, num_rows, props.denom);\n\n    for (var i = 0; i < series_list.length; i++) {\n      series_list[i].data = datas[i];\n    }\n\n    xAxis.data = new_xaxis;\n    yAxis.data = datas[series_list.length]; //Custom code for legend\n\n    chart.legend.itemContainers.template.togglable = false;\n    /*\r\n    var legend_dict = {\r\n      \"Researchers\": [\"Researchers\", \"Researcher/Designers\", \"Researcher/Engineers\", \"Researcher/Designer/Engineers\"],\r\n      \"Designers\": [\"Designers\", \"Researcher/Designers\", \"Designer/Engineers\", \"Researcher/Designer/Engineers\"],\r\n      \"Software Engineers\": [\"Software Engineers\", \"Researcher/Engineers\", \"Designer/Engineers\", \"Researcher/Designer/Engineers\"],\r\n      \"Other Publics\": [\"Other Publics\"]\r\n    }\r\n    \r\n    var other_dict = {\r\n      \"Researchers\": [\"Other Publics\", \"Designers\", \"Software Engineers\", \"Designer/Engineers\"],\r\n      \"Designers\": [\"Researchers\", \"Software Engineers\", \"Other Publics\", \"Researcher/Engineers\"],\r\n      \"Software Engineers\": [\"Researchers\", \"Designers\", \"Other Publics\", \"Researcher/Designers\"],\r\n      \"Other Publics\": [\"Researchers\", \"Designers\", \"Software Engineers\", \"Researcher/Designers\", \"Designer/Engineers\", \"Researcher/Engineers\", \"Researcher/Designer/Engineers\"]\r\n    }\r\n    \r\n    \r\n    var keys = Object.keys(legend_dict)\r\n    \r\n    chart.legend.itemContainers.template.events.on(\"hit\", function(ev) {\r\n      let seriesColumn = ev.target.dataItem.dataContext['columns']['template'];\r\n      let sname = ev.target.dataItem.dataContext['name'];\r\n      let target_names = legend_dict[sname]\r\n      let other_names = other_dict[sname]\r\n      let target_series = []\r\n      let other_series = []\r\n      for (var i = 0; i < series_list.length; i++){\r\n        if (target_names.includes(series_list[i].name)){\r\n          target_series.push(series_list[i])\r\n        } else{\r\n          other_series.push(series_list[i])\r\n        }\r\n      }\r\n    \r\n      if (other_series[0].isActive){\r\n        other_series.map(function(e) { \r\n          e.isActive = false; \r\n        });\r\n      } else {\r\n        other_series.map(function(e) { \r\n          e.isActive = true; \r\n        });\r\n      }\r\n      seriesColumn.isActive = false;\r\n    \r\n      console.log(other_series[0].isActive)\r\n    })\r\n    */\n  }, \"tFi1QeP7MrrEQ5RfFlomBKZonOc=\", false, function () {\n    return [am4core.useTheme];\n  }), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: props.divid,\n      style: {\n        width: \"100%\",\n        height: \"500px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(IconArray, \"n7/vCynhJvM+pLkyL2DMQUF0odM=\");\n\n_c2 = IconArray;\nexport default IconArray;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CalculateData\");\n$RefreshReg$(_c2, \"IconArray\");","map":{"version":3,"sources":["C:/Users/spenc/Documents/GitHub/hci-com/src/containers/Home/components/IconArray.tsx"],"names":["React","useLayoutEffect","am4core","am4charts","am4themes_animated","user_id","useTheme","CalculateData","nums","num_cols","num_rows","denom","data","data_list","cur_col","cur_row","tot_squares","n","n0","Math","round","num2","floor","sqrt","num2_cols","num2_rows","max","new_yaxis","y","toString","i","push","length","m","cur_data","j","col","row","x","IconArray","props","console","log","divid","data0","series_dict","chart","create","XYChart","hiddenState","properties","opacity","xAxis","xAxes","CategoryAxis","dataFields","category","renderer","grid","template","disabled","minGridDistance","labels","yAxis","yAxes","legend","Legend","tooltip","getFillFromObject","background","fill","color","createSeries","key","hidden","series","ColumnSeries","categoryX","categoryY","sequencedInterpolation","defaultState","transitionDuration","name","hiddenInLegend","tool_text","tooltipText","tooltipPosition","column","columns","strokeWidth","strokeOpacity","stroke","width","percent","height","events","on","ev","info","target","realFill","series_list","num_list","cols","rows","new_xaxis","datas","itemContainers","togglable"],"mappings":";;;AAAA,OAAOA,KAAP,IAAwBC,eAAxB,QAA+C,OAA/C;AAEA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;AACA,OAAO,KAAKC,SAAZ,MAA2B,4BAA3B;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;;AAMA,IAAIC,OAAO,GAAG,WAAd;AAEAH,OAAO,CAACI,QAAR,CAAiBF,kBAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASG,aAAT,CAAuBC,IAAvB,EAAuCC,QAAvC,EAAyDC,QAAzD,EAA2EC,KAA3E,EAAkFC,IAAlF,EAAwF;AACtF,MAAIC,SAAS,GAAG,EAAhB,CADsF,CAGtF;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,OAAO,GAAG,CAAd;AAEA,MAAIC,WAAW,GAAG,CAAlB;;AACA,OAAK,IAAIC,CAAT,IAAcT,IAAd,EAAmB;AACjB,QAAIU,EAAU,GAAG,CAACD,CAAlB;AACAD,IAAAA,WAAW,GAAGA,WAAW,GAAGG,IAAI,CAACC,KAAL,CAAWF,EAAE,GAAGP,KAAhB,CAA5B;AACD;;AAED,MAAIU,IAAI,GAAGF,IAAI,CAACG,KAAL,CAAWH,IAAI,CAACI,IAAL,CAAUP,WAAV,CAAX,IAAqC,CAAhD;AACA,MAAIQ,SAAS,GAAGH,IAAhB;AACA,MAAII,SAAS,GAAGJ,IAAI,GAAG,CAAvB;AAEAZ,EAAAA,QAAQ,GAAGU,IAAI,CAACO,GAAL,CAASjB,QAAT,EAAmBe,SAAnB,CAAX;AACAd,EAAAA,QAAQ,GAAGS,IAAI,CAACO,GAAL,CAAShB,QAAT,EAAmBe,SAAnB,CAAX;AAEA,MAAIE,SAAS,GAAG,CAAC;AAACC,IAAAA,CAAC,EAAElB,QAAQ,CAACmB,QAAT;AAAJ,GAAD,CAAhB;;AAEA,OAAK,IAAIC,CAAC,GAAGpB,QAAb,EAAuBoB,CAAC,GAAG,CAA3B,EAA8BA,CAAC,EAA/B,EAAkC;AAChCH,IAAAA,SAAS,CAACI,IAAV,CAAe;AAACH,MAAAA,CAAC,EAAEE,CAAC,CAACD,QAAF;AAAJ,KAAf;AACD;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtB,IAAI,CAACwB,MAAzB,EAAiCF,CAAC,EAAlC,EAAqC;AACnC,QAAIG,CAAC,GAAGd,IAAI,CAACC,KAAL,CAAWZ,IAAI,CAACsB,CAAD,CAAJ,GAAUnB,KAArB,CAAR;AAEA,QAAIuB,QAAQ,GAAG,EAAf;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAApB,EAAuBE,CAAC,EAAxB,EAA4B;AAC1B,UAAIC,GAAG,GAAGtB,OAAO,CAACe,QAAR,EAAV;AACA,UAAIQ,GAAG,GAAGtB,OAAO,CAACc,QAAR,EAAV;AACAK,MAAAA,QAAQ,CAACH,IAAT,CAAc;AAACO,QAAAA,CAAC,EAAEF,GAAJ;AAASR,QAAAA,CAAC,EAAES;AAAZ,OAAd;AACAvB,MAAAA,OAAO,GAAGA,OAAO,GAAG,CAApB;;AACA,UAAIA,OAAO,GAAGL,QAAd,EAAuB;AACrBK,QAAAA,OAAO,GAAG,CAAV;AACAC,QAAAA,OAAO,GAAGA,OAAO,GAAG,CAApB;AACAY,QAAAA,SAAS,CAACI,IAAV,CAAe;AAACH,UAAAA,CAAC,EAAEb,OAAO,CAACc,QAAR;AAAJ,SAAf;AACD;AAEF;;AAEDhB,IAAAA,SAAS,CAACkB,IAAV,CAAeG,QAAf;AAED;;AAEDrB,EAAAA,SAAS,CAACkB,IAAV,CAAeJ,SAAf;AAEA,SAAOd,SAAP;AAED;;KA9DQN,a;;AAgET,SAASgC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAAA;;AAExBvC,EAAAA,eAAe,IAAC,MAAM;AAAA;;AACpBwC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB;AAEA;AACJ;;AACAzC,IAAAA,OAAO,CAACI,QAAR,CAAiBF,kBAAjB,EALwB,CAMxB;;AAEA,QAAIwC,KAAK,GAAGJ,KAAK,CAAC5B,IAAlB;AAEA,QAAIiC,WAAW,GAAGL,KAAK,CAACK,WAAxB,CAVwB,CAYxB;;AACA,QAAIC,KAAK,GAAG5C,OAAO,CAAC6C,MAAR,CAAgBP,KAAK,CAACG,KAAtB,EAA6BxC,SAAS,CAAC6C,OAAvC,CAAZ;AACAF,IAAAA,KAAK,CAACG,WAAN,CAAkBC,UAAlB,CAA6BC,OAA7B,GAAuC,CAAvC,CAdwB,CAckB;AAC1C;AACA;AAEA;;AACA,QAAIC,KAAK,GAAGN,KAAK,CAACO,KAAN,CAAYtB,IAAZ,CAAkB,IAAI5B,SAAS,CAACmD,YAAd,EAAlB,CAAZ;AACAF,IAAAA,KAAK,CAACG,UAAN,CAAiBC,QAAjB,GAA4B,GAA5B;AACAJ,IAAAA,KAAK,CAACK,QAAN,CAAeC,IAAf,CAAoBC,QAApB,CAA6BC,QAA7B,GAAwC,IAAxC;AACAR,IAAAA,KAAK,CAACK,QAAN,CAAeI,eAAf,GAAiC,EAAjC;AACAT,IAAAA,KAAK,CAACK,QAAN,CAAeK,MAAf,CAAsBH,QAAtB,CAA+BC,QAA/B,GAA0C,IAA1C,CAvBwB,CAyBxB;;AACA,QAAIG,KAAK,GAAGjB,KAAK,CAACkB,KAAN,CAAYjC,IAAZ,CAAkB,IAAI5B,SAAS,CAACmD,YAAd,EAAlB,CAAZ;AACAS,IAAAA,KAAK,CAACN,QAAN,CAAeK,MAAf,CAAsBH,QAAtB,CAA+BC,QAA/B,GAA0C,IAA1C;AACAG,IAAAA,KAAK,CAACN,QAAN,CAAeC,IAAf,CAAoBC,QAApB,CAA6BC,QAA7B,GAAwC,IAAxC;AACAG,IAAAA,KAAK,CAACN,QAAN,CAAeI,eAAf,GAAiC,EAAjC;AACAE,IAAAA,KAAK,CAACR,UAAN,CAAiBC,QAAjB,GAA4B,GAA5B,CA9BwB,CAgCxB;;AACAV,IAAAA,KAAK,CAACmB,MAAN,GAAe,IAAI9D,SAAS,CAAC+D,MAAd,EAAf;AAEApB,IAAAA,KAAK,CAACqB,OAAN,CAAcC,iBAAd,GAAkC,KAAlC;AACAtB,IAAAA,KAAK,CAACqB,OAAN,CAAcE,UAAd,CAAyBC,IAAzB,GAAgCpE,OAAO,CAACqE,KAAR,CAAc,SAAd,CAAhC,CApCwB,CAsCxB;;AACA,aAASC,YAAT,CAAsBC,GAAtB,EAA2BC,MAA3B,EAAmC;AACjC,UAAIC,MAAM,GAAG7B,KAAK,CAAC6B,MAAN,CAAa5C,IAAb,CAAmB,IAAI5B,SAAS,CAACyE,YAAd,EAAnB,CAAb;AACAD,MAAAA,MAAM,CAACpB,UAAP,CAAkBsB,SAAlB,GAA8B,GAA9B;AACAF,MAAAA,MAAM,CAACpB,UAAP,CAAkBuB,SAAlB,GAA8B,GAA9B;AACAH,MAAAA,MAAM,CAACI,sBAAP,GAAgC,IAAhC;AACAJ,MAAAA,MAAM,CAACK,YAAP,CAAoBC,kBAApB,GAAyC,IAAzC;AACAN,MAAAA,MAAM,CAACO,IAAP,GAAcrC,WAAW,CAAC4B,GAAD,CAAX,CAAiB,MAAjB,CAAd;AACAE,MAAAA,MAAM,CAACQ,cAAP,GAAwBT,MAAxB;AAEA,UAAIU,SAAS,GAAGT,MAAM,CAACO,IAAvB;AACAE,MAAAA,SAAS,GAAGA,SAAS,GAAG,IAAxB;AACAA,MAAAA,SAAS,GAAGA,SAAS,GAAGxC,KAAK,CAAC6B,GAAD,CAAL,CAAW5C,QAAX,EAAxB;AAEA8C,MAAAA,MAAM,CAACU,WAAP,GAAqBD,SAArB;AACAT,MAAAA,MAAM,CAACW,eAAP,GAAyB,SAAzB,CAdiC,CAiBjC;;AACA,UAAIC,MAAM,GAAGZ,MAAM,CAACa,OAAP,CAAe7B,QAA5B;AACA4B,MAAAA,MAAM,CAACE,WAAP,GAAqB,CAArB;AACAF,MAAAA,MAAM,CAACG,aAAP,GAAuB,CAAvB;AACAH,MAAAA,MAAM,CAACI,MAAP,GAAgBzF,OAAO,CAACqE,KAAR,CAAe,SAAf,CAAhB;AACAgB,MAAAA,MAAM,CAACK,KAAP,GAAe1F,OAAO,CAAC2F,OAAR,CAAiB,EAAjB,CAAf;AACAN,MAAAA,MAAM,CAACO,MAAP,GAAgB5F,OAAO,CAAC2F,OAAR,CAAiB,EAAjB,CAAhB;AACAlB,MAAAA,MAAM,CAACa,OAAP,CAAe7B,QAAf,CAAwBW,IAAxB,GAA+BzB,WAAW,CAAC4B,GAAD,CAAX,CAAiB,KAAjB,CAA/B;AACAc,MAAAA,MAAM,CAACjB,IAAP,GAAczB,WAAW,CAAC4B,GAAD,CAAX,CAAiB,KAAjB,CAAd;AAEAc,MAAAA,MAAM,CAACQ,MAAP,CAAcC,EAAd,CAAiB,KAAjB,EAAwB,UAASC,EAAT,EAAa;AACnC,YAAIC,IAAI,GAAGD,EAAE,CAACE,MAAH,CAAUC,QAArB;AACA3D,QAAAA,OAAO,CAACC,GAAR,CAAYwD,IAAZ;AACD,OAHD,EA3BiC,CAgCjC;AACA;AACA;;AAEA,aAAOvB,MAAP;AACD;;AAED,QAAI0B,WAAW,GAAG,EAAlB;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,QAAI,OAAO1D,KAAX,EAAiB;AACfyD,MAAAA,WAAW,CAACtE,IAAZ,CAAiByC,YAAY,CAAC,GAAD,EAAM,KAAN,CAA7B;AACA8B,MAAAA,QAAQ,CAACvE,IAAT,CAAca,KAAK,CAAC,GAAD,CAAnB;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAI,QAAQA,KAAZ,EAAkB;AAChByD,MAAAA,WAAW,CAACtE,IAAZ,CAAiByC,YAAY,CAAC,IAAD,EAAO,IAAP,CAA7B;AACA8B,MAAAA,QAAQ,CAACvE,IAAT,CAAca,KAAK,CAAC,IAAD,CAAnB;AACD;;AACD,QAAI,OAAOA,KAAX,EAAiB;AACfyD,MAAAA,WAAW,CAACtE,IAAZ,CAAiByC,YAAY,CAAC,GAAD,EAAM,KAAN,CAA7B;AACA8B,MAAAA,QAAQ,CAACvE,IAAT,CAAca,KAAK,CAAC,GAAD,CAAnB;AACD;;AACD,QAAI,OAAOA,KAAX,EAAiB;AACfyD,MAAAA,WAAW,CAACtE,IAAZ,CAAiByC,YAAY,CAAC,GAAD,EAAM,KAAN,CAA7B;AACA8B,MAAAA,QAAQ,CAACvE,IAAT,CAAca,KAAK,CAAC,GAAD,CAAnB;AACD;;AAGD,QAAInC,QAAQ,GAAG+B,KAAK,CAAC+D,IAArB;AACA,QAAI7F,QAAQ,GAAG8B,KAAK,CAACgE,IAArB;AACA,QAAIC,SAAS,GAAG,EAAhB;;AACA,SAAK,IAAI3E,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIrB,QAArB,EAA+BqB,CAAC,EAAhC,EAAmC;AACjC2E,MAAAA,SAAS,CAAC1E,IAAV,CAAe;AAACO,QAAAA,CAAC,EAAER,CAAC,CAACD,QAAF;AAAJ,OAAf;AAED;;AAED,QAAI6E,KAAK,GAAGnG,aAAa,CAAC+F,QAAD,EAAW7F,QAAX,EAAqBC,QAArB,EAA+B8B,KAAK,CAAC7B,KAArC,CAAzB;;AAGA,SAAK,IAAImB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuE,WAAW,CAACrE,MAAhC,EAAwCF,CAAC,EAAzC,EAA4C;AAC1CuE,MAAAA,WAAW,CAACvE,CAAD,CAAX,CAAelB,IAAf,GAAsB8F,KAAK,CAAC5E,CAAD,CAA3B;AACD;;AAGDsB,IAAAA,KAAK,CAACxC,IAAN,GAAa6F,SAAb;AACA1C,IAAAA,KAAK,CAACnD,IAAN,GAAa8F,KAAK,CAACL,WAAW,CAACrE,MAAb,CAAlB,CAnJwB,CAqJxB;;AACAc,IAAAA,KAAK,CAACmB,MAAN,CAAa0C,cAAb,CAA4BhD,QAA5B,CAAqCiD,SAArC,GAAiD,KAAjD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEG,GAxMc;AAAA,YAKjB1G,OAAO,CAACI,QALS;AAAA,MAwMZ,EAxMY,CAAf;AA0MA,sBACE;AAAA,2BACI;AAAK,MAAA,EAAE,EAAEkC,KAAK,CAACG,KAAf;AAAsB,MAAA,KAAK,EAAE;AAAEiD,QAAAA,KAAK,EAAE,MAAT;AAAiBE,QAAAA,MAAM,EAAE;AAAzB;AAA7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;IAlNQvD,S;;MAAAA,S;AAmNT,eAAeA,SAAf","sourcesContent":["import React, { useRef, useLayoutEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport axios from 'axios'\r\n\r\nvar user_id = \"634739719\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\n/*\r\nvar rd_grad = new am4core.LinearGradient();\r\nrd_grad.addColor(am4core.color(\"#9EFA99\"));\r\nrd_grad.addColor(am4core.color(\"#7BD2FA\"));\r\nrd_grad.rotation = 45\r\n\r\n\r\nvar rs_grad = new am4core.LinearGradient();\r\nrs_grad.addColor(am4core.color(\"#FA5F3A\"));\r\nrs_grad.addColor(am4core.color(\"#9EFA99\"));\r\nrs_grad.rotation = 45\r\n\r\nvar ds_grad = new am4core.LinearGradient();\r\nds_grad.addColor(am4core.color(\"#7BD2FA\"));\r\nds_grad.addColor(am4core.color(\"#FA5F3A\"));\r\nds_grad.rotation = 45\r\n\r\nvar rds_grad = new am4core.LinearGradient();\r\nrds_grad.addColor(am4core.color(\"#9EFA99\"));\r\nrds_grad.addColor(am4core.color(\"#7BD2FA\"));\r\nrds_grad.addColor(am4core.color(\"#FA5F3A\"));\r\nrds_grad.rotation = 45\r\n\r\nconst series_dict = {\r\n  r: {col: am4core.color( \"#9EFA99\" ),\r\n        name: \"Researchers\"\r\n       },\r\n  d: {col: am4core.color( \"#7BD2FA\" ),\r\n       name: \"Designers\"\r\n      },\r\n  s: {col: am4core.color( \"#FA5F3A\" ),\r\n       name: \"Software Engineers\"\r\n      },\r\n  o: {col: am4core.color( \"#FA9810\" ),\r\n  name: \"Other Publics\"\r\n },\r\n  rd: {col: rd_grad,\r\n  name: \"Researcher/Designers\"\r\n },\r\n rs: {col: rs_grad,\r\n  name: \"Researcher/Engineers\"\r\n },\r\n ds: {col: ds_grad,\r\n  name: \"Designer/Engineers\"\r\n },\r\n rds: {col: rds_grad,\r\n  name: \"Researcher/Designer/Engineers\"\r\n },\r\n}\r\n*/\r\n\r\nfunction CalculateData(nums: number[], num_cols: number, num_rows: number, denom, data) {\r\n  var data_list = []\r\n\r\n  //actually need to calculate the number of rows, since we get them in reverse order\r\n  /*\r\n  var num_rows = 0\r\n  for (var i = 0; i < nums.length; i++){\r\n    var m = Math.round(nums[i] / denom)\r\n    num_rows = num_rows + m\r\n  }\r\n\r\n  num_rows = Math.ceil(num_rows / num_cols)\r\n  */\r\n\r\n  var cur_col = 1\r\n  var cur_row = 1\r\n\r\n  var tot_squares = 0\r\n  for (var n in nums){\r\n    var n0: number = +n\r\n    tot_squares = tot_squares + Math.round(n0 / denom)\r\n  }\r\n\r\n  var num2 = Math.floor(Math.sqrt(tot_squares)) + 1\r\n  var num2_cols = num2\r\n  var num2_rows = num2 + 1\r\n\r\n  num_cols = Math.max(num_cols, num2_cols)\r\n  num_rows = Math.max(num_rows, num2_rows)\r\n\r\n  var new_yaxis = [{y: num_rows.toString()}]\r\n\r\n  for (var i = num_rows; i > 0; i--){\r\n    new_yaxis.push({y: i.toString()})\r\n  }\r\n\r\n  for (var i = 0; i < nums.length; i++){\r\n    var m = Math.round(nums[i] / denom)\r\n\r\n    var cur_data = [] \r\n\r\n    for (var j = 0; j < m; j++) {\r\n      var col = cur_col.toString()\r\n      var row = cur_row.toString()\r\n      cur_data.push({x: col, y: row})\r\n      cur_col = cur_col + 1\r\n      if (cur_col > num_cols){\r\n        cur_col = 1\r\n        cur_row = cur_row + 1\r\n        new_yaxis.push({y: cur_row.toString()})\r\n      }\r\n\r\n    }\r\n\r\n    data_list.push(cur_data)\r\n\r\n  }\r\n\r\n  data_list.push(new_yaxis)\r\n\r\n  return data_list\r\n\r\n}\r\n\r\nfunction IconArray(props) {\r\n\r\n  useLayoutEffect(() => {\r\n    console.log(props.divid)\r\n\r\n    /* Chart code */\r\n// Themes begin\r\nam4core.useTheme(am4themes_animated);\r\n// Themes end\r\n\r\nvar data0 = props.data\r\n\r\nvar series_dict = props.series_dict\r\n\r\n// Chart\r\nvar chart = am4core.create( props.divid, am4charts.XYChart );\r\nchart.hiddenState.properties.opacity = 0; // this creates initial fade-in\r\n//chart.colors.step = 2;\r\n//chart.colors.list = [am4core.color( \"#9EFA99\" ), am4core.color( \"#7BD2FA\" ), am4core.color(\"#DB6EF0\"), am4core.color(\"#FA9810\")]\r\n\r\n// X axis\r\nvar xAxis = chart.xAxes.push( new am4charts.CategoryAxis() );\r\nxAxis.dataFields.category = \"x\";\r\nxAxis.renderer.grid.template.disabled = true;\r\nxAxis.renderer.minGridDistance = 10;\r\nxAxis.renderer.labels.template.disabled = true;\r\n\r\n// Y axis\r\nvar yAxis = chart.yAxes.push( new am4charts.CategoryAxis() );\r\nyAxis.renderer.labels.template.disabled = true;\r\nyAxis.renderer.grid.template.disabled = true;\r\nyAxis.renderer.minGridDistance = 10;\r\nyAxis.dataFields.category = \"y\";\r\n\r\n// Legend\r\nchart.legend = new am4charts.Legend();\r\n\r\nchart.tooltip.getFillFromObject = false;\r\nchart.tooltip.background.fill = am4core.color(\"#67b7dc\");\r\n\r\n// Create series\r\nfunction createSeries(key, hidden) {\r\n  var series = chart.series.push( new am4charts.ColumnSeries() );\r\n  series.dataFields.categoryX = \"x\";\r\n  series.dataFields.categoryY = \"y\";\r\n  series.sequencedInterpolation = true;\r\n  series.defaultState.transitionDuration = 3000;\r\n  series.name = series_dict[key][\"name\"];\r\n  series.hiddenInLegend = hidden;\r\n  \r\n  var tool_text = series.name\r\n  tool_text = tool_text + \": \"\r\n  tool_text = tool_text + data0[key].toString()\r\n  \r\n  series.tooltipText = tool_text\r\n  series.tooltipPosition = \"pointer\"\r\n\r\n\r\n  // Set up column appearance\r\n  var column = series.columns.template;\r\n  column.strokeWidth = 1;\r\n  column.strokeOpacity = 1;\r\n  column.stroke = am4core.color( \"#ffffff\" );\r\n  column.width = am4core.percent( 90 );\r\n  column.height = am4core.percent( 90 );\r\n  series.columns.template.fill = series_dict[key]['col'];\r\n  column.fill = series_dict[key]['col'];\r\n\r\n  column.events.on(\"hit\", function(ev) {\r\n    var info = ev.target.realFill\r\n    console.log(info)\r\n  })\r\n\r\n  //var mod = new am4core.LinearGradientModifier();\r\n  //mod.offsets = [0.99, 0.99, 1];\r\n  //column.column.cornerRadius(6, 6, 6, 6);\r\n  \r\n  return series;\r\n}\r\n\r\nlet series_list = [];\r\nlet num_list = []\r\n/*\r\nfor (const key in data){\r\n  series_list.push(createSeries(key))\r\n  num_list.push(data[key])\r\n}*/\r\n\r\n//actually, we gotta put these in the right order\r\nif (\"r\" in data0){\r\n  series_list.push(createSeries(\"r\", false))\r\n  num_list.push(data0[\"r\"])\r\n}\r\n/*\r\nif (\"rd\" in data0){\r\n  series_list.push(createSeries(\"rd\", true))\r\n  num_list.push(data0[\"rd\"])\r\n}\r\nif (\"d\" in data0){\r\n  series_list.push(createSeries(\"d\", false))\r\n  num_list.push(data0[\"d\"])\r\n}\r\nif (\"ds\" in data0){\r\n  series_list.push(createSeries(\"ds\", true))\r\n  num_list.push(data0[\"ds\"])\r\n}\r\nif (\"s\" in data0){\r\n  series_list.push(createSeries(\"s\", false))\r\n  num_list.push(data0[\"s\"])\r\n}\r\nif (\"rs\" in data0){\r\n  series_list.push(createSeries(\"rs\", true))\r\n  num_list.push(data0[\"rs\"])\r\n}\r\nif (\"rds\" in data0){\r\n  series_list.push(createSeries(\"rds\", true))\r\n  num_list.push(data0[\"rds\"])\r\n}*/\r\nif (\"rp\" in data0){\r\n  series_list.push(createSeries(\"rp\", true))\r\n  num_list.push(data0[\"rp\"])\r\n}\r\nif (\"p\" in data0){\r\n  series_list.push(createSeries(\"p\", false))\r\n  num_list.push(data0[\"p\"])\r\n}\r\nif (\"o\" in data0){\r\n  series_list.push(createSeries(\"o\", false))\r\n  num_list.push(data0[\"o\"])\r\n}\r\n\r\n\r\nvar num_cols = props.cols\r\nvar num_rows = props.rows\r\nvar new_xaxis = []\r\nfor (var i = 1; i <= num_cols; i++){\r\n  new_xaxis.push({x: i.toString()})\r\n\r\n}\r\n\r\nvar datas = CalculateData(num_list, num_cols, num_rows, props.denom)\r\n\r\n\r\nfor (var i = 0; i < series_list.length; i++){\r\n  series_list[i].data = datas[i]\r\n}\r\n\r\n\r\nxAxis.data = new_xaxis\r\nyAxis.data = datas[series_list.length]\r\n\r\n//Custom code for legend\r\nchart.legend.itemContainers.template.togglable = false;\r\n\r\n/*\r\nvar legend_dict = {\r\n  \"Researchers\": [\"Researchers\", \"Researcher/Designers\", \"Researcher/Engineers\", \"Researcher/Designer/Engineers\"],\r\n  \"Designers\": [\"Designers\", \"Researcher/Designers\", \"Designer/Engineers\", \"Researcher/Designer/Engineers\"],\r\n  \"Software Engineers\": [\"Software Engineers\", \"Researcher/Engineers\", \"Designer/Engineers\", \"Researcher/Designer/Engineers\"],\r\n  \"Other Publics\": [\"Other Publics\"]\r\n}\r\n\r\nvar other_dict = {\r\n  \"Researchers\": [\"Other Publics\", \"Designers\", \"Software Engineers\", \"Designer/Engineers\"],\r\n  \"Designers\": [\"Researchers\", \"Software Engineers\", \"Other Publics\", \"Researcher/Engineers\"],\r\n  \"Software Engineers\": [\"Researchers\", \"Designers\", \"Other Publics\", \"Researcher/Designers\"],\r\n  \"Other Publics\": [\"Researchers\", \"Designers\", \"Software Engineers\", \"Researcher/Designers\", \"Designer/Engineers\", \"Researcher/Engineers\", \"Researcher/Designer/Engineers\"]\r\n}\r\n\r\n\r\nvar keys = Object.keys(legend_dict)\r\n\r\nchart.legend.itemContainers.template.events.on(\"hit\", function(ev) {\r\n  let seriesColumn = ev.target.dataItem.dataContext['columns']['template'];\r\n  let sname = ev.target.dataItem.dataContext['name'];\r\n  let target_names = legend_dict[sname]\r\n  let other_names = other_dict[sname]\r\n  let target_series = []\r\n  let other_series = []\r\n  for (var i = 0; i < series_list.length; i++){\r\n    if (target_names.includes(series_list[i].name)){\r\n      target_series.push(series_list[i])\r\n    } else{\r\n      other_series.push(series_list[i])\r\n    }\r\n  }\r\n\r\n  if (other_series[0].isActive){\r\n    other_series.map(function(e) { \r\n      e.isActive = false; \r\n    });\r\n  } else {\r\n    other_series.map(function(e) { \r\n      e.isActive = true; \r\n    });\r\n  }\r\n  seriesColumn.isActive = false;\r\n\r\n  console.log(other_series[0].isActive)\r\n})\r\n*/\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n        <div id={props.divid} style={{ width: \"100%\", height: \"500px\" }}></div>\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default IconArray;"]},"metadata":{},"sourceType":"module"}