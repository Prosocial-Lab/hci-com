{"ast":null,"code":"import _slicedToArray from \"C:/Users/spenc/Documents/GitHub/hci-com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/spenc/Documents/GitHub/hci-com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\spenc\\\\Documents\\\\GitHub\\\\hci-com\\\\src\\\\containers\\\\Home\\\\components\\\\IndividualStats.tsx\",\n    _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Card from 'react-bootstrap/Card';\nimport axios from 'axios';\nimport IconArray from './IconArray';\nimport BubbleChart from './BubbleChart';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Trending from './Trending';\nimport TopTweets from './TopTweets';\nimport MyTweets from './MyTweets';\nimport * as am4core from \"@amcharts/amcharts4/core\"; //var id = \"634739719\"\n//var id = \"1293416714923683841\"\n//var id = \"192812670\"\n//var id = \"802233409338675200\"\n//var id = \"18256350\"\n//var id = \"2490180804\"\n//var id = \"18670940\"\n//var id = \"486899842\"\n//var id = \"238753895\"\n//var id = \"247943631\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar id = \"55733752\";\nconst Title = styled.p(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    &&& {\\n    font-size: 30px;\\n    font-weight:bold;\\n}\"])));\n_c = Title;\nconst Subtitle = styled.p(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    &&& {\\n    padding: .05em;\\n    font-size: 24px;\\n}\"])));\n_c2 = Subtitle;\nconst Poptitle = styled.p(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    &&& {\\n    padding: 0.3em;\\n    font-size: 24px;\\n}\"])));\nconst vizpop = {\n  width: '860px',\n  maxWidth: 'none'\n};\nconst linepop = {\n  width: '700px',\n  maxWidth: 'none'\n};\nvar rd_grad = new am4core.LinearGradient();\nrd_grad.addColor(am4core.color(\"#9EFA99\"));\nrd_grad.addColor(am4core.color(\"#7BD2FA\"));\nrd_grad.rotation = 45;\nvar rs_grad = new am4core.LinearGradient();\nrs_grad.addColor(am4core.color(\"#FA5F3A\"));\nrs_grad.addColor(am4core.color(\"#9EFA99\"));\nrs_grad.rotation = 45;\nvar ds_grad = new am4core.LinearGradient();\nds_grad.addColor(am4core.color(\"#7BD2FA\"));\nds_grad.addColor(am4core.color(\"#FA5F3A\"));\nds_grad.rotation = 45;\nvar rds_grad = new am4core.LinearGradient();\nrds_grad.addColor(am4core.color(\"#9EFA99\"));\nrds_grad.addColor(am4core.color(\"#7BD2FA\"));\nrds_grad.addColor(am4core.color(\"#FA5F3A\"));\nrds_grad.rotation = 45;\nconst series_dict = {\n  r: {\n    col: am4core.color(\"#9EFA99\"),\n    name: \"Researchers\"\n  },\n  d: {\n    col: am4core.color(\"#7BD2FA\"),\n    name: \"Designers\"\n  },\n  s: {\n    col: am4core.color(\"#FA5F3A\"),\n    name: \"Software Engineers\"\n  },\n  o: {\n    col: am4core.color(\"#FA9810\"),\n    name: \"Other Publics\"\n  },\n  rd: {\n    col: rd_grad,\n    name: \"Researcher/Designers\"\n  },\n  rs: {\n    col: rs_grad,\n    name: \"Researcher/Engineers\"\n  },\n  ds: {\n    col: ds_grad,\n    name: \"Designer/Engineers\"\n  },\n  rds: {\n    col: rds_grad,\n    name: \"Researcher/Designer/Engineers\"\n  }\n};\n\nfunction IndividualStats(props) {\n  _s();\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        user = _useState4[0],\n        setUser = _useState4[1];\n\n  var num_cols = 10;\n  var num_rows = 20;\n  var denom = 50;\n  /*\r\n  const [isLoading2, setLoading2] = useState(true);\r\n  const [med, setMed] = useState([]);\r\n  */\n\n  useEffect(() => {\n    axios.get(\"http://localhost:4001/twitter/userWhereID/\".concat(id)).then(response => {\n      setUser(response.data);\n      setLoading(false);\n    }).catch(error => console.error(\"There was an error retrieving the retweets list: \".concat(error)));\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"My Tweets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 16\n    }, this);\n  } else {\n    var f = JSON.parse(user[0]['followers_class']);\n    var tot_fsquares = 0;\n\n    for (const key in f) {\n      tot_fsquares = tot_fsquares + Math.round(f[key] / denom);\n    }\n\n    var d = JSON.parse(user[0]['median_downstream_class']);\n    var tot_dsquares = 0;\n\n    for (const key in d) {\n      tot_dsquares = tot_dsquares + Math.round(d[key] / denom);\n    }\n\n    var num = Math.max(tot_fsquares, tot_dsquares);\n    num = Math.floor(Math.sqrt(num)) + 1;\n    num_cols = num;\n    num_rows = num + 1;\n  }\n  /*\r\n  //Followers Popover\r\n  const pop_followers = (\r\n    <Popover id=\"popover-basic\" placement=\"bottom\" style={vizpop}>\r\n        <Popover.Title>Median Followers</Popover.Title>\r\n      <Popover.Content>\r\n      <Card>\r\n        <div className=\"columns\">\r\n        <div className=\"column\">\r\n        <Poptitle>Community Median</Poptitle>\r\n      <WaffleChart legend_pos = \"right\" divid = \"medfollowers\" vars = {[{name: \"Researchers\", data: med[med.length - 1]['researchers']}, {name: \"Non-researchers\", data: med[med.length-1]['non_researchers']}]} r = {med[med.length - 1]['researchers']} n = {med[med.length - 1]['non_researchers']} />\r\n      </div>\r\n      <div className=\"column\">\r\n        <Poptitle>My Followers</Poptitle>\r\n        <WaffleChart divid = \"myfollowerscomp\" vars = {[{name: \"Researchers\", data: snaps[snaps.length - 1]['researchers']}, {name: \"Non-researchers\", data: snaps[snaps.length-1]['non_researchers']}]} />\r\n        </div>\r\n        </div>\r\n        </Card>\r\n      </Popover.Content>\r\n    </Popover>\r\n  );\r\n  \r\n  const PopFollowers = () => (\r\n    <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={pop_followers}>\r\n    <Button variant=\"outline-primary\">Compare to Community Median</Button>\r\n      \r\n    </OverlayTrigger>\r\n  );\r\n    //Downstream Popover\r\n  const pop_downstream = (\r\n    <Popover id=\"popover-basic\" placement=\"top\" style={vizpop}>\r\n        <Popover.Title>Median Downstream</Popover.Title>\r\n      <Popover.Content>\r\n        <Card>\r\n        <div className=\"columns\">\r\n        <div className=\"column\">\r\n        <Poptitle>Community Median</Poptitle>\r\n        <WaffleChart legend_pos = \"right\" divid = \"meddownstream\" vars = {[{name: \"Researchers\", data: med[med.length - 1]['median_down_r']}, {name: \"Non-researchers\", data: med[med.length-1]['median_down_n']}]} />\r\n        </div>\r\n        <div className=\"column\">\r\n        <Poptitle>My Downstream</Poptitle>\r\n        <WaffleChart divid = \"mydownstreamcomp\" vars = {[{name: \"Researchers\", data: snaps[snaps.length - 1]['median_down_r']}, {name: \"Non-researchers\", data: snaps[snaps.length-1]['median_down_n']}]} />\r\n        </div>\r\n        </div>\r\n        </Card>\r\n      </Popover.Content>\r\n    </Popover>\r\n  );\r\n  \r\n  const PopDownstream = () => (\r\n    <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={pop_downstream}>\r\n    <Button variant=\"outline-primary\">Compare to Community Median</Button>\r\n      \r\n    </OverlayTrigger>\r\n  );\r\n    //Growth Popover\r\n  const pop_growth = (\r\n    <Popover id=\"popover-basic\" placement=\"top\" style={linepop}>\r\n      <Popover.Content>\r\n          <Poptitle>Community Median</Poptitle>\r\n      <LineChart data = {snaps} med = {med} id = {\"indlinemed\"} dv = \"total_followers\" yaxis = \"Followers\"/>\r\n        </Popover.Content>\r\n    </Popover>\r\n  );\r\n  \r\n  const PopGrowth= () => (\r\n    <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={pop_growth}>\r\n    <Button variant=\"outline-primary\">Compare to Community Median</Button>\r\n    </OverlayTrigger>\r\n  );\r\n    //Tweet Popover\r\n  const pop_tweet = (\r\n    <Popover id=\"popover-basic\" placement=\"top\" style={linepop}>\r\n      <Popover.Content>\r\n      <Poptitle>Community Median</Poptitle>\r\n      <LineChart data = {snaps} med = {med} id = {\"indlinemed2\"} dv = \"total_tweets\" yaxis = \"Tweets\"/>\r\n      </Popover.Content>\r\n    </Popover>\r\n  );\r\n  \r\n  const PopTweet= () => (\r\n    <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={pop_tweet}>\r\n    <Button variant=\"outline-primary\">Compare to Community Median</Button>\r\n    </OverlayTrigger>\r\n  ); */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        padding: \"2em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"What is my reach?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Subtitle, {\n            children: \"My Followers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(IconArray, {\n            divid: \"followers_icon\",\n            data: JSON.parse(user[0]['followers_class']),\n            cols: num_cols,\n            rows: num_rows,\n            denom: denom,\n            series_dict: series_dict\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Subtitle, {\n            children: \"My Downstream Audience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(IconArray, {\n            divid: \"downstream_icon\",\n            data: JSON.parse(user[0]['median_downstream_class']),\n            cols: num_cols,\n            rows: num_rows,\n            denom: denom,\n            series_dict: series_dict\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Subtitle, {\n            children: \"Followers' Top Keywords\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(BubbleChart, {\n            divid: \"f_bubble\",\n            data: JSON.parse(user[0]['follower_keywords'])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Subtitle, {\n            children: \"Downstream Top Keywords\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(BubbleChart, {\n            divid: \"d_bubble\",\n            data: JSON.parse(user[0]['downstream_keywords'])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Subtitle, {\n          children: \"My Tweets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(MyTweets, {\n          id: user[0].id_text,\n          cols: num_cols,\n          rows: num_rows,\n          denom: denom,\n          series_dict: series_dict\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        padding: \"2em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"What is my audience interested in?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Subtitle, {\n            children: \"Top Tweets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TopTweets, {\n            data: JSON.parse(user[0]['audience_top_tweets'])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Subtitle, {\n            children: \"Trending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Trending, {\n            data: JSON.parse(user[0]['audience_trending'])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 1\n  }, this);\n}\n\n_s(IndividualStats, \"VCoUEuyOMy4IgCJOs5U7nYxhVyQ=\");\n\n_c3 = IndividualStats;\n;\nexport default IndividualStats;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Subtitle\");\n$RefreshReg$(_c3, \"IndividualStats\");","map":{"version":3,"sources":["C:/Users/spenc/Documents/GitHub/hci-com/src/containers/Home/components/IndividualStats.tsx"],"names":["React","useEffect","useState","styled","Card","axios","IconArray","BubbleChart","Trending","TopTweets","MyTweets","am4core","id","Title","p","Subtitle","Poptitle","vizpop","width","maxWidth","linepop","rd_grad","LinearGradient","addColor","color","rotation","rs_grad","ds_grad","rds_grad","series_dict","r","col","name","d","s","o","rd","rs","ds","rds","IndividualStats","props","isLoading","setLoading","user","setUser","num_cols","num_rows","denom","get","then","response","data","catch","error","console","f","JSON","parse","tot_fsquares","key","Math","round","tot_dsquares","num","max","floor","sqrt","padding","id_text"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport Overlay from 'react-bootstrap/Overlay'\r\nimport Button from 'react-bootstrap/Button'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport MyWaffle from './MyWaffle';\r\nimport MyDownstream from './MyDownstream';\r\nimport WaffleChart from './WaffleChart';\r\nimport axios from 'axios';\r\nimport LineChart from './LineChart';\r\nimport IconArray from './IconArray';\r\nimport BubbleChart from './BubbleChart';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Trending from './Trending';\r\nimport TopTweets from './TopTweets';\r\nimport MyTweets from './MyTweets'\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\n\r\n//var id = \"634739719\"\r\n//var id = \"1293416714923683841\"\r\n//var id = \"192812670\"\r\n//var id = \"802233409338675200\"\r\n//var id = \"18256350\"\r\n//var id = \"2490180804\"\r\n//var id = \"18670940\"\r\n//var id = \"486899842\"\r\n//var id = \"238753895\"\r\n//var id = \"247943631\"\r\nvar id = \"55733752\"\r\n\r\nconst Title = styled.p`\r\n    &&& {\r\n    font-size: 30px;\r\n    font-weight:bold;\r\n}`\r\n\r\nconst Subtitle = styled.p`\r\n    &&& {\r\n    padding: .05em;\r\n    font-size: 24px;\r\n}`\r\n\r\nconst Poptitle = styled.p`\r\n    &&& {\r\n    padding: 0.3em;\r\n    font-size: 24px;\r\n}`\r\n\r\nconst vizpop = {\r\n    width: '860px',\r\n    maxWidth: 'none'\r\n  };\r\n\r\nconst linepop = {\r\n    width: '700px',\r\n    maxWidth: 'none'\r\n  };\r\n\r\nvar rd_grad = new am4core.LinearGradient();\r\nrd_grad.addColor(am4core.color(\"#9EFA99\"));\r\nrd_grad.addColor(am4core.color(\"#7BD2FA\"));\r\nrd_grad.rotation = 45\r\n\r\nvar rs_grad = new am4core.LinearGradient();\r\nrs_grad.addColor(am4core.color(\"#FA5F3A\"));\r\nrs_grad.addColor(am4core.color(\"#9EFA99\"));\r\nrs_grad.rotation = 45\r\n\r\nvar ds_grad = new am4core.LinearGradient();\r\nds_grad.addColor(am4core.color(\"#7BD2FA\"));\r\nds_grad.addColor(am4core.color(\"#FA5F3A\"));\r\nds_grad.rotation = 45\r\n\r\nvar rds_grad = new am4core.LinearGradient();\r\nrds_grad.addColor(am4core.color(\"#9EFA99\"));\r\nrds_grad.addColor(am4core.color(\"#7BD2FA\"));\r\nrds_grad.addColor(am4core.color(\"#FA5F3A\"));\r\nrds_grad.rotation = 45\r\n\r\nconst series_dict = {\r\n  r: {col: am4core.color( \"#9EFA99\" ),\r\n        name: \"Researchers\"\r\n       },\r\n  d: {col: am4core.color( \"#7BD2FA\" ),\r\n       name: \"Designers\"\r\n      },\r\n  s: {col: am4core.color( \"#FA5F3A\" ),\r\n       name: \"Software Engineers\"\r\n      },\r\n  o: {col: am4core.color( \"#FA9810\" ),\r\n  name: \"Other Publics\"\r\n },\r\n  rd: {col: rd_grad,\r\n  name: \"Researcher/Designers\"\r\n },\r\n rs: {col: rs_grad,\r\n  name: \"Researcher/Engineers\"\r\n },\r\n ds: {col: ds_grad,\r\n  name: \"Designer/Engineers\"\r\n },\r\n rds: {col: rds_grad,\r\n  name: \"Researcher/Designer/Engineers\"\r\n },\r\n}\r\n    \r\n\r\nfunction IndividualStats(props) {\r\n    \r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [user, setUser] = useState([]);\r\n    var num_cols = 10\r\n    var num_rows = 20\r\n    var denom = 50\r\n\r\n    /*\r\n    const [isLoading2, setLoading2] = useState(true);\r\n    const [med, setMed] = useState([]);\r\n    */\r\n\r\n    useEffect(() => {\r\n        axios\r\n        .get(`http://localhost:4001/twitter/userWhereID/${id}`)\r\n        .then(response => {\r\n          setUser(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch(error => console.error(`There was an error retrieving the retweets list: ${error}`));\r\n        \r\n\r\n      }, []);\r\n\r\n      if (isLoading) {\r\n        return <div>\r\n        <Card>\r\n            <Title>My Tweets</Title>\r\n            <p>Loading...</p>\r\n        </Card>\r\n        </div>\r\n      } else {\r\n        var f = JSON.parse(user[0]['followers_class'])\r\n        var tot_fsquares = 0\r\n        for (const key in f){\r\n          tot_fsquares = tot_fsquares + Math.round(f[key] / denom)\r\n        }\r\n\r\n        var d = JSON.parse(user[0]['median_downstream_class'])\r\n        var tot_dsquares = 0\r\n        for (const key in d){\r\n          tot_dsquares = tot_dsquares + Math.round(d[key] / denom)\r\n        }\r\n\r\n        var num = Math.max(tot_fsquares, tot_dsquares)\r\n        num = Math.floor(Math.sqrt(num)) + 1\r\n        num_cols = num\r\n        num_rows = num + 1\r\n\r\n      }\r\n      \r\n      /*\r\n      //Followers Popover\r\n      const pop_followers = (\r\n        <Popover id=\"popover-basic\" placement=\"bottom\" style={vizpop}>\r\n            <Popover.Title>Median Followers</Popover.Title>\r\n          <Popover.Content>\r\n          <Card>\r\n            <div className=\"columns\">\r\n            <div className=\"column\">\r\n            <Poptitle>Community Median</Poptitle>\r\n          <WaffleChart legend_pos = \"right\" divid = \"medfollowers\" vars = {[{name: \"Researchers\", data: med[med.length - 1]['researchers']}, {name: \"Non-researchers\", data: med[med.length-1]['non_researchers']}]} r = {med[med.length - 1]['researchers']} n = {med[med.length - 1]['non_researchers']} />\r\n          </div>\r\n          <div className=\"column\">\r\n            <Poptitle>My Followers</Poptitle>\r\n            <WaffleChart divid = \"myfollowerscomp\" vars = {[{name: \"Researchers\", data: snaps[snaps.length - 1]['researchers']}, {name: \"Non-researchers\", data: snaps[snaps.length-1]['non_researchers']}]} />\r\n            </div>\r\n            </div>\r\n            </Card>\r\n          </Popover.Content>\r\n        </Popover>\r\n      );\r\n      \r\n      const PopFollowers = () => (\r\n        <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={pop_followers}>\r\n        <Button variant=\"outline-primary\">Compare to Community Median</Button>\r\n          \r\n        </OverlayTrigger>\r\n      );\r\n\r\n      //Downstream Popover\r\n      const pop_downstream = (\r\n        <Popover id=\"popover-basic\" placement=\"top\" style={vizpop}>\r\n            <Popover.Title>Median Downstream</Popover.Title>\r\n          <Popover.Content>\r\n            <Card>\r\n            <div className=\"columns\">\r\n            <div className=\"column\">\r\n            <Poptitle>Community Median</Poptitle>\r\n            <WaffleChart legend_pos = \"right\" divid = \"meddownstream\" vars = {[{name: \"Researchers\", data: med[med.length - 1]['median_down_r']}, {name: \"Non-researchers\", data: med[med.length-1]['median_down_n']}]} />\r\n            </div>\r\n            <div className=\"column\">\r\n            <Poptitle>My Downstream</Poptitle>\r\n            <WaffleChart divid = \"mydownstreamcomp\" vars = {[{name: \"Researchers\", data: snaps[snaps.length - 1]['median_down_r']}, {name: \"Non-researchers\", data: snaps[snaps.length-1]['median_down_n']}]} />\r\n            </div>\r\n            </div>\r\n            </Card>\r\n          </Popover.Content>\r\n        </Popover>\r\n      );\r\n      \r\n      const PopDownstream = () => (\r\n        <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={pop_downstream}>\r\n        <Button variant=\"outline-primary\">Compare to Community Median</Button>\r\n          \r\n        </OverlayTrigger>\r\n      );\r\n\r\n      //Growth Popover\r\n      const pop_growth = (\r\n        <Popover id=\"popover-basic\" placement=\"top\" style={linepop}>\r\n          <Popover.Content>\r\n\r\n            <Poptitle>Community Median</Poptitle>\r\n          <LineChart data = {snaps} med = {med} id = {\"indlinemed\"} dv = \"total_followers\" yaxis = \"Followers\"/>\r\n\r\n          </Popover.Content>\r\n        </Popover>\r\n      );\r\n      \r\n      const PopGrowth= () => (\r\n        <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={pop_growth}>\r\n        <Button variant=\"outline-primary\">Compare to Community Median</Button>\r\n        </OverlayTrigger>\r\n      );\r\n\r\n      //Tweet Popover\r\n      const pop_tweet = (\r\n        <Popover id=\"popover-basic\" placement=\"top\" style={linepop}>\r\n          <Popover.Content>\r\n          <Poptitle>Community Median</Poptitle>\r\n          <LineChart data = {snaps} med = {med} id = {\"indlinemed2\"} dv = \"total_tweets\" yaxis = \"Tweets\"/>\r\n          </Popover.Content>\r\n        </Popover>\r\n      );\r\n      \r\n      const PopTweet= () => (\r\n        <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={pop_tweet}>\r\n        <Button variant=\"outline-primary\">Compare to Community Median</Button>\r\n        </OverlayTrigger>\r\n      ); */\r\n\r\n      \r\n\r\n      return(\r\n\r\n<div>\r\n    <Card style ={{padding:\"2em\"}}>\r\n        <Title>What is my reach?</Title>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Subtitle>My Followers</Subtitle>\r\n                    {/*<WaffleChart divid = \"myfollowers\" data = {user['followers_class']} />*/}\r\n                    {/*<PopFollowers/>*/}\r\n                    <IconArray divid = \"followers_icon\" data = {JSON.parse(user[0]['followers_class'])} cols = {num_cols} rows = {num_rows} denom = {denom} series_dict = {series_dict}/>\r\n                    \r\n                </div>\r\n                <div className='column'>\r\n                    <Subtitle>My Downstream Audience</Subtitle>\r\n                    {/*<WaffleChart divid = \"mydownstream\" data = {user['followers_class']} />*/}\r\n                    {/*<PopDownstream/>*/}\r\n                    <IconArray divid = \"downstream_icon\" data = {JSON.parse(user[0]['median_downstream_class'])} cols = {num_cols} rows = {num_rows} denom = {denom} series_dict = {series_dict}/>\r\n                </div>\r\n            </div>\r\n\r\n            <br/>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                  <Subtitle>Followers' Top Keywords</Subtitle>\r\n                  <BubbleChart divid = \"f_bubble\" data = {JSON.parse(user[0]['follower_keywords'])}/>\r\n\r\n                </div>\r\n                <div className='column'>\r\n                  <Subtitle>Downstream Top Keywords</Subtitle>\r\n                  <BubbleChart divid = \"d_bubble\" data = {JSON.parse(user[0]['downstream_keywords'])}/>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n              <Subtitle>My Tweets</Subtitle>\r\n              <MyTweets id = {user[0].id_text} cols = {num_cols} rows = {num_rows} denom = {denom} series_dict = {series_dict}/>\r\n            </div>\r\n    </Card>\r\n    <br/>\r\n\r\n    <Card style ={{padding:\"2em\"}}>\r\n      <Title>What is my audience interested in?</Title>\r\n      <div className='columns'>\r\n                <div className='column'>\r\n                  <Subtitle>Top Tweets</Subtitle>\r\n                  <TopTweets data = {JSON.parse(user[0]['audience_top_tweets'])}/>\r\n\r\n                </div>\r\n                <div className='column'>\r\n                  <Subtitle>Trending</Subtitle>\r\n                  <Trending data = {JSON.parse(user[0]['audience_trending'])}/>\r\n\r\n                </div>\r\n            </div>\r\n    </Card>\r\n\r\n</div>\r\n      );\r\n};\r\n\r\n\r\nexport default IndividualStats;"]},"metadata":{},"sourceType":"module"}