[{"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\index.tsx":"1","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\serviceWorker.ts":"2","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\config\\fa.config.ts":"3","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\App.tsx":"4","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\config\\routes.config.ts":"5","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\Layout.tsx":"6","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\withTracker.tsx":"7","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\index.ts":"8","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\index.ts":"9","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\MetaInfo.tsx":"10","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\Footer.tsx":"11","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\BackToTop.tsx":"12","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\NavBar.tsx":"13","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\NotFound.tsx":"14","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\index.ts":"15","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\About\\index.ts":"16","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\Home.tsx":"17","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\About\\About.tsx":"18","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\config\\features.config.ts":"19","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\index.ts":"20","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\CommunityStats.tsx":"21","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\IndividualStats.tsx":"22","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\TweetsWaffle.tsx":"23","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\MyWaffle.tsx":"24","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\MyContributions.tsx":"25","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\MyDownstream.tsx":"26","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\Individual.tsx":"27","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\MyTweets.tsx":"28","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\WaffleChart.tsx":"29","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\LineChart.tsx":"30","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\IconArray.tsx":"31","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\BubbleChart.tsx":"32","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\Trending.tsx":"33","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\TopTweets.tsx":"34","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\BubbleLite.tsx":"35","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\CustomLegend.tsx":"36","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\SideBar.tsx":"37","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\Categories.tsx":"38","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Tweets\\index.ts":"39","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Tweets\\Tweets.tsx":"40"},{"size":606,"mtime":1617049482669,"results":"41","hashOfConfig":"42"},{"size":5344,"mtime":1614571602420,"results":"43","hashOfConfig":"42"},{"size":493,"mtime":1614571602411,"results":"44","hashOfConfig":"42"},{"size":916,"mtime":1624919930953,"results":"45","hashOfConfig":"42"},{"size":1351,"mtime":1624919612021,"results":"46","hashOfConfig":"42"},{"size":325,"mtime":1624578032562,"results":"47","hashOfConfig":"42"},{"size":919,"mtime":1614571602421,"results":"48","hashOfConfig":"42"},{"size":145,"mtime":1624919333997,"results":"49","hashOfConfig":"42"},{"size":295,"mtime":1624575592730,"results":"50","hashOfConfig":"42"},{"size":495,"mtime":1614571602409,"results":"51","hashOfConfig":"42"},{"size":1027,"mtime":1614571602409,"results":"52","hashOfConfig":"42"},{"size":2228,"mtime":1614571602409,"results":"53","hashOfConfig":"42"},{"size":1511,"mtime":1624919645661,"results":"54","hashOfConfig":"42"},{"size":965,"mtime":1614571602410,"results":"55","hashOfConfig":"42"},{"size":50,"mtime":1614571602419,"results":"56","hashOfConfig":"42"},{"size":53,"mtime":1614571602413,"results":"57","hashOfConfig":"42"},{"size":7039,"mtime":1624907176763,"results":"58","hashOfConfig":"42"},{"size":3480,"mtime":1614571602412,"results":"59","hashOfConfig":"42"},{"size":777,"mtime":1614571602411,"results":"60","hashOfConfig":"42"},{"size":901,"mtime":1624906542420,"results":"61","hashOfConfig":"42"},{"size":3174,"mtime":1618849396865,"results":"62","hashOfConfig":"42"},{"size":13599,"mtime":1626398964041,"results":"63","hashOfConfig":"42"},{"size":10288,"mtime":1617237249802,"results":"64","hashOfConfig":"42"},{"size":6945,"mtime":1614571602417,"results":"65","hashOfConfig":"42"},{"size":3788,"mtime":1621270683733,"results":"66","hashOfConfig":"42"},{"size":5287,"mtime":1614571602417,"results":"67","hashOfConfig":"42"},{"size":791,"mtime":1623192755030,"results":"68","hashOfConfig":"42"},{"size":7858,"mtime":1624938832752,"results":"69","hashOfConfig":"42"},{"size":8712,"mtime":1623262523024,"results":"70","hashOfConfig":"42"},{"size":5464,"mtime":1617674190516,"results":"71","hashOfConfig":"42"},{"size":9506,"mtime":1625270605742,"results":"72","hashOfConfig":"42"},{"size":8758,"mtime":1624403411500,"results":"73","hashOfConfig":"42"},{"size":7410,"mtime":1625169516936,"results":"74","hashOfConfig":"42"},{"size":4886,"mtime":1624939771343,"results":"75","hashOfConfig":"42"},{"size":6826,"mtime":1624574588888,"results":"76","hashOfConfig":"42"},{"size":1952,"mtime":1625600685712,"results":"77","hashOfConfig":"42"},{"size":1205,"mtime":1624735633988,"results":"78","hashOfConfig":"42"},{"size":947,"mtime":1624906505483,"results":"79","hashOfConfig":"42"},{"size":56,"mtime":1624919365437,"results":"80","hashOfConfig":"42"},{"size":1967,"mtime":1624919733991,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"kmprk5",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"84"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"84"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"84"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"84"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"84"},"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\index.tsx",[],["186","187"],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\serviceWorker.ts",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\config\\fa.config.ts",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\App.tsx",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\config\\routes.config.ts",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\Layout.tsx",["188","189"],"import React, { Fragment } from 'react';\r\nimport { Footer, NavBar, BackToTop, SideBar } from './components';\r\nimport styled from 'styled-components';\r\n\r\nconst Layout: React.FC = ({ children }) => (\r\n  <Fragment>\r\n    <NavBar />\r\n    {children}\r\n    <BackToTop />\r\n    <Footer />\r\n  </Fragment>\r\n);\r\n\r\nexport default Layout;\r\n","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\withTracker.tsx",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\index.ts",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\index.ts",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\MetaInfo.tsx",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\Footer.tsx",["190","191","192"],"import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Footer: React.FC = () => (\r\n  <footer className='footer'>\r\n    {/* <div className='buttons'>\r\n      <a\r\n        target='_blank'\r\n        aria-label='GitHub'\r\n        rel='noopener noreferrer'\r\n        className='button is-medium'\r\n        href='https://github.com/based-ghost'\r\n      >\r\n        <FontAwesomeIcon icon={['fab', 'github']} />\r\n      </a>\r\n      <a\r\n        href='#/'\r\n        aria-label='Twitter'\r\n        className='button is-medium'\r\n      >\r\n        <FontAwesomeIcon icon={['fab', 'twitter']} />\r\n      </a>\r\n      <a\r\n        href='#/'\r\n        aria-label='Medium'\r\n        className='button is-medium'\r\n      >\r\n        <FontAwesomeIcon icon={['fab', 'medium-m']} />\r\n      </a>\r\n    </div> */}\r\n    <div className='content'>\r\n      <img src = \"hci-com/uwcse.png\" width= \"350\"></img>\r\n      <img src = \"hci-com/uwhcde.png\" width= \"300\"></img>\r\n    </div>\r\n\r\n\r\n\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\BackToTop.tsx",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\NavBar.tsx",["193","194"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { RoutesConfig } from '../config/routes.config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { ReactComponent as ReactSeoLogoSvg } from '../assets/img/ReactSeoLogo.svg';\r\n\r\nconst NavBar: React.FC = () => (\r\n  <nav\r\n    role='navigation'\r\n    className='navbar'\r\n    aria-label='main navigation'\r\n  >\r\n    <div className='navbar-wrapper'>\r\n      <div className='brand-wrapper'>\r\n        Insert Logo Here\r\n      </div>\r\n      <div className='navbar-routes'>\r\n        <NavLink\r\n          className='navbar-item'\r\n          to={RoutesConfig.Home.path}\r\n          exact={RoutesConfig.Home.exact}\r\n          activeClassName={RoutesConfig.Home.activeClassName}\r\n        >\r\n          <span>{RoutesConfig.Home.displayName}</span>\r\n        </NavLink>\r\n        <NavLink\r\n          className='navbar-item'\r\n          to={RoutesConfig.About.path}\r\n          exact={RoutesConfig.About.exact}\r\n          activeClassName={RoutesConfig.About.activeClassName}\r\n        >\r\n          <span>{RoutesConfig.About.displayName}</span>\r\n        </NavLink>\r\n\r\n        <NavLink\r\n          className='navbar-item'\r\n          to={RoutesConfig.Tweets.path}\r\n          exact={RoutesConfig.Tweets.exact}\r\n          activeClassName={RoutesConfig.Tweets.activeClassName}\r\n        >\r\n          <span>{RoutesConfig.Tweets.displayName}</span>\r\n        </NavLink>\r\n      \r\n      </div>\r\n    </div>\r\n  </nav>\r\n);\r\n\r\nexport default NavBar;\r\n","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\NotFound.tsx",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\index.ts",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\About\\index.ts",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\Home.tsx",["195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216"],"import React, { useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { MetaInfo } from '../../components';\r\nimport { RoutesConfig } from '../../config/routes.config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { FeatureInfoConfig, FeatureInfo } from '../../config/features.config';\r\nimport axios from 'axios'\r\nimport { CommunityStats, Individual, IndividualStats, MyContributions, CustomLegend, Categories} from './components';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport { Tweet} from 'react-twitter-widgets'\r\nimport Card from 'react-bootstrap/Card';\r\nimport SideBar from '../../components/SideBar';\r\n\r\nconst Grid = styled.div`\r\n&&& {\r\n  display: grid;\r\n  grid-column-gap: 0px;\r\n  grid-template-columns: auto 1px;\r\n}`\r\n\r\nconst Space = styled.p`\r\n    &&& {\r\n    padding: 0em;\r\n    margin-bottom: 1.4em;\r\n}`\r\n\r\nconst Sticky = styled.div`\r\n&&& {\r\n  position: -webkit-sticky; /* Safari */\r\n  position: sticky;\r\n  top: 50%;\r\n  left: 75%;\r\n  max-height: 300px;\r\n  max-width: 250px;\r\n}`\r\n\r\nconst Test = styled.div`\r\n&&& {\r\n  position: -webkit-sticky; /* Safari */\r\n  position: sticky;\r\n  top: 2%;\r\n  left: 95%;\r\n  max-height: 300px;\r\n  max-width: 250px;\r\n  background-color: lightblue;\r\n}`\r\n\r\nconst Title = styled.p`\r\n    &&& {\r\n    font-size: 30px;\r\n    font-weight:bold;\r\n}`\r\n\r\nconst Subtitle = styled.p`\r\n    &&& {\r\n    padding: .05em;\r\n    font-size: 24px;\r\n}`\r\n\r\nconst Home: React.FC = () => {\r\n  const featureList = useMemo<FeatureInfo[]>(() => {\r\n    return Object.keys(FeatureInfoConfig).map((key) => FeatureInfoConfig[key]);\r\n  }, []);\r\n\r\n  function CSVToArray( strData, strDelimiter ){\r\n    // Check to see if the delimiter is defined. If not,\r\n    // then default to comma.\r\n    strDelimiter = (strDelimiter || \",\");\r\n\r\n    // Create a regular expression to parse the CSV values.\r\n    var objPattern = new RegExp(\r\n        (\r\n            // Delimiters.\r\n            \"(\\\\\" + strDelimiter + \"|\\\\r?\\\\n|\\\\r|^)\" +\r\n\r\n            // Quoted fields.\r\n            \"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" +\r\n\r\n            // Standard fields.\r\n            \"([^\\\"\\\\\" + strDelimiter + \"\\\\r\\\\n]*))\"\r\n        ),\r\n        \"gi\"\r\n        );\r\n\r\n\r\n    // Create an array to hold our data. Give the array\r\n    // a default empty first row.\r\n    var arrData = [[]];\r\n\r\n    // Create an array to hold our individual pattern\r\n    // matching groups.\r\n    var arrMatches = null;\r\n\r\n\r\n    // Keep looping over the regular expression matches\r\n    // until we can no longer find a match.\r\n    while (arrMatches = objPattern.exec( strData )){\r\n\r\n        // Get the delimiter that was found.\r\n        var strMatchedDelimiter = arrMatches[ 1 ];\r\n\r\n        // Check to see if the given delimiter has a length\r\n        // (is not the start of string) and if it matches\r\n        // field delimiter. If id does not, then we know\r\n        // that this delimiter is a row delimiter.\r\n        if (\r\n            strMatchedDelimiter.length &&\r\n            strMatchedDelimiter !== strDelimiter\r\n            ){\r\n\r\n            // Since we have reached a new row of data,\r\n            // add an empty row to our data array.\r\n            arrData.push( [] );\r\n\r\n        }\r\n\r\n        var strMatchedValue;\r\n\r\n        // Now that we have our delimiter out of the way,\r\n        // let's check to see which kind of value we\r\n        // captured (quoted or unquoted).\r\n        if (arrMatches[ 2 ]){\r\n\r\n            // We found a quoted value. When we capture\r\n            // this value, unescape any double quotes.\r\n            strMatchedValue = arrMatches[ 2 ].replace(\r\n                new RegExp( \"\\\"\\\"\", \"g\" ),\r\n                \"\\\"\"\r\n                );\r\n\r\n        } else {\r\n\r\n            // We found a non-quoted value.\r\n            strMatchedValue = arrMatches[ 3 ];\r\n\r\n        }\r\n\r\n\r\n        // Now that we have our value string, let's add\r\n        // it to the data array.\r\n        arrData[ arrData.length - 1 ].push( strMatchedValue );\r\n    }\r\n\r\n    // Return the parsed data.\r\n    return( arrData );\r\n}\r\n\r\n  return (\r\n    <div className='view-wrapper'>\r\n      <MetaInfo {...RoutesConfig.Home.metaInfo} />\r\n      \r\n      <section className='container dashboard-content'>\r\n        <div className='columns'>\r\n          <div className='column'>\r\n            <p className='title'>HCI COM</p>\r\n            <p className='subtitle'>Twitter Science Communication Research</p>\r\n            <div className='content'>\r\n\r\n            <Space>\r\n            This site is intended to show the reach of the HCI research community on Twitter, as well as to provide personal analytics to help individuals learn more about their audiences and make the most of\r\n            the platform. The first section shows the current reach and growth of the HCI community, to show the magnitude of activity and the number of non-researchers following members of the community. \r\n            <br/> \r\n            </Space>\r\n\r\n            <Space>\r\n            As you scroll down, you can see your personal analytics. By checking out your current followers and average \"downstream\" audience (those exposed to your tweets via retweets), you can see learn whether\r\n            your tweets are reaching users outside the research community. If so, it may be worth thinking about whether you should tailor your tweets to non-research audiences. In the same section, you can see\r\n            how often you've linked to research papers and blog posts across various hosting sites. By promoting your work and others, you can help highlight the important work being done in our community. \r\n            <br/>\r\n            </Space>\r\n\r\n            <Space>\r\n            At the bottom of the page, you can see the downstream audiences for some of your reason tweets. If you've tweeted about research you've done, or a perspective on an important issue, or a call for \r\n            participants, or anything else, you can see how many people were potentially exposed. \r\n            </Space>\r\n\r\n            \r\n\r\n            {/* <Tweet tweetId=\"841418541026877441\" options={{ width: \"200\" }}/> */}\r\n            </div>\r\n          </div>\r\n          <div className = 'column'>\r\n            <img src = \"hci-com/graph.png\"></img>\r\n          </div>\r\n        </div>\r\n\r\n        <Grid>\r\n          <Individual/>\r\n          <SideBar />\r\n        </Grid>\r\n\r\n        <div className='columns'>\r\n          <div className='column'>\r\n            <p className='title'>HCI COM</p>\r\n            <div className='content'>\r\n            HAVE A NICE CALL TO ACTION HERE ABOUT JOINING THE HCI COM COMMUNITY POOL – WANT TO SEE MORE? STAY UP TO DATE? BE A PART OF THE COMMUNITY TO SEE YOUR STATS IN THE COMMUNITY INFORMATION, SHARE TO INFORM YOUR COMMUNITY\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\About\\About.tsx",["217"],"import React from 'react';\r\nimport { MetaInfo } from '../../components';\r\nimport { RoutesConfig } from '../../config/routes.config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst About: React.FC = () => (\r\n  <div className='container view-wrapper'>\r\n    <section className = 'container dashboard-content'>\r\n    <MetaInfo {...RoutesConfig.About.metaInfo} />\r\n    {/* { <div className='tile is-parent is-8 is-vertical is-notification-tile'>\r\n      <div className='notification tile is-child is-primary pageSlideDown-animation'>\r\n        <div>\r\n          <FontAwesomeIcon icon='info-circle' size='2x' />\r\n          <span className='title'>About Page</span>\r\n        </div>\r\n        <p className='subtitle'>Very interesting information may go here.</p>\r\n      </div>\r\n    </div> } */}\r\n    <div className='columns'>\r\n      <div className='column'>\r\n        <p className='title'>About the Project</p>\r\n        <div className='content'>\r\n          Lorem ipsum dolor sit amet, alia appareat usu id, has legere facilis\r\n          in. Nam inani malorum epicuri id, illud eleifend reformidans nec cu.\r\n          Stet meis rebum quo an, ad recusabo praesent reprimique duo, ne\r\n          delectus expetendis philosophia nam. Mel lorem recusabo ex, vim\r\n          congue facilisis eu, id vix oblique mentitum. Vide aeterno duo ei.\r\n          Qui ne urbanitas conceptam deseruisse, commune philosophia eos no.\r\n          Id ullum reprimique qui, vix ei malorum assueverit contentiones. Nec\r\n          facilis dignissim efficiantur ad, tantas tempor nam in. Per feugait\r\n          atomorum ut. Novum appareat ei usu, an usu omnium concludaturque. Et\r\n          nam latine mentitum, impedit explicari ullamcorper ut est, vis ipsum\r\n          viderer ei. Porro essent eu per, ut tantas dissentias vim. Dicant\r\n          regione argumentum vis id, adipisci accusata postulant at vix.\r\n          Adipisci vituperata ea duo, eu summo detracto mei, et per option\r\n          periculis. Eos laudem vivendo ex.\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <hr/>\r\n  \r\n    <div className = 'columns'>\r\n      <div className='column'>\r\n      <p className = 'title'>About the Team</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div className='columns'>\r\n      <div className='column'>\r\n        <p className='subtitle'>Spencer Williams</p>\r\n        <div className='content'>\r\n          PhD Student <br/>\r\n          UW Human Centered Design and Engineering\r\n        </div>\r\n      </div>\r\n      <div className='column'>\r\n        <p className='subtitle'>Gary Hsieh</p>\r\n        <div className='content'>\r\n          Associate Professor <br/>\r\n          UW Human Centered Design and Engineering\r\n        </div>\r\n      </div>\r\n      <div className='column'>\r\n        <p className='subtitle'>Katharina Reinecke</p>\r\n        <div className='content'>\r\n         Associate Professor <br/>\r\n         UW Computer Science and Engineering\r\n        </div>\r\n      </div>\r\n      <div className='column'>\r\n        <p className='subtitle'>Keri Mallari</p>\r\n        <div className='content'>\r\n          PhD Student <br/>\r\n          UW Human Centered Design and Engineering\r\n        </div>\r\n      </div>\r\n      <div className='column'>\r\n        <p className='subtitle'>Carol Lei</p>\r\n        <div className='content'>\r\n          Undergraduate Student <br/>\r\n          UW Human Centered Design and Engineering\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  </div>\r\n);\r\n\r\nexport default About;\r\n","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\config\\features.config.ts",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\index.ts",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\CommunityStats.tsx",["218","219","220","221","222","223","224"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport {TweetsWaffle} from \"../components\";\r\nimport WaffleChart from './WaffleChart';\r\nimport LineChart from './LineChart';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Title = styled.p`\r\n    &&& {\r\n    font-size: 30px;\r\n    font-weight:bold;\r\n}`\r\n\r\nconst Subtitle = styled.p`\r\n    &&& {\r\n    padding: .05em;\r\n    font-size: 24px;\r\n}`\r\n    \r\n\r\nfunction CommunityStats(props) {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [snaps, setSnaps] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n        .get(`http://localhost:4001/twitter/communityAll`)\r\n        .then(response => {\r\n          setSnaps(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch(error => console.error(`There was an error retrieving the retweets list: ${error}`));\r\n      }, []);\r\n\r\n      if (isLoading) {\r\n        return <div>\r\n        <Card>\r\n            <Title>My Tweets</Title>\r\n            <p>Loading...</p>\r\n        </Card>\r\n        </div>\r\n      }\r\n\r\n      return(\r\n\r\n<div>\r\n    <Card style ={{padding:\"2em\"}}>\r\n        <Title>A look at the HCI Research Community on Twitter</Title>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Subtitle>Community Followers</Subtitle>\r\n                    <WaffleChart divid = \"communityfollow\" vars = {[{name: \"Researchers\", data: snaps[snaps.length - 1]['researchers']}, {name: \"Non-researchers\", data: snaps[snaps.length-1]['non_researchers']}]} data = {snaps[snaps.length - 1]} r = {snaps[snaps.length - 1]['researchers']} n = {snaps[snaps.length - 1]['non_researchers']} />\r\n                    \r\n                </div>\r\n                <div className='column'>\r\n                    <Subtitle>Tweet Content</Subtitle>\r\n                    <WaffleChart scheme = \"tweets\" divid = \"communitytweets\" vars = {[{name: \"Paper\", data: snaps[snaps.length - 1]['paper_tweets']}, {name: \"Blog\", data: snaps[snaps.length - 1]['blog_tweets']}, {name: \"None\", data: (snaps[snaps.length - 1]['total_tweets'] - (snaps[snaps.length - 1]['paper_tweets'] + snaps[snaps.length - 1]['blog_tweets']) )}]} />\r\n                </div>\r\n            </div>\r\n\r\n            <br/>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Subtitle>Follower Growth</Subtitle>\r\n                    <LineChart data = {snaps} id = {\"comline\"} dv = \"total_followers\" yaxis = \"Followers\" />\r\n                </div>\r\n                <div className='column'>\r\n                    <Subtitle>Total Tweets</Subtitle>\r\n                    <LineChart data = {snaps} id = {\"tline\"} dv = \"total_tweets\" yaxis = \"Tweets\"/>\r\n                </div>\r\n            </div>\r\n    </Card>\r\n    <br/>\r\n</div>\r\n);\r\n}\r\n\r\n\r\nexport default CommunityStats;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\IndividualStats.tsx",["225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245"],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\TweetsWaffle.tsx",["246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273"],"import React, { useRef, useLayoutEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport axios from 'axios'\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nfunction WaffleProportionCheat(n: Number, m: Number, o: Number){\r\n  var data1 = [];\r\n  var data2 = [];\r\n  var data3 = [];\r\n  var x_val = n.valueOf();\r\n  var y_val = m.valueOf();\r\n  var z_val = o.valueOf();\r\n\r\n  var tot = x_val + y_val + z_val;\r\n\r\n  var num_cols = parseInt(Math.sqrt((tot / 50)).toFixed());\r\n\r\n  num_cols = Math.max(3, num_cols);\r\n  num_cols = Math.min(30, num_cols)\r\n\r\n  var num_cells = num_cols * num_cols\r\n\r\n  var num1 = x_val / tot;\r\n  var num2 = y_val / tot;\r\n  var num3 = 1 - (num1+num2)\r\n\r\n  var s1 = (num1 * num_cells).toFixed();\r\n  var s2 = (num2 * num_cells).toFixed();\r\n  var s3 = (num3 * num_cells).toFixed();\r\n\r\n  var r1 = parseInt(s1);\r\n  var r2 = parseInt(s2);\r\n  var r3 = parseInt(s3)\r\n\r\n  var row = 1\r\n  var col = 1\r\n\r\n  var new_data_x = [];\r\n  var new_data_y = [];\r\n\r\n  for (let i = 1; i <= num_cols; i++) {\r\n    new_data_x.push({x : i.toString()});\r\n  }\r\n\r\n  for (let i = 1; i <= num_cols; i++) {\r\n    new_data_y.push({y : i.toString()});\r\n  }\r\n\r\n  for (let i = 0; i < r1; i++) {\r\n    var x_str = row.toString();\r\n    var y_str = col.toString();\r\n    data1.push({ x: x_str, y: y_str});\r\n    if(col == num_cols){\r\n      row = row + 1;\r\n      col = 1\r\n    } else {\r\n      col = col + 1\r\n    }\r\n  }\r\n\r\n  for (let i = r1; i < r1+r2; i++) {\r\n    var x_str = row.toString();\r\n    var y_str = col.toString();\r\n    data2.push({ x: x_str, y: y_str});\r\n    if(col == num_cols){\r\n      row = row + 1;\r\n      col = 1\r\n    } else {\r\n      col = col + 1\r\n    }\r\n  }\r\n\r\n  for (let i = r1+r2; i < num_cells; i++) {\r\n    var x_str = row.toString();\r\n    var y_str = col.toString();\r\n    data3.push({ x: x_str, y: y_str});\r\n    if(col == num_cols){\r\n      row = row + 1;\r\n      col = 1\r\n    } else {\r\n      col = col + 1\r\n    }\r\n  }\r\n\r\n  return([data1, data2, data3, new_data_x, new_data_y]);\r\n}\r\n\r\nfunction WaffleProportion(n: Number, m: Number, o: Number){\r\n  var data1 = []\r\n  var data2 = []\r\n  var data3 = []\r\n  var x_val = n.valueOf();\r\n  var y_val = m.valueOf();\r\n  var z_val = o.valueOf();\r\n  var tot = x_val + y_val + z_val;\r\n  var num1 = x_val / tot;\r\n  var num2 = y_val / tot;\r\n  var num3 = 1 - (num1+num2)\r\n\r\n  var s1 = (num1 * 100).toFixed();\r\n  var s2 = (num2 * 100).toFixed();\r\n  var s3 = (num3 * 100).toFixed();\r\n\r\n  var r1 = parseInt(s1);\r\n  var r2 = parseInt(s2);\r\n  var r3 = parseInt(s3);\r\n  console.log(r1);\r\n  console.log(r2);\r\n  console.log(r3);\r\n\r\n  var row = 1\r\n  var col = 1\r\n\r\n  for (let i = 0; i < r1; i++) {\r\n    var x_str = row.toString();\r\n    var y_str = col.toString();\r\n    data1.push({ x: x_str, y: y_str});\r\n    if(col == 10){\r\n      row = row + 1;\r\n      col = 1\r\n    } else {\r\n      col = col + 1\r\n    }\r\n  }\r\n\r\n  for (let i = r1; i < r1+r2; i++) {\r\n    var x_str = row.toString();\r\n    var y_str = col.toString();\r\n    data2.push({ x: x_str, y: y_str});\r\n    if(col == 10){\r\n      row = row + 1;\r\n      col = 1\r\n    } else {\r\n      col = col + 1\r\n    }\r\n  }\r\n\r\n  for (let i = r1+r2; i < 100; i++) {\r\n    var x_str = row.toString();\r\n    var y_str = col.toString();\r\n    data3.push({ x: x_str, y: y_str});\r\n    if(col == 10){\r\n      row = row + 1;\r\n      col = 1\r\n    } else {\r\n      col = col + 1\r\n    }\r\n  }\r\n\r\n  return([data1, data2, data3]);\r\n}\r\n\r\n\r\n\r\nfunction TweetsWaffle(props) {\r\n  const chart2 = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    let x = am4core.create(\"chart2div\", am4charts.XYChart);\r\n\r\n    x.paddingRight = 20;\r\n    x.paddingLeft = 20;\r\n\r\n    /* Chart code */\r\n// Themes begin\r\nam4core.useTheme(am4themes_animated);\r\n// Themes end\r\n\r\n// Chart\r\nlet chart2 = am4core.create( \"chart2div\", am4charts.XYChart );\r\nchart2.hiddenState.properties.opacity = 0; // this creates initial fade-in\r\n//chart.colors.step = 2;\r\nchart2.colors.list = [am4core.color( \"#98a2df\" ), am4core.color( \"#e96b6a\" ), am4core.color(\"#7FB285\")]\r\n\r\n// X axis\r\nlet xAxis = chart2.xAxes.push( new am4charts.CategoryAxis() );\r\nxAxis.dataFields.category = \"x\";\r\nxAxis.renderer.grid.template.location = 0;\r\nxAxis.renderer.minGridDistance = 10;\r\nxAxis.renderer.labels.template.disabled = true;\r\nxAxis.data = [{ x: \"1\" }, { x: \"2\" }, { x: \"3\" }, { x: \"4\" }, { x: \"5\" }, { x: \"6\" }, { x: \"7\" }, { x: \"8\" }, { x: \"9\" }, { x: \"10\" }];\r\n\r\n// Y axis\r\nlet yAxis = chart2.yAxes.push( new am4charts.CategoryAxis() );\r\nyAxis.renderer.labels.template.disabled = true;\r\nyAxis.renderer.grid.template.location = 0;\r\nyAxis.renderer.minGridDistance = 10;\r\nyAxis.dataFields.category = \"y\";\r\nyAxis.data = [{ y: \"1\" }, { y: \"2\" }, { y: \"3\" }, { y: \"4\" }, { y: \"5\" }, { y: \"6\" }, { y: \"7\" }, { y: \"8\" }, { y: \"9\" }, { y: \"10\" }];\r\n\r\n// Legend\r\nchart2.legend = new am4charts.Legend();\r\nchart2.legend.position = \"right\";\r\n\r\n// Create series\r\nfunction createSeries(name) {\r\n  let series = chart2.series.push( new am4charts.ColumnSeries() );\r\n  series.dataFields.categoryX = \"x\";\r\n  series.dataFields.categoryY = \"y\";\r\n  series.sequencedInterpolation = true;\r\n  series.defaultState.transitionDuration = 3000;\r\n  series.name = name;\r\n\r\n\r\n  // Set up column appearance\r\n  let column = series.columns.template;\r\n  column.strokeWidth = 1;\r\n  column.strokeOpacity = 1;\r\n  column.stroke = am4core.color( \"#ffffff\" );\r\n  column.width = am4core.percent( 100 );\r\n  column.height = am4core.percent( 100 );\r\n  //column.column.cornerRadius(6, 6, 6, 6);\r\n  \r\n  return series;\r\n}\r\n\r\nlet series1 = createSeries(\"Paper\");\r\nseries1.data = [\r\n  { x: \"1\", y: \"1\" },\r\n  { x: \"1\", y: \"2\" },\r\n  { x: \"1\", y: \"3\" },\r\n  { x: \"1\", y: \"4\" },\r\n  { x: \"1\", y: \"5\" },\r\n  { x: \"1\", y: \"6\" },\r\n  { x: \"1\", y: \"7\" },\r\n  { x: \"1\", y: \"8\" },\r\n  { x: \"1\", y: \"9\" },\r\n  { x: \"1\", y: \"10\" },\r\n  \r\n  { x: \"2\", y: \"1\" },\r\n  { x: \"2\", y: \"2\" },\r\n  { x: \"2\", y: \"3\" },\r\n  { x: \"2\", y: \"4\" },\r\n  { x: \"2\", y: \"5\" },\r\n  { x: \"2\", y: \"6\" },\r\n  { x: \"2\", y: \"7\" },\r\n  \r\n\r\n];\r\n\r\nlet series2 = createSeries(\"Blog\");\r\nseries2.data = [\r\n  { x: \"2\", y: \"8\" },\r\n  { x: \"2\", y: \"9\" },\r\n  { x: \"2\", y: \"10\" },\r\n  \r\n  { x: \"3\", y: \"1\" },\r\n  { x: \"3\", y: \"2\" },\r\n  { x: \"3\", y: \"3\" },\r\n  { x: \"3\", y: \"4\" },\r\n  { x: \"3\", y: \"5\" },\r\n  { x: \"3\", y: \"6\" },\r\n  { x: \"3\", y: \"7\" },\r\n  { x: \"3\", y: \"8\" },\r\n  { x: \"3\", y: \"9\" },\r\n  { x: \"3\", y: \"10\" },\r\n\r\n  { x: \"4\", y: \"1\" },\r\n  { x: \"4\", y: \"2\" },\r\n  { x: \"4\", y: \"3\" },\r\n  { x: \"4\", y: \"4\" },\r\n  { x: \"4\", y: \"5\" },\r\n  { x: \"4\", y: \"6\" },\r\n  \r\n];\r\n\r\nlet series3 = createSeries(\"None\");\r\nseries3.data = [\r\n  \r\n  { x: \"4\", y: \"7\" },\r\n  { x: \"4\", y: \"8\" },\r\n  { x: \"4\", y: \"9\" },\r\n  { x: \"4\", y: \"10\" },\r\n  \r\n  { x: \"5\", y: \"1\" },\r\n  { x: \"5\", y: \"2\" },\r\n  { x: \"5\", y: \"3\" },\r\n  { x: \"5\", y: \"4\" },\r\n  { x: \"5\", y: \"5\" },\r\n  { x: \"5\", y: \"6\" },\r\n  { x: \"5\", y: \"7\" },\r\n  { x: \"5\", y: \"8\" },\r\n  { x: \"5\", y: \"9\" },\r\n  { x: \"5\", y: \"10\" },\r\n\r\n  { x: \"6\", y: \"1\" },\r\n  { x: \"6\", y: \"2\" },\r\n  { x: \"6\", y: \"3\" },\r\n  { x: \"6\", y: \"4\" },\r\n  { x: \"6\", y: \"5\" },\r\n  { x: \"6\", y: \"6\" },\r\n  { x: \"6\", y: \"7\" },\r\n  { x: \"6\", y: \"8\" },\r\n  { x: \"6\", y: \"9\" },\r\n  { x: \"6\", y: \"10\" },\r\n\r\n  { x: \"7\", y: \"1\" },\r\n  { x: \"7\", y: \"2\" },\r\n  { x: \"7\", y: \"3\" },\r\n  { x: \"7\", y: \"4\" },\r\n  { x: \"7\", y: \"5\" },\r\n  { x: \"7\", y: \"6\" },\r\n  { x: \"7\", y: \"7\" },\r\n  { x: \"7\", y: \"8\" },\r\n  { x: \"7\", y: \"9\" },\r\n  { x: \"7\", y: \"10\" },\r\n\r\n  { x: \"8\", y: \"1\" },\r\n  { x: \"8\", y: \"2\" },\r\n  { x: \"8\", y: \"3\" },\r\n  { x: \"8\", y: \"4\" },\r\n  { x: \"8\", y: \"5\" },\r\n  { x: \"8\", y: \"6\" },\r\n  { x: \"8\", y: \"7\" },\r\n  { x: \"8\", y: \"8\" },\r\n  { x: \"8\", y: \"9\" },\r\n  { x: \"8\", y: \"10\" },\r\n\r\n  { x: \"9\", y: \"1\" },\r\n  { x: \"9\", y: \"2\" },\r\n  { x: \"9\", y: \"3\" },\r\n  { x: \"9\", y: \"4\" },\r\n  { x: \"9\", y: \"5\" },\r\n  { x: \"9\", y: \"6\" },\r\n  { x: \"9\", y: \"7\" },\r\n  { x: \"9\", y: \"8\" },\r\n  { x: \"9\", y: \"9\" },\r\n  { x: \"9\", y: \"10\" },\r\n\r\n  { x: \"10\", y: \"1\" },\r\n  { x: \"10\", y: \"2\" },\r\n  { x: \"10\", y: \"3\" },\r\n  { x: \"10\", y: \"4\" },\r\n  { x: \"10\", y: \"5\" },\r\n  { x: \"10\", y: \"6\" },\r\n  { x: \"10\", y: \"7\" },\r\n  { x: \"10\", y: \"8\" },\r\n  { x: \"10\", y: \"9\" },\r\n  { x: \"10\", y: \"10\" },\r\n];\r\n\r\naxios\r\n.get(`http://localhost:4001/twitter/communityAll`)\r\n.then(response => {\r\n  // Update the books state\r\n  var com = response.data;\r\n  var coms:object[] = [];\r\n  var num1 = new Number(0)\r\n  num1 = com[com.length -1]['paper_tweets']\r\n  series1.name = \"Paper: \" + num1.toString();\r\n  \r\n  var num2 = new Number(0)\r\n  num2 = com[com.length -1]['blog_tweets']\r\n  series2.name = \"Blog: \" + num2.toString();\r\n  \r\n  var num3 = new Number(0)\r\n  num3 = com[com.length -1]['total_tweets'] - (num1.valueOf() + num2.valueOf())\r\n  series3.name = \"None: \" + num3.toString();\r\n\r\n  var datas = WaffleProportionCheat(num1, num2, num3);\r\n\r\n  xAxis.data = datas[3];\r\n  yAxis.data = datas[4];\r\n\r\n  series1.data = datas[0];\r\n  series2.data = datas[1];\r\n  series3.data = datas[2];\r\n\r\n  //Custom code for legend\r\n  chart2.legend.itemContainers.template.togglable = false;\r\n\r\nvar series_dict = {\r\n  [series1.name]: series1['columns']['template'],\r\n  [series2.name]: series2['columns']['template'],\r\n  [series3.name]: series3['columns']['template']\r\n}\r\n\r\nvar keys = [series1.name, series2.name, series3.name]\r\n\r\nchart2.legend.itemContainers.template.events.on(\"hit\", function(ev) {\r\n  console.log(\"hit\")\r\n  let seriesColumn = ev.target.dataItem.dataContext['columns']['template'];\r\n  let sname = ev.target.dataItem.dataContext['name'];\r\n  let other_series = []\r\n  for (let k of keys){\r\n    if (sname != k){\r\n      other_series.push(series_dict[k]);\r\n    }\r\n  }\r\n  if (other_series[0].isActive){\r\n    other_series.map(function(e) { \r\n      e.isActive = false; \r\n      return e;\r\n    });\r\n  } else {\r\n    other_series.map(function(e) { \r\n      e.isActive = true; \r\n      return e;\r\n    });\r\n  }\r\n  seriesColumn.isActive = false;\r\n});\r\n\r\n})\r\n.catch(error => console.error(`There was an error retrieving the user list: ${error}`))\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n        <div id=\"chart2div\" style={{ width: \"100%\", height: \"250px\" }}></div>\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default TweetsWaffle;\r\n\r\n","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\MyWaffle.tsx",["274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291"],"import React, { useRef, useLayoutEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport axios from 'axios'\r\n\r\nvar user_id = 634739719;\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nfunction WaffleProportion(n: Number, m: Number){\r\n  var data1 = []\r\n  var data2 = []\r\n  var x_val = n.valueOf();\r\n  var y_val = m.valueOf();\r\n  var tot = x_val + y_val;\r\n  var num1 = x_val / tot;\r\n  var num2 = tot - num1;\r\n\r\n  var s1 = num1.toFixed();\r\n  var s2 = num2.toFixed();\r\n\r\n  var r1 = parseInt(s1);\r\n  var r2 = parseInt(s2);\r\n\r\n  var row = 1\r\n  var col = 1\r\n\r\n  for (let i = 0; i < r1; i++) {\r\n    var x_str = row.toString();\r\n    var y_str = col.toString();\r\n    data1.push({ x: x_str, y: y_str});\r\n    if(col == 10){\r\n      row = row + 1;\r\n      col = 1\r\n    } else {\r\n      col = col + 1\r\n    }\r\n  }\r\n\r\n  for (let i = r1; i < 100; i++) {\r\n    var x_str = row.toString();\r\n    var y_str = col.toString();\r\n    data2.push({ x: x_str, y: y_str});\r\n    if(col == 10){\r\n      row = row + 1;\r\n      col = 1\r\n    } else {\r\n      col = col + 1\r\n    }\r\n  }\r\n\r\n  return([data1, data2]);\r\n}\r\n\r\nfunction MyWaffle(props) {\r\n  const chart = useRef(null);\r\n\r\n  var rs = 3600\r\n  var nrs = 6400\r\n\r\n  useLayoutEffect(() => {\r\n    let x = am4core.create(\"chartdivmy\", am4charts.XYChart);\r\n\r\n    x.paddingRight = 20;\r\n    x.paddingLeft = 20;\r\n\r\n    /* Chart code */\r\n// Themes begin\r\nam4core.useTheme(am4themes_animated);\r\n// Themes end\r\n\r\n// Chart\r\nlet chart = am4core.create( \"chartdivmy\", am4charts.XYChart );\r\nchart.hiddenState.properties.opacity = 0; // this creates initial fade-in\r\n//chart.colors.step = 2;\r\nchart.colors.list = [am4core.color( \"#98a2df\" ), am4core.color( \"#e96b6a\" ), am4core.color(\"#a2df98\")]\r\n\r\n// X axis\r\nlet xAxis = chart.xAxes.push( new am4charts.CategoryAxis() );\r\nxAxis.dataFields.category = \"x\";\r\nxAxis.renderer.grid.template.location = 0;\r\nxAxis.renderer.minGridDistance = 10;\r\nxAxis.renderer.labels.template.disabled = true;\r\nxAxis.data = [{ x: \"1\" }, { x: \"2\" }, { x: \"3\" }, { x: \"4\" }, { x: \"5\" }, { x: \"6\" }, { x: \"7\" }, { x: \"8\" }, { x: \"9\" }, { x: \"10\" }];\r\n\r\n// Y axis\r\nlet yAxis = chart.yAxes.push( new am4charts.CategoryAxis() );\r\nyAxis.renderer.labels.template.disabled = true;\r\nyAxis.renderer.grid.template.location = 0;\r\nyAxis.renderer.minGridDistance = 10;\r\nyAxis.dataFields.category = \"y\";\r\nyAxis.data = [{ y: \"1\" }, { y: \"2\" }, { y: \"3\" }, { y: \"4\" }, { y: \"5\" }, { y: \"6\" }, { y: \"7\" }, { y: \"8\" }, { y: \"9\" }, { y: \"10\" }];\r\n\r\n// Legend\r\nchart.legend = new am4charts.Legend();\r\nchart.legend.position = \"right\";\r\nchart.legend.scrollable = true;\r\nchart.legend.maxWidth = 200;\r\n\r\n// Create series\r\nfunction createSeries(name) {\r\n  let series = chart.series.push( new am4charts.ColumnSeries() );\r\n  series.dataFields.categoryX = \"x\";\r\n  series.dataFields.categoryY = \"y\";\r\n  series.sequencedInterpolation = true;\r\n  series.defaultState.transitionDuration = 3000;\r\n  series.name = name;\r\n\r\n\r\n  // Set up column appearance\r\n  let column = series.columns.template;\r\n  column.strokeWidth = 1;\r\n  column.strokeOpacity = 1;\r\n  column.stroke = am4core.color( \"#ffffff\" );\r\n  column.width = am4core.percent( 100 );\r\n  column.height = am4core.percent( 100 );\r\n  //column.column.cornerRadius(6, 6, 6, 6);\r\n  \r\n  return series;\r\n}\r\n\r\nlet series1 = createSeries(\"Researchers\");\r\nseries1.data = [\r\n  { x: \"1\", y: \"1\" },\r\n  { x: \"1\", y: \"2\" },\r\n  { x: \"1\", y: \"3\" },\r\n  { x: \"1\", y: \"4\" },\r\n  { x: \"1\", y: \"5\" },\r\n  { x: \"1\", y: \"6\" },\r\n  { x: \"1\", y: \"7\" },\r\n  { x: \"1\", y: \"8\" },\r\n  { x: \"1\", y: \"9\" },\r\n  { x: \"1\", y: \"10\" },\r\n  \r\n  { x: \"2\", y: \"1\" },\r\n  { x: \"2\", y: \"2\" },\r\n  { x: \"2\", y: \"3\" },\r\n  { x: \"2\", y: \"4\" },\r\n  { x: \"2\", y: \"5\" },\r\n  { x: \"2\", y: \"6\" },\r\n  { x: \"2\", y: \"7\" },\r\n  { x: \"2\", y: \"8\" },\r\n  { x: \"2\", y: \"9\" },\r\n  { x: \"2\", y: \"10\" },\r\n  \r\n  { x: \"3\", y: \"1\" },\r\n  { x: \"3\", y: \"2\" },\r\n  { x: \"3\", y: \"3\" },\r\n  { x: \"3\", y: \"4\" },\r\n  { x: \"3\", y: \"5\" },\r\n  { x: \"3\", y: \"6\" },\r\n  { x: \"3\", y: \"7\" },\r\n  { x: \"3\", y: \"8\" },\r\n  { x: \"3\", y: \"9\" },\r\n  { x: \"3\", y: \"10\" },\r\n\r\n  { x: \"4\", y: \"1\" },\r\n  { x: \"4\", y: \"2\" },\r\n  { x: \"4\", y: \"3\" },\r\n  { x: \"4\", y: \"4\" },\r\n  { x: \"4\", y: \"5\" },\r\n  { x: \"4\", y: \"6\" },\r\n  { x: \"4\", y: \"7\" },\r\n  { x: \"4\", y: \"8\" },\r\n  { x: \"4\", y: \"9\" },\r\n  { x: \"4\", y: \"10\" },\r\n\r\n  { x: \"5\", y: \"1\" },\r\n  { x: \"5\", y: \"2\" },\r\n  { x: \"5\", y: \"3\" },\r\n  { x: \"5\", y: \"4\" },\r\n  { x: \"5\", y: \"5\" },\r\n  { x: \"5\", y: \"6\" },\r\n  { x: \"5\", y: \"7\" },\r\n  { x: \"5\", y: \"8\" },\r\n  { x: \"5\", y: \"9\" },\r\n  { x: \"5\", y: \"10\" },\r\n\r\n  { x: \"6\", y: \"1\" },\r\n  { x: \"6\", y: \"2\" },\r\n  { x: \"6\", y: \"3\" },\r\n  { x: \"6\", y: \"4\" },\r\n  { x: \"6\", y: \"5\" },\r\n  { x: \"6\", y: \"6\" },\r\n  { x: \"6\", y: \"7\" },\r\n  { x: \"6\", y: \"8\" },\r\n  { x: \"6\", y: \"9\" },\r\n  { x: \"6\", y: \"10\" },\r\n\r\n];\r\n\r\nlet series2 = createSeries(\"Non-Researchers\");\r\nseries2.data = [\r\n  \r\n\r\n  { x: \"7\", y: \"1\" },\r\n  { x: \"7\", y: \"2\" },\r\n  { x: \"7\", y: \"3\" },\r\n  { x: \"7\", y: \"4\" },\r\n  { x: \"7\", y: \"5\" },\r\n  { x: \"7\", y: \"6\" },\r\n  { x: \"7\", y: \"7\" },\r\n  { x: \"7\", y: \"8\" },\r\n  { x: \"7\", y: \"9\" },\r\n  { x: \"7\", y: \"10\" },\r\n\r\n  { x: \"8\", y: \"1\" },\r\n  { x: \"8\", y: \"2\" },\r\n  { x: \"8\", y: \"3\" },\r\n  { x: \"8\", y: \"4\" },\r\n  { x: \"8\", y: \"5\" },\r\n  { x: \"8\", y: \"6\" },\r\n  { x: \"8\", y: \"7\" },\r\n  { x: \"8\", y: \"8\" },\r\n  { x: \"8\", y: \"9\" },\r\n  { x: \"8\", y: \"10\" },\r\n\r\n  { x: \"9\", y: \"1\" },\r\n  { x: \"9\", y: \"2\" },\r\n  { x: \"9\", y: \"3\" },\r\n  { x: \"9\", y: \"4\" },\r\n  { x: \"9\", y: \"5\" },\r\n  { x: \"9\", y: \"6\" },\r\n  { x: \"9\", y: \"7\" },\r\n  { x: \"9\", y: \"8\" },\r\n  { x: \"9\", y: \"9\" },\r\n  { x: \"9\", y: \"10\" },\r\n\r\n  { x: \"10\", y: \"1\" },\r\n  { x: \"10\", y: \"2\" },\r\n  { x: \"10\", y: \"3\" },\r\n  { x: \"10\", y: \"4\" },\r\n  { x: \"10\", y: \"5\" },\r\n  { x: \"10\", y: \"6\" },\r\n  { x: \"10\", y: \"7\" },\r\n  { x: \"10\", y: \"8\" },\r\n  { x: \"10\", y: \"9\" },\r\n  { x: \"10\", y: \"10\" },\r\n];\r\n\r\n//!!! the problem is there are no users in the db right now\r\n//the other problem is the waffle itself doesn't change\r\nvar a = new Number(100);\r\nvar b = new Number(13);\r\nconsole.log(\"waffle proportion is...\")\r\nconsole.log(WaffleProportion(a,b));\r\n\r\naxios\r\n.get(`http://localhost:4001/twitter/userWhereID/${user_id}`)\r\n.then(response => {\r\n  var com = response.data;\r\n  var coms:object[] = [];\r\n  var num = new Number(0)\r\n  num = com['followers_r']\r\n  console.log(com)\r\n  console.log(num)\r\n  series1.name = \"Researchers: \" + num.toString();\r\n\r\n  num = com['followers_n']\r\n  series2.name = \"Non-researchers: \" + num.toString();\r\n})\r\n.catch(error => console.error(`There was an error retrieving the user list: ${error}`))\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n        <div id=\"chartdivmy\" style={{ width: \"100%\", height: \"250px\" }}></div>\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default MyWaffle;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\MyContributions.tsx",["292","293","294","295","296","297","298"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport Overlay from 'react-bootstrap/Overlay'\r\nimport Button from 'react-bootstrap/Button'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport MyWaffle from './MyWaffle';\r\nimport MyDownstream from './MyDownstream';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n//var id = \"1293416714923683841\"\r\n//var id = \"192812670\"\r\n//var id = \"802233409338675200\"\r\n//var id = \"18256350\" \r\n//var id = \"2490180804\"\r\n//var id = \"18670940\"\r\n//var id = \"486899842\"\r\n//var id = \"238753895\"\r\nvar id = \"38174427\"\r\n\r\nconst Title = styled.p`\r\n    &&& {\r\n    font-size: 30px;\r\n    font-weight:bold;\r\n}`\r\n\r\nconst Subtitle = styled.p`\r\n    &&& {\r\n    padding: 0.05em;\r\n    font-size: 24px;\r\n}`\r\n\r\nconst Space = styled.p`\r\n    &&& {\r\n    padding: 0.5em;\r\n    font-size: 24px;\r\n}`\r\n\r\nconst List = styled.li`\r\n    &&& {\r\n    padding:.25em;\r\n    font-size: 18px;\r\n    margin-left: 50px;\r\n}`\r\n    \r\nfunction MyContributions(props) {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [user, setUser] = useState([]);\r\n\r\n    const [isLoading2, setLoading2] = useState(true);\r\n    const [med, setMed] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n        .get(`http://localhost:4001/twitter/userWhereID/${id}`)\r\n        .then(response => {\r\n          setUser(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch(error => console.error(`There was an error retrieving the retweets list: ${error}`));\r\n\r\n        axios\r\n        .get(`http://localhost:4001/twitter/median`)\r\n        .then(response => {\r\n          setMed(response.data);\r\n          setLoading2(false);\r\n        })\r\n        .catch(error => console.error(`There was an error retrieving the median list: ${error}`));\r\n\r\n\r\n      }, []);\r\n\r\n      if (isLoading || isLoading2) {\r\n        return <div>\r\n        <Card>\r\n            <Title>My Contributions</Title>\r\n            <p>Loading...</p>\r\n        </Card>\r\n        </div>\r\n      }\r\n\r\n      const popover = (\r\n        <Popover id=\"popover-basic\">\r\n            <Popover.Title>Median Contributions</Popover.Title>\r\n          <Popover.Content>\r\n              <Subtitle>Median Tweets</Subtitle>\r\n            <List> Blog links: {med[\"blog_tweets\"]}</List>\r\n            <List> Paper links: {med[\"paper_tweets\"]}</List>\r\n            <Space> </Space>\r\n        <Subtitle>Median Exposure</Subtitle>\r\n            <List> Total blog exposure: {med[\"blog_nreach_aud\"]}</List>\r\n            <List> Total paper exposure: {med[\"paper_nreach_aud\"]}</List>\r\n          </Popover.Content>\r\n        </Popover>\r\n      );\r\n      \r\n      const Pop = () => (\r\n        <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n        <Button variant=\"outline-primary\">Compare to Community Median</Button>\r\n          \r\n        </OverlayTrigger>\r\n      );\r\n\r\n      return(\r\n<div>\r\n    <Card style ={{padding:\"2em\", height:\"600px\"}}>\r\n        <Title>My Research Communication</Title>\r\n        <Subtitle>My Tweets</Subtitle>\r\n            <List> Blog links: {user[0][\"blog_tweets\"]}</List>\r\n            <List> Paper links: {user[0][\"paper_tweets\"]}</List>\r\n            <Space> </Space>\r\n        <Subtitle>Non-researcher Exposure</Subtitle>\r\n            <List> Total blog exposure: {user[0][\"blog_nreach_aud\"]}</List>\r\n            <List> Total paper exposure: {user[0][\"paper_nreach_aud\"]}</List>\r\n            <Space> </Space>\r\n            <Pop/>\r\n            \r\n    </Card>\r\n    \r\n    <br/>\r\n\r\n</div>\r\n);\r\n      }\r\n\r\nexport default MyContributions;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\MyDownstream.tsx",["299","300","301","302","303","304","305","306","307"],"import React, { useRef, useLayoutEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nfunction MyDownstream(props) {\r\n  const chart = useRef(null);\r\n\r\n  var rs = 3600\r\n  var nrs = 6400\r\n\r\n  useLayoutEffect(() => {\r\n    let x = am4core.create(\"chartdivmyd\", am4charts.XYChart);\r\n\r\n    x.paddingRight = 20;\r\n    x.paddingLeft = 20;\r\n\r\n    /* Chart code */\r\n// Themes begin\r\nam4core.useTheme(am4themes_animated);\r\n// Themes end\r\n\r\n// Chart\r\nlet chart = am4core.create( \"chartdivmyd\", am4charts.XYChart );\r\nchart.hiddenState.properties.opacity = 0; // this creates initial fade-in\r\n//chart.colors.step = 2;\r\nchart.colors.list = [am4core.color( \"#98a2df\" ), am4core.color( \"#e96b6a\" ), am4core.color(\"#a2df98\")]\r\n\r\n// X axis\r\nlet xAxis = chart.xAxes.push( new am4charts.CategoryAxis() );\r\nxAxis.dataFields.category = \"x\";\r\nxAxis.renderer.grid.template.location = 0;\r\nxAxis.renderer.minGridDistance = 10;\r\nxAxis.renderer.labels.template.disabled = true;\r\nxAxis.data = [{ x: \"1\" }, { x: \"2\" }, { x: \"3\" }, { x: \"4\" }, { x: \"5\" }, { x: \"6\" }, { x: \"7\" }, { x: \"8\" }, { x: \"9\" }, { x: \"10\" }];\r\n\r\n// Y axis\r\nlet yAxis = chart.yAxes.push( new am4charts.CategoryAxis() );\r\nyAxis.renderer.labels.template.disabled = true;\r\nyAxis.renderer.grid.template.location = 0;\r\nyAxis.renderer.minGridDistance = 10;\r\nyAxis.dataFields.category = \"y\";\r\nyAxis.data = [{ y: \"1\" }, { y: \"2\" }, { y: \"3\" }, { y: \"4\" }, { y: \"5\" }, { y: \"6\" }, { y: \"7\" }, { y: \"8\" }, { y: \"9\" }, { y: \"10\" }];\r\n\r\n// Legend\r\nchart.legend = new am4charts.Legend();\r\nchart.legend.position = \"right\";\r\nchart.legend.scrollable = true;\r\nchart.legend.maxWidth = 200;\r\n\r\n// Create series\r\nfunction createSeries(name) {\r\n  let series = chart.series.push( new am4charts.ColumnSeries() );\r\n  series.dataFields.categoryX = \"x\";\r\n  series.dataFields.categoryY = \"y\";\r\n  series.sequencedInterpolation = true;\r\n  series.defaultState.transitionDuration = 3000;\r\n  series.name = name;\r\n\r\n\r\n  // Set up column appearance\r\n  let column = series.columns.template;\r\n  column.strokeWidth = 1;\r\n  column.strokeOpacity = 1;\r\n  column.stroke = am4core.color( \"#ffffff\" );\r\n  column.width = am4core.percent( 100 );\r\n  column.height = am4core.percent( 100 );\r\n  //column.column.cornerRadius(6, 6, 6, 6);\r\n  \r\n  return series;\r\n}\r\n\r\nlet series1 = createSeries(\"Researchers\");\r\nseries1.data = [\r\n  { x: \"1\", y: \"1\" },\r\n  { x: \"1\", y: \"2\" },\r\n  { x: \"1\", y: \"3\" },\r\n  { x: \"1\", y: \"4\" },\r\n  { x: \"1\", y: \"5\" },\r\n  { x: \"1\", y: \"6\" },\r\n  { x: \"1\", y: \"7\" },\r\n  { x: \"1\", y: \"8\" },\r\n  { x: \"1\", y: \"9\" },\r\n  { x: \"1\", y: \"10\" },\r\n  \r\n  { x: \"2\", y: \"1\" },\r\n  { x: \"2\", y: \"2\" },\r\n  { x: \"2\", y: \"3\" },\r\n  { x: \"2\", y: \"4\" },\r\n  { x: \"2\", y: \"5\" },\r\n  { x: \"2\", y: \"6\" },\r\n  { x: \"2\", y: \"7\" },\r\n  { x: \"2\", y: \"8\" },\r\n  { x: \"2\", y: \"9\" },\r\n  { x: \"2\", y: \"10\" },\r\n  \r\n  { x: \"3\", y: \"1\" },\r\n  { x: \"3\", y: \"2\" },\r\n  { x: \"3\", y: \"3\" },\r\n  { x: \"3\", y: \"4\" },\r\n  { x: \"3\", y: \"5\" },\r\n  { x: \"3\", y: \"6\" },\r\n  { x: \"3\", y: \"7\" },\r\n  { x: \"3\", y: \"8\" },\r\n  \r\n\r\n];\r\n\r\nlet series2 = createSeries(\"Non-Researchers\");\r\nseries2.data = [\r\n  \r\n  { x: \"3\", y: \"9\" },\r\n  { x: \"3\", y: \"10\" },\r\n\r\n  { x: \"4\", y: \"1\" },\r\n  { x: \"4\", y: \"2\" },\r\n  { x: \"4\", y: \"3\" },\r\n  { x: \"4\", y: \"4\" },\r\n  { x: \"4\", y: \"5\" },\r\n  { x: \"4\", y: \"6\" },\r\n  { x: \"4\", y: \"7\" },\r\n  { x: \"4\", y: \"8\" },\r\n  { x: \"4\", y: \"9\" },\r\n  { x: \"4\", y: \"10\" },\r\n\r\n  { x: \"5\", y: \"1\" },\r\n  { x: \"5\", y: \"2\" },\r\n  { x: \"5\", y: \"3\" },\r\n  { x: \"5\", y: \"4\" },\r\n  { x: \"5\", y: \"5\" },\r\n  { x: \"5\", y: \"6\" },\r\n  { x: \"5\", y: \"7\" },\r\n  { x: \"5\", y: \"8\" },\r\n  { x: \"5\", y: \"9\" },\r\n  { x: \"5\", y: \"10\" },\r\n\r\n  { x: \"6\", y: \"1\" },\r\n  { x: \"6\", y: \"2\" },\r\n  { x: \"6\", y: \"3\" },\r\n  { x: \"6\", y: \"4\" },\r\n  { x: \"6\", y: \"5\" },\r\n  { x: \"6\", y: \"6\" },\r\n  { x: \"6\", y: \"7\" },\r\n  { x: \"6\", y: \"8\" },\r\n  { x: \"6\", y: \"9\" },\r\n  { x: \"6\", y: \"10\" },\r\n\r\n  { x: \"7\", y: \"1\" },\r\n  { x: \"7\", y: \"2\" },\r\n  { x: \"7\", y: \"3\" },\r\n  { x: \"7\", y: \"4\" },\r\n  { x: \"7\", y: \"5\" },\r\n  { x: \"7\", y: \"6\" },\r\n  { x: \"7\", y: \"7\" },\r\n  { x: \"7\", y: \"8\" },\r\n  { x: \"7\", y: \"9\" },\r\n  { x: \"7\", y: \"10\" },\r\n\r\n  { x: \"8\", y: \"1\" },\r\n  { x: \"8\", y: \"2\" },\r\n  { x: \"8\", y: \"3\" },\r\n  { x: \"8\", y: \"4\" },\r\n  { x: \"8\", y: \"5\" },\r\n  { x: \"8\", y: \"6\" },\r\n  { x: \"8\", y: \"7\" },\r\n  { x: \"8\", y: \"8\" },\r\n  { x: \"8\", y: \"9\" },\r\n  { x: \"8\", y: \"10\" },\r\n\r\n  { x: \"9\", y: \"1\" },\r\n  { x: \"9\", y: \"2\" },\r\n  { x: \"9\", y: \"3\" },\r\n  { x: \"9\", y: \"4\" },\r\n  { x: \"9\", y: \"5\" },\r\n  { x: \"9\", y: \"6\" },\r\n  { x: \"9\", y: \"7\" },\r\n  { x: \"9\", y: \"8\" },\r\n  { x: \"9\", y: \"9\" },\r\n  { x: \"9\", y: \"10\" },\r\n\r\n  { x: \"10\", y: \"1\" },\r\n  { x: \"10\", y: \"2\" },\r\n  { x: \"10\", y: \"3\" },\r\n  { x: \"10\", y: \"4\" },\r\n  { x: \"10\", y: \"5\" },\r\n  { x: \"10\", y: \"6\" },\r\n  { x: \"10\", y: \"7\" },\r\n  { x: \"10\", y: \"8\" },\r\n  { x: \"10\", y: \"9\" },\r\n  { x: \"10\", y: \"10\" },\r\n];\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n        <div id=\"chartdivmyd\" style={{ width: \"100%\", height: \"250px\" }}></div>\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default MyDownstream;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\Individual.tsx",["308","309","310","311","312","313","314"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport MyContributions from './MyContributions';\r\nimport IndividualStats from './IndividualStats';\r\n\r\nconst Left = styled.div`\r\n    &&&{width: 72%;\r\n    }\r\n`\r\n\r\nconst Right = styled.div`\r\n    &&&{width:28%;\r\n    }\r\n`\r\n\r\nconst divStyle ={\r\n    display:'flex',\r\n}\r\n\r\n\r\nclass Individual extends React.Component{\r\n    render(){\r\n        return (\r\n            \r\n            <div style={divStyle}>\r\n                <Left><IndividualStats /></Left>\r\n                {/*<Right><MyContributions /></Right>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Individual;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\MyTweets.tsx",["315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport WaffleChart from './WaffleChart';\r\nimport axios from 'axios'\r\nimport { Tweet} from 'react-twitter-widgets'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport IconArray from './IconArray';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { RoutesConfig } from '../../../config/routes.config';\r\n\r\nimport './chart.css'\r\n\r\n\r\n//var id = \"634739719\"\r\n//var id = \"1293416714923683841\"\r\n//var id = \"192812670\"\r\n//var id = \"802233409338675200\"\r\n//var id = \"18256350\"\r\n//var id = \"2490180804\"\r\n//var id = \"18670940\"\r\n//var id = \"486899842\"\r\n//var id = \"238753895\"\r\n\r\nconst Title = styled.p`\r\n    &&& {\r\n    padding: 1em;\r\n    font-size: 30px;\r\n    font-weight:bold;\r\n}`\r\n\r\nconst Subtitle = styled.p`\r\n    &&& {\r\n    padding: .05em;\r\n    font-size: 16px;\r\n}`\r\n\r\nconst Semititle = styled.p`\r\n    &&& {\r\n    padding: .05em;\r\n    font-size: 22px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n}`\r\n\r\nconst Center = styled.div`\r\n    &&& {\r\n    margin: auto;\r\n    text-align: center;\r\n}`\r\n\r\nconst Retweet = styled.p`\r\n    &&& {\r\n    padding: 1em;\r\n    font-size: 24px;\r\n    font-weight:bold;\r\n    margin-left:80px\r\n}`\r\n\r\nconst tweetwind = {\r\n    padding: '1em',\r\n    width: '840px',\r\n    maxWidth: '840px',\r\n    maxHeight: '700px',\r\n    'overflow-y': 'auto'\r\n    \r\n  };\r\n\r\nconst square = {\r\n    width: \"200px\",\r\n    maxWidth: \"200px\",\r\n    maxHeight: \"200x\",\r\n    height: \"200px\",\r\n    padding: \"0.5em\",\r\n}\r\n\r\nconst Pop = styled.button `{\r\n    background:none;\r\n    border:none;\r\n    margin:0;\r\n    padding:0;\r\n    cursor: pointer;\r\n    color:blue;\r\n  }`\r\n  \r\n  const tweetpop = {\r\n    width: '600px',\r\n    maxWidth: 'none',\r\n    height: '600px',\r\n    maxHeight: '800px'\r\n    \r\n  };\r\n\r\n  const roundButton = {\r\n      borderRadius: '8px',\r\n      background: '#ffffff',\r\n      height: '50px',\r\n      widght: '100px'\r\n  }\r\n\r\n/*\r\nfunction RenderTweet(tweets, num){\r\n    if (tweets.length < num){\r\n        return (<div></div>);\r\n    } else if (tweets[tweets.length - num]['downstream_r'] + tweets[tweets.length - num]['downstream_n'] <= 0){\r\n        return (<div></div>);\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n                <Card style ={{padding:\"3em\"}}>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Tweet tweetId={tweets[tweets.length - num]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n\r\n                    \r\n                </div>\r\n                <div className='column'>\r\n                    <WaffleChart legend_pos = \"right\" title = {tweets[tweets.length - num]['retweets'].toString()} divid={\"td\".concat(num.toString())} vars = {[{name: \"Researchers\", data: tweets[tweets.length - num]['downstream_r']}, {name: \"Non-researchers\", data: tweets[tweets.length - num]['downstream_n']}]} />\r\n                    <Retweet>\r\n                    Retweets: {tweets[tweets.length - num]['retweets']}\r\n                    </Retweet>\r\n                </div>\r\n            </div>\r\n            </Card>\r\n\r\n            <br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n*/\r\n\r\n/*\r\nfunction PopButton(tweet_id, downstream, num_cols, num_rows, denom, dict) {\r\n    return (\r\n    <OverlayTrigger trigger=\"click\" rootClose placement=\"top\" overlay={TweetPop(tweet_id, downstream, num_cols, num_rows, denom, dict)}>\r\n    <button style = {roundButton}>See Reach</button>\r\n      \r\n    </OverlayTrigger>\r\n    )\r\n  };\r\n  \r\n  function TweetPop(tweet_id, data, num_cols, num_rows, denom, dict){\r\n    var new_lines = CalcPlotSize(data, num_cols, num_rows, denom)\r\n    num_cols = new_lines[0]\r\n    num_rows = new_lines[1]\r\n    return(\r\n\r\n    <div>\r\n      <Popover id=\"popover-basic\" placement=\"top\" style={tweetpop}>\r\n        <Popover.Title>Sample Tweets</Popover.Title>\r\n        <Popover.Content>\r\n            <IconArray divid = {tweet_id + \"_icon\"} data = {JSON.parse(data)} cols = {num_cols} rows = {num_rows} denom = {denom} series_dict = {dict}/>\r\n        </Popover.Content>\r\n      </Popover>\r\n    </div>\r\n\r\n    )\r\n  }\r\n  */\r\n\r\n  /*\r\n  function TweetCarousel(tweets){\r\n      var divs = [] \r\n      for (var i = 0; i < tweets.length; i++){\r\n          divs.push(tweets[i])\r\n      }\r\n      return(\r\n          <Carousel>\r\n              <div>{qtip}</div>\r\n              <div>{qtip}</div>\r\n          </Carousel>\r\n      )\r\n  }\r\n  */\r\n\r\n  function TweetCarousel(tweets) {\r\n      return(\r\n        <Carousel>\r\n            {tweets.map(item => <Carousel.Item>{item}</Carousel.Item>)}\r\n      </Carousel>\r\n      )\r\n  }\r\n\r\nfunction RenderTweet(tweet_id, downstream, num_cols, num_rows, denom, dict){\r\n\r\n    return(\r\n        <Card key = {tweet_id} style ={{padding:\"3em\"}}>\r\n          <div className='columns'>\r\n            <div className='column'>\r\n              <Center>\r\n                <Semititle>Tweet</Semititle>\r\n              </Center>\r\n              <Tweet tweetId={tweet_id} options={{ width: \"100%\", cards: \"hidden\", conversation: \"none\"}}/>\r\n              {/*PopButton(tweet_id, downstream, num_cols, num_rows, denom, dict)*/}\r\n            </div>\r\n            <div className='column'>\r\n              <Center>\r\n                <Semititle>Downstream</Semititle>\r\n              </Center>\r\n              <IconArray divid = {tweet_id + \"_icon\"} data = {JSON.parse(downstream)} cols = {num_cols} rows = {num_rows} denom = {denom} series_dict = {dict}/>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n    )\r\n\r\n\r\n    /*\r\n   var new_text = \"\"\r\n\r\n   if (text.length > 110){\r\n       new_text = text.slice(0, 110)\r\n       new_text = new_text + \"...\"\r\n   } else{\r\n       new_text = text\r\n   }\r\n\r\n   return(\r\n    <div key = {tweet_id}>\r\n        <Card style = {square}>\r\n        <p>{new_text}</p>\r\n        </Card>\r\n        <br/>\r\n    </div>\r\n   )\r\n   */\r\n   \r\n}\r\n\r\n\r\n\r\n\r\nfunction MyTweets(props) {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [tweets, setTweets] = useState([]);\r\n    var id = props.id\r\n  \r\n    useEffect(() => {\r\n        axios\r\n        .get(`http://localhost:4001/twitter/retweetsWhereUserID/${id}`)\r\n        .then(response => {\r\n          setTweets(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch(error => console.error(`There was an error retrieving the retweets list: ${error}`));\r\n      }, []);\r\n\r\n      if (isLoading) {\r\n        return <div>\r\n\r\n            <Title>My Tweets</Title>\r\n            <p>Loading...</p>\r\n \r\n        </div>\r\n      }\r\n\r\n      /*\r\n\r\n      var col1 = []\r\n      var col2 = []\r\n      var col3 = []\r\n      */\r\n      var tweet_array = []\r\n\r\n      var max = Math.min(tweets.length, 8)\r\n      max = max + 1\r\n\r\n      const cols = props.cols\r\n      const rows = props.rows\r\n      const denom = props.denom\r\n      const dict = props.series_dict\r\n\r\n      for (var i = 1; i < max; i++){\r\n\r\n       tweet_array.push(RenderTweet(tweets[tweets.length - i].tweet_id_text, tweets[tweets.length - i].downstream_class, cols, rows, denom, dict))\r\n       console.log(dict)\r\n\r\n      }\r\n\r\n      return (\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    {/*tweet_array*/}\r\n                    {TweetCarousel(tweet_array)}\r\n                    <NavLink\r\n\r\n          to={RoutesConfig.Tweets.path}\r\n          exact={RoutesConfig.Tweets.exact}\r\n          activeClassName={RoutesConfig.Tweets.activeClassName}\r\n        >\r\n          <span>See more tweets</span>\r\n        </NavLink>\r\n                </div>\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\n\r\nexport default MyTweets;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\WaffleChart.tsx",["331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346"],"import React, { useRef, useLayoutEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport axios from 'axios'\r\n\r\nvar user_id = \"634739719\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n/*\r\nfunction WaffleAny(ns: Number[], num_cols: number){\r\n  var datas = [];\r\n  var vals = [];\r\n  for (let n of ns){\r\n    vals.push(n.valueOf());\r\n  }\r\n\r\n  var l = vals.length;\r\n  \r\n  var tot = vals.reduce((a, b) => a + b, 0)\r\n\r\n  var nums = []\r\n  var last = 0\r\n\r\n  for (let i = 0; i < l; i++){\r\n    var num = vals[i] / tot;\r\n    nums.push(num);\r\n    last = num + last\r\n  }\r\n\r\n  var row = 1\r\n  var col = 1\r\n\r\n  var new_data_x = [];\r\n  var new_data_y = [];\r\n\r\n  for (let i = 1; i <= num_cols; i++) {\r\n    new_data_x.push({x : i.toString()});\r\n  }\r\n\r\n  for (let i = 1; i <= num_cols; i++) {\r\n    new_data_y.push({y : i.toString()});\r\n  }\r\n\r\n  var r_tot = 0\r\n\r\n  for (let h = 0; h <= (l-1); h++){\r\n    var data = [];\r\n    for (let i = r_tot; i < (r_tot + rs[h]); i++) {\r\n      var x_str = row.toString();\r\n      var y_str = col.toString();\r\n      data.push({ x: x_str, y: y_str});\r\n      if(col == num_cols){\r\n        row = row + 1;\r\n        col = 1\r\n      } else {\r\n        col = col + 1\r\n      }\r\n    }\r\n    datas.push(data)\r\n    r_tot = r_tot + rs[h];\r\n  }\r\n\r\n  var data = [];\r\n  for (let i = r_tot; i < num_cells; i++) {\r\n    var x_str = row.toString();\r\n    var y_str = col.toString();\r\n    data.push({ x: x_str, y: y_str});\r\n    if(col == num_cols){\r\n      row = row + 1;\r\n      col = 1\r\n    } else {\r\n      col = col + 1\r\n    }\r\n  }\r\n  datas.push(data);\r\n\r\n  return({data_list: datas,\r\n          data_x: new_data_x,\r\n          data_y: new_data_y});\r\n}\r\n*/\r\n\r\nfunction WaffleChart(props) {\r\n  const chart = useRef(null);\r\n\r\n  var rs = 3600\r\n  var nrs = 6400\r\n\r\n  useLayoutEffect(() => {\r\n    let x = am4core.create(props.divid, am4charts.XYChart);\r\n\r\n    x.paddingRight = 20;\r\n    x.paddingLeft = 20;\r\n\r\n    /* Chart code */\r\n// Themes begin\r\nam4core.useTheme(am4themes_animated);\r\n// Themes end\r\n\r\n// Chart\r\nlet chart = am4core.create( props.divid, am4charts.XYChart );\r\nchart.hiddenState.properties.opacity = 0; // this creates initial fade-in\r\n//chart.colors.step = 2;\r\nswitch(props.scheme){\r\n  case \"followers\": {\r\n    chart.colors.list = [am4core.color( \"#98a2df\" ), am4core.color( \"#e96b6a\" ), am4core.color(\"#a2df98\")];\r\n    break;\r\n  }\r\n  case \"tweets\": {\r\n    chart.colors.list = [am4core.color( \"#CF30B2\" ), am4core.color( \"#30B2CF\" ), am4core.color(\"#B2CF30\")];\r\n    break;\r\n  }\r\n  default: {\r\n    chart.colors.list = [am4core.color( \"#98a2df\" ), am4core.color( \"#e96b6a\" ), am4core.color(\"#a2df98\")];\r\n  }\r\n}\r\n//chart.colors.list = [am4core.color( \"#98a2df\" ), am4core.color( \"#e96b6a\" ), am4core.color(\"#a2df98\")]\r\n\r\n// X axis\r\nlet xAxis = chart.xAxes.push( new am4charts.CategoryAxis() );\r\nxAxis.dataFields.category = \"x\";\r\nxAxis.renderer.grid.template.location = 0;\r\nxAxis.renderer.minGridDistance = 10;\r\nxAxis.renderer.labels.template.disabled = true;\r\nxAxis.data = [{ x: \"1\" }, { x: \"2\" }, { x: \"3\" }, { x: \"4\" }, { x: \"5\" }, { x: \"6\" }, { x: \"7\" }, { x: \"8\" }, { x: \"9\" }, { x: \"10\" }];\r\n\r\n// Y axis\r\nlet yAxis = chart.yAxes.push( new am4charts.CategoryAxis() );\r\nyAxis.renderer.labels.template.disabled = true;\r\nyAxis.renderer.grid.template.location = 0;\r\nyAxis.renderer.minGridDistance = 10;\r\nyAxis.dataFields.category = \"y\";\r\nyAxis.data = [{ y: \"1\" }, { y: \"2\" }, { y: \"3\" }, { y: \"4\" }, { y: \"5\" }, { y: \"6\" }, { y: \"7\" }, { y: \"8\" }, { y: \"9\" }, { y: \"10\" }];\r\n\r\n// Create series\r\nfunction createSeries(name) {\r\n  let series = chart.series.push( new am4charts.ColumnSeries() );\r\n  series.dataFields.categoryX = \"x\";\r\n  series.dataFields.categoryY = \"y\";\r\n  series.sequencedInterpolation = true;\r\n  series.defaultState.transitionDuration = 3000;\r\n  series.name = name;\r\n\r\n\r\n  // Set up column appearance\r\n  let column = series.columns.template;\r\n  column.strokeWidth = 1;\r\n  column.strokeOpacity = 1;\r\n  column.fillOpacity = 1;\r\n  column.stroke = am4core.color( \"#ffffff\" );\r\n  column.width = am4core.percent( 100 );\r\n  column.height = am4core.percent( 100 );\r\n  //column.column.cornerRadius(6, 6, 6, 6);\r\n\r\n  let hs = series.columns.template.states.create(\"active\");\r\n  hs.properties.fillOpacity = 0.5;\r\n  \r\n  return series;\r\n}\r\n\r\nlet series_list = [];\r\n\r\nlet data = props.data\r\n\r\nlet nums_list = [];\r\n\r\nlet denom = 0;\r\n\r\n/*\r\nfor (let i = 0; i < data.length; i++){\r\n  var num = new Number();\r\n  num = data[i]['data'];\r\n  denom = denom + vars[i]['data'];\r\n  nums_list.push(num);\r\n}\r\n\r\nfor (let i = 0; i < vars.length; i++){\r\n  var percent = vars[i]['data']/denom;\r\n  var rat = (percent * 100).toFixed(1).toString();\r\n  series_list.push(createSeries(vars[i]['name'] + \": \" + rat + \"% (\"  + nums_list[i].toString() + \")\" ));\r\n}\r\n\r\nvar datas = WaffleProportionAny(nums_list);\r\n\r\nfor (let i = 0; i < vars.length; i++){\r\n  series_list[i].data = datas['data_list'][i]\r\n}\r\n\r\nxAxis.data = datas['data_x']\r\nyAxis.data = datas['data_y']\r\n*/\r\n\r\n// Legend\r\nchart.legend = new am4charts.Legend();\r\nchart.legend.scrollable = true;\r\nchart.legend.maxWidth = 120;\r\nchart.legend.minWidth = 10;\r\nchart.legend.labels.template.truncate = true;\r\nchart.legend.itemContainers.template.tooltipText = \"{name}\";\r\n\r\nswitch(props.legend_pos){\r\n  case \"right\": {\r\n    chart.legend.position = \"right\";\r\n    break;\r\n  }\r\n  case \"left\": {\r\n    chart.legend.position = \"left\";\r\n    break;\r\n  }\r\n  case \"top\": {\r\n    chart.legend.position = \"top\";\r\n    break;\r\n  }\r\n  case \"bottom\": {\r\n    chart.legend.position = \"bottom\";\r\n    break;\r\n  }\r\n  default: {\r\n    chart.legend.position = \"right\";\r\n    break;\r\n  }\r\n}\r\n\r\n//Custom code for legend\r\nchart.legend.itemContainers.template.togglable = false;\r\n\r\nvar series_dict = {}\r\nvar keys = [];\r\n\r\nfor (let i = 0; i < data.length; i++){\r\n  var key = series_list[i].name;\r\n  series_dict[key] = series_list[i]['columns']['template'];\r\n  keys.push(key);\r\n}\r\n\r\nchart.legend.itemContainers.template.events.on(\"hit\", function(ev) {\r\n  let seriesColumn = ev.target.dataItem.dataContext['columns']['template'];\r\n  let sname = ev.target.dataItem.dataContext['name'];\r\n  let other_series = []\r\n  for (let k of keys){\r\n    if (sname != k){\r\n      other_series.push(series_dict[k]);\r\n    }\r\n  }\r\n  if (other_series[0].isActive){\r\n    other_series.map(function(e) { \r\n      e.isActive = false; \r\n      return e;\r\n    });\r\n  } else {\r\n    other_series.map(function(e) { \r\n      e.isActive = true; \r\n      return e;\r\n    });\r\n  }\r\n  seriesColumn.isActive = false;\r\n});\r\n\r\n/*\r\nlet series1 = createSeries(\"Researchers\");\r\nseries1.data = [\r\n  { x: \"1\", y: \"1\" }\r\n\r\n];\r\n\r\nlet series2 = createSeries(\"Non-Researchers\");\r\nseries2.data = [\r\n  \r\n\r\n  { x: \"7\", y: \"1\" }\r\n];\r\n\r\nvar num1 = new Number(0)\r\nnum1 = props.r\r\nvar num2 = new Number(0)\r\nnum2 = props.n\r\n\r\nseries1.name = \"Researchers: \" + num1.toString();\r\nseries2.name = \"Other: \" + num2.toString();\r\n\r\n//var datas = WaffleProportionCheat(num1, num2);\r\nvar datas = WaffleProportionAny([num1, num2]);\r\n\r\n//xAxis.data = datas[2];\r\n//yAxis.data = datas[3];\r\n\r\n//series1.data = datas[0];\r\n//series2.data = datas[1];\r\n\r\nseries1.data = datas['data_list'][0]\r\nseries2.data = datas['data_list'][1]\r\n\r\nxAxis.data = datas['data_x']\r\nyAxis.data = datas['data_y']\r\n\r\n// Legend\r\nchart.legend = new am4charts.Legend();\r\nchart.legend.position = \"right\";\r\nchart.legend.scrollable = true;\r\nchart.legend.maxWidth = 200;\r\n\r\n//Custom code for legend\r\nchart.legend.itemContainers.template.togglable = false;\r\n\r\nvar series_dict = {\r\n  [series1.name]: series1['columns']['template'],\r\n  [series2.name]: series2['columns']['template']\r\n}\r\n\r\nvar keys = [series1.name, series2.name]\r\n\r\nchart.legend.itemContainers.template.events.on(\"hit\", function(ev) {\r\n  let seriesColumn = ev.target.dataItem.dataContext['columns']['template'];\r\n  let sname = ev.target.dataItem.dataContext['name'];\r\n  let other_series = []\r\n  for (let k of keys){\r\n    if (sname != k){\r\n      other_series.push(series_dict[k]);\r\n    }\r\n  }\r\n  if (other_series[0].isActive){\r\n    other_series.map(function(e) { \r\n      e.isActive = false; \r\n      return e;\r\n    });\r\n  } else {\r\n    other_series.map(function(e) { \r\n      e.isActive = true; \r\n      return e;\r\n    });\r\n  }\r\n  seriesColumn.isActive = false;\r\n});\r\n\r\n*/\r\n\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n        <div id={props.divid} style={{ width: \"100%\", height: \"250px\" }}></div>\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default WaffleChart;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\LineChart.tsx",["347","348","349","350","351","352","353","354","355","356","357","358","359","360","361"],"import React, { useRef, useLayoutEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport axios from 'axios'\r\nimport { ContactlessOutlined, LocalConvenienceStoreOutlined } from '@material-ui/icons';\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nfunction date_format(s: string) {\r\n  s = s.substring(0, 10);\r\n  s = s.replaceAll('/', '-');\r\n  return s;\r\n}\r\n\r\nfunction LineChart(props) {\r\n  const chart = useRef(null);\r\n\r\n  var rs = 3600\r\n  var nrs = 6400\r\n\r\n  useLayoutEffect(() => {\r\n    let x = am4core.create(props.id, am4charts.XYChart);\r\n\r\n    x.paddingRight = 20;\r\n    x.paddingLeft = 20;\r\n\r\n    /* Chart code */\r\n// Themes begin\r\nam4core.useTheme(am4themes_animated);\r\n// Themes end\r\n\r\n// Chart\r\nlet chart = am4core.create( props.id, am4charts.XYChart );\r\n\r\n// Add data\r\nchart.data = [ {\r\n  \"date\": \"2020-06-01\",\r\n  \"value\": 10000\r\n}, {\r\n  \"date\": \"2020-06-10\",\r\n  \"value\": 10091\r\n},\r\n{\r\n  \"date\": \"2020-06-20\",\r\n  \"value\": 10514\r\n},\r\n{\r\n  \"date\": \"2020-07-01\",\r\n  \"value\": 11111\r\n}, {\r\n  \"date\": \"2020-07-10\",\r\n  \"value\": 11138\r\n},\r\n{\r\n  \"date\": \"2020-07-20\",\r\n  \"value\": 13136\r\n},\r\n{\r\n  \"date\": \"2020-08-01\",\r\n  \"value\": 13204\r\n}, {\r\n  \"date\": \"2020-08-10\",\r\n  \"value\": 13609\r\n},\r\n{\r\n  \"date\": \"2020-08-20\",\r\n  \"value\": 14609\r\n},\r\n{\r\n  \"date\": \"2020-09-01\",\r\n  \"value\": 16609\r\n}, {\r\n  \"date\": \"2020-09-10\",\r\n  \"value\": 17111\r\n},\r\n{\r\n  \"date\": \"2020-09-20\",\r\n  \"value\": 17911\r\n},\r\n   ];\r\n\r\nfunction createSeries(field, name, op, color) {\r\n  var series = chart.series.push(new am4charts.LineSeries());\r\n  series.dataFields.valueY = field;\r\n  series.dataFields.dateX = \"date\";\r\n  series.tooltipText = \"{valueY}\";\r\n  series.name = name;\r\n  series.strokeWidth = 3;\r\n  series.stroke = am4core.color( color );\r\n  series.fill = am4core.color( color );\r\n  series.fillOpacity = op;\r\n  series.minBulletDistance = 15;\r\n    \r\n  return series;\r\n  }\r\n\r\nfunction sameDate(date, pairs, dv, def) {\r\n  for (let i = 0; i < pairs.length; i++) {\r\n    let d = pairs[i]['timestamp']\r\n    if (date == d){\r\n      return pairs[i][dv]\r\n    }\r\n  }\r\n\r\n  return def;\r\n\r\n}\r\n\r\n//Update data\r\nvar com = props.data;\r\nvar coms:object[] = [];\r\nif (props.med){\r\n  let def = 0;\r\n  for (let i = 0; i < com.length; i++){\r\n    if (com[i][props.dv] > -1){\r\n      let s = com[i]['timestamp'].substring(0, 10);\r\n      let m = sameDate(s, props.med, props.dv, def);\r\n      def = m;\r\n      coms.push({\"date\": date_format(com[i]['timestamp']),\r\n                 \"value\": com[i][props.dv],\r\n                 \"med\": m})\r\n    }\r\n    \r\n  }\r\n  console.log(props.yaxis);\r\n  console.log(coms);\r\n} else{\r\n  for (let i = 0; i < com.length; i++){\r\n    if (com[i][props.dv] > -1){\r\n      coms.push({\"date\": date_format(com[i]['timestamp']),\r\n                 \"value\": com[i][props.dv]})\r\n    }\r\n    \r\n  }\r\n}\r\n\r\nchart.data = coms\r\n\r\n// Create axes\r\nvar dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\ndateAxis.renderer.grid.template.location = 0;\r\ndateAxis.renderer.minGridDistance = 50;\r\n\r\nvar valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n//valueAxis.title.text = \"Followers\"\r\nvalueAxis.title.text = props.yaxis;\r\n\r\n// Create series\r\n/*\r\nvar series = chart.series.push(new am4charts.LineSeries());\r\nseries.dataFields.valueY = \"value\";\r\nseries.dataFields.dateX = \"date\";\r\nseries.tooltipText = \"{valueY}\";\r\nseries.strokeWidth = 3;\r\nseries.fillOpacity = 0.5;\r\nseries.minBulletDistance = 15;\r\n*/\r\nlet series = createSeries(\"value\", props.yaxis, 0.5, \"#0057ff\");\r\n\r\n//var bullet = series.bullets.push(new am4charts.CircleBullet());\r\n\r\nif (props.med){\r\n  let series2 = createSeries(\"med\", \"Median\", 0.25, \"#ffa800\");\r\n  valueAxis.min = 0;\r\n  //var bullet1 = series.bullets.push(new am4charts.CircleBullet());\r\n  //var bullet2 = series2.bullets.push(new am4charts.CircleBullet());\r\n}\r\n\r\n\r\n// Add vertical scrollbar\r\n// chart.scrollbarY = new am4core.Scrollbar();\r\n//chart.scrollbarY.marginLeft = 0;\r\n\r\n// Add cursor\r\nchart.cursor = new am4charts.XYCursor();\r\nvalueAxis.cursorTooltipEnabled = false;\r\n//chart.cursor.behavior = \"zoomY\";\r\nchart.cursor.lineX.disabled = true;\r\nchart.cursor.lineY.disabled = true;\r\n\r\n\r\n\r\n// Drop-shaped tooltips\r\nseries.tooltip.background.cornerRadius = 20;\r\nseries.tooltip.background.strokeOpacity = 0;\r\nseries.tooltip.pointerOrientation = \"vertical\";\r\nseries.tooltip.label.minWidth = 40;\r\nseries.tooltip.label.minHeight = 40;\r\nseries.tooltip.label.textAlign = \"middle\";\r\n\r\n\r\nif (props.med){\r\n  chart.legend = new am4charts.Legend();\r\n  chart.legend.scrollable = true;\r\n  chart.legend.maxWidth = 120;\r\n  chart.legend.minWidth = 10;\r\n  chart.legend.labels.template.truncate = true;\r\n  chart.legend.itemContainers.template.tooltipText = \"{name}\";\r\n}\r\n\r\n\r\n// Make bullets grow on hover\r\n/*\r\nvar bullet = series.bullets.push(new am4charts.CircleBullet());\r\nbullet.circle.strokeWidth = 1;\r\nbullet.circle.radius = 2;\r\nbullet.circle.fill = am4core.color(\"#fff\");\r\n\r\nvar bullethover = bullet.states.create(\"hover\");\r\nbullethover.properties.scale = 1.3;\r\n*/\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n        <div id={props.id} style={{ width: \"75%\", height: \"300px\" }}></div>\r\n    </div>\r\n    \r\n  );\r\n  \r\n  }; // end am4core.ready()\r\n\r\nexport default LineChart;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\IconArray.tsx",["362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380"],"import React, { useRef, useLayoutEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport axios from 'axios'\r\nimport qtip from './q.jpg'\r\nimport rsq from './images/r_square.jpg'\r\nimport psq from './images/p_square.jpg'\r\nimport osq from './images/o_square.jpg'\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\n\r\nvar user_id = \"634739719\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\n/*\r\nvar rd_grad = new am4core.LinearGradient();\r\nrd_grad.addColor(am4core.color(\"#9EFA99\"));\r\nrd_grad.addColor(am4core.color(\"#7BD2FA\"));\r\nrd_grad.rotation = 45\r\n\r\n\r\nvar rs_grad = new am4core.LinearGradient();\r\nrs_grad.addColor(am4core.color(\"#FA5F3A\"));\r\nrs_grad.addColor(am4core.color(\"#9EFA99\"));\r\nrs_grad.rotation = 45\r\n\r\nvar ds_grad = new am4core.LinearGradient();\r\nds_grad.addColor(am4core.color(\"#7BD2FA\"));\r\nds_grad.addColor(am4core.color(\"#FA5F3A\"));\r\nds_grad.rotation = 45\r\n\r\nvar rds_grad = new am4core.LinearGradient();\r\nrds_grad.addColor(am4core.color(\"#9EFA99\"));\r\nrds_grad.addColor(am4core.color(\"#7BD2FA\"));\r\nrds_grad.addColor(am4core.color(\"#FA5F3A\"));\r\nrds_grad.rotation = 45\r\n\r\nconst series_dict = {\r\n  r: {col: am4core.color( \"#9EFA99\" ),\r\n        name: \"Researchers\"\r\n       },\r\n  d: {col: am4core.color( \"#7BD2FA\" ),\r\n       name: \"Designers\"\r\n      },\r\n  s: {col: am4core.color( \"#FA5F3A\" ),\r\n       name: \"Software Engineers\"\r\n      },\r\n  o: {col: am4core.color( \"#FA9810\" ),\r\n  name: \"Other Publics\"\r\n },\r\n  rd: {col: rd_grad,\r\n  name: \"Researcher/Designers\"\r\n },\r\n rs: {col: rs_grad,\r\n  name: \"Researcher/Engineers\"\r\n },\r\n ds: {col: ds_grad,\r\n  name: \"Designer/Engineers\"\r\n },\r\n rds: {col: rds_grad,\r\n  name: \"Researcher/Designer/Engineers\"\r\n },\r\n}\r\n*/\r\n\r\nfunction renderTooltip(text){\r\n  return(\r\n  <Tooltip id=\"button-tooltip\">\r\n    {text}\r\n  </Tooltip>\r\n  )\r\n}\r\n\r\nfunction toolTrigger(text){\r\n  return(<OverlayTrigger\r\n    placement=\"right\"\r\n    delay={{ show: 100, hide: 100 }}\r\n    overlay={renderTooltip(text)}\r\n  >\r\n    <img width = \"20px\" src = {qtip} />\r\n  </OverlayTrigger>\r\n  )\r\n}\r\n\r\nconst tweetpop = {\r\n  width: '275px',\r\n  maxWidth: '275px',\r\n  maxHeight: '400px',\r\n  'overflow-y': 'auto'\r\n  \r\n};\r\n\r\nconst Legend = styled.table `{\r\n  border-spacing: 50px;\r\n  border-collapse: collapse;\r\n  width: 200px;\r\n  margin-left: 20px; \r\n  margin-right:auto;\r\n}`\r\n\r\nconst Ltr = styled.tr `{\r\n  padding: 8px;\r\n}`\r\n\r\nconst pract_explanation = \"'Practitioners' currently includes software engineers and designers. Future updates may include additional practitioners groups relevant to HCI, such as teachers, healthcare providers, etc.\"\r\n\r\n\r\nfunction CustomLegend() {\r\n  return(\r\n    <Legend>\r\n      <tbody>\r\n      <Ltr>\r\n        <td><img width = \"25px\" src = {rsq}/></td>\r\n        <td>Researchers</td>\r\n      </Ltr>\r\n      <Ltr>\r\n        <td><img width = \"25px\" src = {psq}/></td>\r\n        <td>Practitioners {toolTrigger(pract_explanation)}</td>\r\n      </Ltr>\r\n      <Ltr>\r\n        <td><img width = \"25px\" src = {osq}/></td>\r\n        <td>Other Publics</td>\r\n      </Ltr>\r\n      </tbody>\r\n    </Legend>\r\n  )\r\n}\r\n\r\nfunction CalculateCols(nums: number[], num_cols: number, denom) {\r\n\r\n  var tot_squares = 0\r\n  for (var i = 0; i < nums.length; i++){\r\n    tot_squares = tot_squares + Math.round(nums[i] / denom)\r\n  }\r\n\r\n  var num2 = Math.floor(Math.sqrt(tot_squares)) + 1\r\n  var num2_cols = num2\r\n\r\n  num_cols = Math.max(num_cols, num2_cols)\r\n  \r\n  return num_cols\r\n}\r\n\r\nfunction CalculateRows(nums: number[], num_rows: number, denom) {\r\n\r\n  var tot_squares = 0\r\n  for (var i = 0; i < nums.length; i++){\r\n    tot_squares = tot_squares + Math.round(nums[i] / denom)\r\n  }\r\n\r\n  var num2 = Math.floor(Math.sqrt(tot_squares)) + 1\r\n  var num2_rows = num2 + 1\r\n\r\n  num_rows = Math.max(num_rows, num2_rows)\r\n  \r\n  return num_rows\r\n}\r\n\r\nfunction CalculateData(nums: number[], num_cols: number, num_rows: number, denom) {\r\n  var data_list = []\r\n\r\n  //actually need to calculate the number of rows, since we get them in reverse order\r\n  /*\r\n  var num_rows = 0\r\n  for (var i = 0; i < nums.length; i++){\r\n    var m = Math.round(nums[i] / denom)\r\n    num_rows = num_rows + m\r\n  }\r\n\r\n  num_rows = Math.ceil(num_rows / num_cols)\r\n  */\r\n\r\n  var cur_col = 1\r\n  var cur_row = 1\r\n\r\n  /*\r\n  var tot_squares = 0\r\n  for (var i = 0; i < nums.length; i++){\r\n    tot_squares = tot_squares + Math.round(nums[i] / denom)\r\n  }\r\n\r\n  var num2 = Math.floor(Math.sqrt(tot_squares)) + 1\r\n  var num2_cols = num2\r\n  var num2_rows = num2 + 1\r\n\r\n  num_cols = Math.max(num_cols, num2_cols)\r\n  num_rows = Math.max(num_rows, num2_rows)\r\n  console.log(num_cols)\r\n  console.log(num2_cols)\r\n  */\r\n\r\n  var new_yaxis = [{y: num_rows.toString()}]\r\n\r\n  for (var i = num_rows; i > 0; i--){\r\n    new_yaxis.push({y: i.toString()})\r\n  }\r\n\r\n  for (var i = 0; i < nums.length; i++){\r\n    var m = Math.round(nums[i] / denom)\r\n\r\n    var cur_data = [] \r\n\r\n    for (var j = 0; j < m; j++) {\r\n      var col = cur_col.toString()\r\n      var row = cur_row.toString()\r\n      cur_data.push({x: col, y: row})\r\n      cur_col = cur_col + 1\r\n      if (cur_col > num_cols){\r\n        cur_col = 1\r\n        cur_row = cur_row + 1\r\n        new_yaxis.push({y: cur_row.toString()})\r\n      }\r\n\r\n    }\r\n\r\n    data_list.push(cur_data)\r\n\r\n  }\r\n\r\n  data_list.push(new_yaxis)\r\n  console.log(data_list)\r\n\r\n  return data_list\r\n\r\n}\r\n\r\nfunction IconArray(props) {\r\n\r\n  useLayoutEffect(() => {\r\n\r\n    var rp_grad = new am4core.LinearGradient();\r\n    rp_grad.addColor(am4core.color(\"#66c2a5\"));\r\n    rp_grad.addColor(am4core.color(\"#fc8d62\"));\r\n\r\nconst series_dict0 = {\r\n  r: {col: am4core.color( \"#66c2a5\" ),\r\n        name: \"Researchers\"\r\n       },\r\n  rp: {col: rp_grad,\r\n        name: \"Researcher/Practitioners\"\r\n       },\r\n  p: {col: am4core.color( \"#fc8d62\" ),\r\n       name: \"Practitioners\"\r\n      },\r\n  o: {col: am4core.color( \"#8da0cb\" ),\r\n  name: \"Other Publics\"\r\n }\r\n}\r\n\r\n    /* Chart code */\r\n// Themes begin\r\nam4core.useTheme(am4themes_animated);\r\n// Themes end\r\n\r\nvar data0 = props.data\r\n\r\nconst series_dict = props.series_dict\r\n\r\n// Chart\r\nvar chart = am4core.create( props.divid, am4charts.XYChart );\r\nchart.hiddenState.properties.opacity = 0; // this creates initial fade-in\r\n//chart.colors.step = 2;\r\n//chart.colors.list = [am4core.color( \"#9EFA99\" ), am4core.color( \"#7BD2FA\" ), am4core.color(\"#DB6EF0\"), am4core.color(\"#FA9810\")]\r\n\r\n// X axis\r\nvar xAxis = chart.xAxes.push( new am4charts.CategoryAxis() );\r\nxAxis.dataFields.category = \"x\";\r\nxAxis.renderer.grid.template.disabled = true;\r\nxAxis.renderer.minGridDistance = 10;\r\nxAxis.renderer.labels.template.disabled = true;\r\n\r\n// Y axis\r\nvar yAxis = chart.yAxes.push( new am4charts.CategoryAxis() );\r\nyAxis.renderer.labels.template.disabled = true;\r\nyAxis.renderer.grid.template.disabled = true;\r\nyAxis.renderer.minGridDistance = 10;\r\nyAxis.dataFields.category = \"y\";\r\n\r\n// Legend\r\n//chart.legend = new am4charts.Legend();\r\n\r\nchart.tooltip.getFillFromObject = false;\r\nchart.tooltip.background.fill = am4core.color(\"#67b7dc\");\r\n\r\n// Create series\r\nfunction createSeries(key, hidden) {\r\n  var series = chart.series.push( new am4charts.ColumnSeries() );\r\n  series.dataFields.categoryX = \"x\";\r\n  series.dataFields.categoryY = \"y\";\r\n  series.sequencedInterpolation = true;\r\n  series.defaultState.transitionDuration = 3000;\r\n  series.name = series_dict0[key][\"name\"];\r\n  series.hiddenInLegend = hidden;\r\n  \r\n  var tool_text = series.name\r\n  tool_text = tool_text + \": \"\r\n  tool_text = tool_text + data0[key].toString()\r\n  \r\n  series.tooltipText = tool_text\r\n  series.tooltipPosition = \"pointer\"\r\n\r\n\r\n  // Set up column appearance\r\n  var column = series.columns.template;\r\n  column.strokeWidth = 1;\r\n  column.strokeOpacity = 1;\r\n  column.stroke = am4core.color( \"#ffffff\" );\r\n  column.width = am4core.percent( 90 );\r\n  column.height = am4core.percent( 90 );\r\n  //series.columns.template.fill = series_dict[key]['col'];\r\n  column.fill = series_dict0[key]['col'];\r\n\r\n  column.events.on(\"hit\", function(ev) {\r\n    var info = ev.target.realFill\r\n  })\r\n  \r\n  return series;\r\n}\r\n\r\nlet series_list = [];\r\nlet num_list = []\r\n\r\n\r\n//actually, we gotta put these in the right order\r\nif (\"r\" in data0){\r\n  series_list.push(createSeries(\"r\", false))\r\n  num_list.push(data0[\"r\"])\r\n}\r\nif (\"rp\" in data0){\r\n  series_list.push(createSeries(\"rp\", true))\r\n  num_list.push(data0[\"rp\"])\r\n}\r\nif (\"p\" in data0){\r\n  series_list.push(createSeries(\"p\", false))\r\n  num_list.push(data0[\"p\"])\r\n}\r\nif (\"o\" in data0){\r\n  series_list.push(createSeries(\"o\", false))\r\n  num_list.push(data0[\"o\"])\r\n}\r\n\r\n\r\nvar num_cols = props.cols\r\nvar num_rows = props.rows\r\n\r\nnum_cols = CalculateCols(num_list, num_cols, props.denom)\r\nnum_rows = CalculateRows(num_list, num_rows, props.denom)\r\n\r\nvar new_xaxis = []\r\nfor (var i = 1; i <= num_cols; i++){\r\n  new_xaxis.push({x: i.toString()})\r\n\r\n}\r\n\r\nvar datas = CalculateData(num_list, num_cols, num_rows, props.denom)\r\n\r\n\r\nfor (var i = 0; i < series_list.length; i++){\r\n  series_list[i].data = datas[i]\r\n}\r\n\r\n\r\nxAxis.data = new_xaxis\r\nyAxis.data = datas[series_list.length]\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n        <div id={props.divid} style={{ width: \"100%\", height: \"500px\" }}></div>\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default IconArray;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\BubbleChart.tsx",["381","382","383","384","385","386","387","388","389","390","391","392","393","394","395"],"import React, { useRef, useLayoutEffect, useState } from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport logo from './logo.svg';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport * as am4plugins_forceDirected from \"@amcharts/amcharts4/plugins/forceDirected\";\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport axios from 'axios'\r\nimport './chart.css';\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport Checkbox from \"react-custom-checkbox\";\r\nimport * as Icon from \"react-icons/fi\";\r\n\r\nvar user_id = \"634739719\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\nam4core.options.autoDispose = true;\r\n\r\nconst tweetpop = {\r\n  width: '400px',\r\n  maxWidth: 'none',\r\n  height: '600px',\r\n  maxHeight: '600px'\r\n  \r\n};\r\n\r\nconst rcheck = {\r\n  color: '#9EFA99',\r\n  backgroundColor: '#9EFA99'\r\n\r\n}\r\n\r\nconst Check = styled.p`\r\n    &&& {\r\n    padding: .05em;\r\n    font-size: 24px;\r\n}`\r\n\r\nfunction Pop(data){\r\n  return(\r\n\r\n  <div>\r\n    <Popover id=\"popover-basic\" placement=\"top\" style={tweetpop}>\r\n      <Popover.Title>Sample Audience</Popover.Title>\r\n      <Popover.Content>\r\n          {data}\r\n      </Popover.Content>\r\n    </Popover>\r\n  </div>\r\n\r\n  )\r\n}\r\n\r\n\r\nfunction organizeData(data, num, active, series_dict){\r\n  var new_data = []\r\n  var num_coms = 0\r\n  for (const key in active){\r\n    if (active[key]){\r\n      num_coms++\r\n    }\r\n  }\r\n  if (num_coms > 0){\r\n    num = Math.round(num / num_coms)\r\n  }\r\n  \r\n  for (const key in data){\r\n    if (!active[key]){\r\n      continue\r\n    }\r\n    //console.log(\"Organizing\")\r\n    var i = 0\r\n    for (const n in data[key]){\r\n      i = i + 1\r\n      if (i >= Object.keys(data[key]).length - num){\r\n        new_data.push({\"name\": String(n),\r\n                     \"value\": data[key][n][\"number\"],\r\n                    \"color\": series_dict[key]['col'],\r\n                    \"sample\": data[key][n][\"audience_sample\"]})\r\n      }\r\n      \r\n    }\r\n  }\r\n  //console.log(new_data)\r\n  return (new_data)\r\n}\r\n\r\nfunction makeAudList(audience) {\r\n  var div = document.createElement(\"div\")\r\n  for (var i = 0; i < audience.length; i++) {\r\n    \r\n    var h = document.createElement(\"h4\")\r\n    var node = document.createTextNode(audience[i][\"name\"])\r\n    h.append(node)\r\n\r\n    var hsub = document.createElement(\"h5\")\r\n  \r\n    var anchor = document.createElement(\"a\")\r\n    node = document.createTextNode(audience[i][\"id_text\"])\r\n    anchor.append(node)\r\n    anchor.href = \"https://www.twitter.com/i/user/\" + audience[i][\"id_text\"]\r\n    anchor.target = \"_blank\"\r\n    anchor.rel = \"noopener noreferrer\"\r\n    hsub.append(anchor)\r\n\r\n    var p = document.createElement(\"p\")\r\n    node = document.createTextNode(audience[i][\"bio\"]);\r\n\r\n    p.appendChild(node)\r\n    div.append(h)\r\n    div.append(hsub)\r\n    div.append(p)\r\n  };\r\n  return div\r\n};\r\n\r\nfunction displayPopup(chart, audience) {\r\n  \r\n  chart.closeAllPopups();\r\n \r\n  var g = makeAudList(audience)\r\n  var gs = g.outerHTML;\r\n  chart.openPopup(gs, \"Sample users\");\r\n}\r\n\r\nfunction BubbleChart(props) {\r\n  const full_data = props.data\r\n  const [activeComs, setActiveComs] = useState({\"r\": true, \"p\": true, \"o\": true})\r\n\r\n  //const [isLoading, setLoading] = useState(true);\r\n  //const [audience, setAudience] = useState([]);\r\n  var series_dict = props.series_dict\r\n\r\n  const setState = (key) => {\r\n    var state = {\"r\": activeComs[\"r\"], \"p\": activeComs[\"p\"], \"o\": activeComs[\"o\"]}\r\n    state[key] = !state[key]\r\n    setActiveComs(state)\r\n  }\r\n  /*\r\n  var ids = []\r\n\r\n  for (var key in full_data){\r\n    for (var word in full_data[key]){\r\n      console.log(full_data[key][word][\"audience_sample\"])\r\n      ids.push(...full_data[key][word][\"audience_sample\"])\r\n    }\r\n  }\r\n  console.log(\"ids:\")\r\n  console.log(ids)\r\n  */\r\n\r\n  useLayoutEffect(() => {\r\n\r\n    //chart.paddingRight = 20;\r\n    //chart.paddingLeft = 20;\r\n\r\n    /* Chart code */\r\n// Themes begin\r\nam4core.useTheme(am4themes_animated);\r\n// Themes end\r\n\r\nvar data0 = props.data\r\n\r\n// Chart\r\n//if (chart !== undefined) {chart.dispose()}\r\nlet chart = am4core.create(props.divid, am4plugins_forceDirected.ForceDirectedTree); \r\nchart.hiddenState.properties.opacity = 0; // this creates initial fade-in\r\n\r\nlet series = chart.series.push(new am4plugins_forceDirected.ForceDirectedSeries())\r\n\r\nconsole.log(chart.popups.template)\r\n\r\n/*series.colors.list = [am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\")];\r\nseries.colors.wrap = false;\r\n*/\r\nseries.dataFields.color = \"color\";\r\n// Set data\r\nseries.data = [{\r\n  \"name\": \"First\",\r\n  \"value\": 190,\r\n  \"color\": am4core.color(\"#000000\")\r\n}, {\r\n  \"name\": \"Second\",\r\n  \"value\": 289,\r\n  \"color\": am4core.color(\"#000000\")\r\n}, {\r\n  \"name\": \"Third\",\r\n  \"value\": 635,\r\n  \"color\": am4core.color(\"#000000\")\r\n}, {\r\n  \"name\": \"Fourth\",\r\n  \"value\": 732,\r\n  \"color\": am4core.color(\"#000000\")\r\n}, {\r\n  \"name\": \"Fifth\",\r\n  \"value\": 835,\r\n  \"color\": am4core.color(\"#000000\")\r\n}, {\r\n  \"name\": \"First\",\r\n  \"value\": 190,\r\n  \"color\": am4core.color(\"#9efa99\")\r\n}, {\r\n  \"name\": \"Second\",\r\n  \"value\": 289,\r\n  \"color\": am4core.color(\"#9efa99\")\r\n}, {\r\n  \"name\": \"Third\",\r\n  \"value\": 635,\r\n  \"color\": am4core.color(\"#9efa99\")\r\n}, {\r\n  \"name\": \"Fourth\",\r\n  \"value\": 732,\r\n  \"color\": am4core.color(\"#9efa99\")\r\n}, {\r\n  \"name\": \"Fifth\",\r\n  \"value\": 835,\r\n  \"color\": am4core.color(\"#9efa99\")\r\n}]\r\n\r\n// Set up data fields\r\nseries.dataFields.value = \"value\";\r\nseries.dataFields.name = \"name\";\r\nseries.dataFields.children = \"children\";\r\n\r\n// Add labels\r\nseries.nodes.template.label.text = \"{name}\";\r\nseries.nodes.template.label.fill = am4core.color(\"#000000\")\r\nseries.fontSize = 10;\r\nseries.minRadius = 5;\r\nseries.maxRadius = 40;\r\n\r\nseries.manyBodyStrength = -8;\r\nseries.links.template.distance = 2;\r\nseries.links.template.strength = 2;\r\n\r\n//chart.cursorOverStyle = am4core.MouseCursorStyle.grab;\r\nseries.nodes.template.cursorOverStyle = am4core.MouseCursorStyle.grab;\r\nseries.cursorOverStyle = am4core.MouseCursorStyle.grab;\r\n\r\nseries.nodes.template.tooltipText = \"{name}: {value}\";\r\nseries.nodes.template.events.on(\"hit\", function(ev) {\r\n  var ids = ev.target.dataItem.dataContext['sample']\r\n  axios\r\n        .get(`http://localhost:4001/twitter/audienceWhereIDs/${ids}`)\r\n        .then(response => {\r\n          displayPopup(chart, response.data)\r\n        })\r\n        .catch(error => console.error(`There was an error retrieving the retweets list: ${error}`));\r\n  /*chart.modal.close();\r\n \r\n  // get object info\r\n  console.log(ev.target.dataItem.dataContext['sample']);\r\n  //chart.openModal(ev.target.dataItem.dataContext['sample']);\r\n  //chart.openModal(\"<div>This is a <strong>strong</strong></div>\");\r\n  var g = makeAudList([])\r\n  var gs = g.outerHTML;\r\n  chart.openModal(gs);*/\r\n});\r\n\r\nseries.data = organizeData(props.data, 60, activeComs, series_dict)\r\n\r\n\r\n  }, [activeComs]);\r\n\r\n  return (\r\n    <div>\r\n        <div id={props.divid} style={{ width: \"100%\", height: \"500px\" }}></div>\r\n        <Checkbox\r\n        icon={<Icon.FiCheck color=\"#000000\" size={14} />}\r\n        name=\"my-input\"\r\n        checked={true}\r\n        onChange={(value) => {setState(\"r\")}}\r\n        borderColor=\"#9EFA99\"\r\n        borderWidth='3'\r\n        style={{ cursor: \"pointer\" }}\r\n        labelStyle={{ marginLeft: 5, userSelect: \"none\", fontSize: \"18px\"}}\r\n        label=\"Researchers\"\r\n      />\r\n      <Checkbox\r\n        icon={<Icon.FiCheck color=\"#000000\" size={14} />}\r\n        name=\"my-input\"\r\n        checked={true}\r\n        onChange={(value) => {setState(\"p\")}}\r\n        borderColor=\"#FA999E\"\r\n        borderWidth='3'\r\n        style={{ cursor: \"pointer\" }}\r\n        labelStyle={{ marginLeft: 5, userSelect: \"none\", fontSize: \"18px\" }}\r\n        label=\"Practitioners\"\r\n      />\r\n      <Checkbox\r\n        icon={<Icon.FiCheck color=\"#000000\" size={14} />}\r\n        name=\"my-input\"\r\n        checked={true}\r\n        onChange={(value) => {setState(\"o\")}}\r\n        borderColor=\"#999EFA\"\r\n        borderWidth='3'\r\n        style={{ cursor: \"pointer\" }}\r\n        labelStyle={{ marginLeft: 5, userSelect: \"none\", fontSize: \"18px\" }}\r\n        label=\"Other Publics\"\r\n      />\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default BubbleChart;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\Trending.tsx",["396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413"],"import React, { useRef, useLayoutEffect, useState } from 'react';\r\nimport logo from './logo.svg';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport axios from 'axios'\r\nimport { Tweet} from 'react-twitter-widgets'\r\nimport PopoverContent from 'react-bootstrap/esm/PopoverContent';\r\n\r\nconst TrendTable = styled.table`\r\n&&& {\r\n  font-family: arial, sans-serif;\r\n  border-collapse: collapse;\r\n  width: 275px;\r\n}`\r\n\r\nconst TrendTd = styled.td`{\r\n  text-align: left;\r\n  padding: 8px;\r\n}`\r\n\r\nconst TrendNum = styled.td`{\r\n  text-align: right;\r\n  padding: 8px;\r\n  width: 35%;\r\n}`\r\n\r\nconst TrendTrGray = styled.tr `{\r\n  background-color: #dddddd;\r\n}`\r\n\r\nconst Pop = styled.button `{\r\n  background:none;\r\n  border:none;\r\n  margin:0;\r\n  padding:0;\r\n  cursor: pointer;\r\n  color:blue;\r\n}`\r\n\r\nconst tweetpop = {\r\n  width: '600px',\r\n  maxWidth: 'none',\r\n  maxHeight: '500px',\r\n  'overflow-y': 'auto'\r\n  \r\n};\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nvar rp_grad = new am4core.LinearGradient();\r\nrp_grad.addColor(am4core.color(\"#9EFA99\"));\r\nrp_grad.addColor(am4core.color(\"#FA999E\"));\r\n\r\nconst series_dict = {\r\n  r: {col: am4core.color( \"#9EFA99\" ),\r\n        name: \"Researchers\"\r\n       },\r\n  rp: {col: rp_grad,\r\n        name: \"Researcher/Practitioners\"\r\n       },\r\n  p: {col: am4core.color( \"#FA999E\" ),\r\n       name: \"Practitioners\"\r\n      },\r\n  o: {col: am4core.color( \"#999EFA\" ),\r\n  name: \"Other Publics\"\r\n }\r\n}\r\n\r\nfunction compare( a, b ) {\r\n  if ( a.value < b.value ){\r\n    return -1;\r\n  }\r\n  if ( a.value > b.value ){\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\n\r\nfunction organizeData(data, num, active){\r\n  var new_data = []\r\n\r\n  \r\n  for (const key in data){\r\n    if (!active[key]){\r\n      continue\r\n    }\r\n\r\n    for (const n in data[key]){\r\n      new_data.push({\"name\": String(n),\r\n                     \"value\": data[key][n][\"num\"],\r\n                    \"color\": series_dict[key]['col'],\r\n                    \"sample\": data[key][n][\"tweets\"]})\r\n      \r\n    }\r\n  }\r\n  new_data.sort(compare)\r\n  if (new_data.length > num){\r\n    new_data = new_data.slice(-num)\r\n  }\r\n  return (new_data)\r\n}\r\n\r\nfunction PopFollowers(text, tweets) {\r\n  return (\r\n  <OverlayTrigger trigger=\"click\" placement=\"left\" overlay={TweetPop(tweets)}>\r\n  <Pop>{text}</Pop>\r\n    \r\n  </OverlayTrigger>\r\n  )\r\n};\r\n\r\nfunction TweetPop(tweet_ids){\r\n  var tweets = []\r\n  for (var i = 0; i < tweet_ids.length; i++){\r\n    tweets.push(<Tweet tweetId={tweet_ids[i]} options={{ width: \"90%\", cards: \"hidden\" }}/>)\r\n  }\r\n  return(\r\n  <div>\r\n    <Popover id=\"popover-basic\" placement=\"bottom\" style={tweetpop}>\r\n      <Popover.Title>Sample Tweets</Popover.Title>\r\n      <Popover.Content>\r\n        {tweets}\r\n      </Popover.Content>\r\n    </Popover>\r\n  </div>\r\n  )\r\n}\r\n\r\n// !!! the users' tweet and user id JSONs need to be strings, otherwise they get fucked by js\r\n// need to edit the backend to fix this\r\nfunction renderTrendRow(data, gray){\r\n  var text = \"\"\r\n  text = String(data.value) + \" tweets\"\r\n  if (gray){\r\n    return (\r\n      <TrendTrGray>\r\n    <TrendTd>{data.name}</TrendTd>\r\n    <TrendNum>{PopFollowers(text, data.sample)}</TrendNum>\r\n  </TrendTrGray>\r\n    )\r\n  } else {\r\n  return(\r\n    <tr>\r\n    <TrendTd>{data.name}</TrendTd>\r\n    <TrendNum>{PopFollowers(text, data.sample)}</TrendNum>\r\n  </tr>\r\n  )\r\n  }\r\n}\r\n\r\nfunction renderEmptyRow(gray){\r\n  if (gray){\r\n    return (\r\n      <TrendTrGray>\r\n    <TrendTd>_____</TrendTd>\r\n    <TrendNum>___</TrendNum>\r\n  </TrendTrGray>\r\n    )\r\n  } else {\r\n  return(\r\n    <tr>\r\n    <TrendTd>_____</TrendTd>\r\n    <TrendNum>___</TrendNum>\r\n  </tr>\r\n  )\r\n  }\r\n}\r\n\r\nfunction renderTrendTable(data){\r\n  const rrows = []\r\n  const prows = []\r\n  const orows = []\r\n  for (const key in data){\r\n    var empties = 0\r\n    var gray = false\r\n    var words = Object.keys(data[key])\r\n    for (var i = 0; i <= 9; i++){\r\n      if (words.length <= i){\r\n        empties++;\r\n      } else{\r\n        var datum = {\"name\": String(words[i]),\r\n        \"value\": data[key][words[i]][\"num\"],\r\n       \"sample\": data[key][words[i]][\"tweets\"]}\r\n        gray = !gray\r\n        if (key == \"r\"){\r\n          rrows.push(renderTrendRow(datum, gray))\r\n        } else if (key == \"p\"){\r\n          prows.push(renderTrendRow(datum, gray))\r\n        } else if (key == \"o\"){\r\n          orows.push(renderTrendRow(datum, gray))\r\n        }\r\n        \r\n      }\r\n    }\r\n    for (var i = 0; i < empties; i++){\r\n      gray = !gray\r\n      if (key == \"r\"){\r\n        rrows.push(renderEmptyRow(gray))\r\n      } else if (key == \"p\"){\r\n        prows.push(renderEmptyRow(gray))\r\n      } else if (key == \"o\"){\r\n        orows.push(renderEmptyRow(gray))\r\n      }\r\n    }\r\n\r\n  }\r\n  return(\r\n    <div className='columns'>\r\n        <div className='column'>\r\n        <h4>Among researchers</h4>\r\n          <TrendTable>\r\n            <tbody>\r\n            {rrows}\r\n            </tbody>\r\n          </TrendTable>\r\n        </div>\r\n        <div className='column'>\r\n        <h4>Among practitioners</h4>\r\n        <TrendTable>\r\n            {prows}\r\n          </TrendTable>\r\n        </div>\r\n        <div className='column'>\r\n        <h4>Among other publics</h4>\r\n        <TrendTable>\r\n            {orows}\r\n          </TrendTable>\r\n        </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nfunction Trending(props) {\r\n  var data = []\r\n  data = props.data\r\n  var uid = props.id\r\n  var table = renderTrendTable(data)\r\n  //const [activeComs, setActiveComs] = useState({\"r\": true, \"d\": true, \"s\": true, \"o\": true})\r\n  //data = organizeData(props.data, 10, activeComs)\r\n  //const[table, setTable] = useState(renderTrendTable(data))\r\n\r\n  //const[comList, setComList] = useState(<p>Topics among <strong>Researchers</strong>, <strong>Designers</strong>, <strong>Software Engineers</strong>, <strong>Others</strong> in your audience this week.</p>)\r\n\r\n  /*\r\n  const setState = (key) => {\r\n    var state = {\"r\": activeComs[\"r\"], \"d\": activeComs[\"d\"], \"s\": activeComs[\"s\"], \"o\": activeComs[\"o\"]}\r\n    state[key] = !state[key]\r\n    setActiveComs(state)\r\n    var p = writeComList(state)\r\n    setComList(p)\r\n  }\r\n\r\n  function writeComList(coms){\r\n    var r = <></>\r\n    var d = <></>\r\n    var s = <></>\r\n    var o = <></>\r\n    var num = 0\r\n\r\n    if (coms.r){\r\n      r = <strong> Researchers</strong>\r\n      num++\r\n    }\r\n    if (coms.d){\r\n      if (num > 0){d = <>,<strong> Designers</strong></>}\r\n      else{d = <strong> Designers</strong>}\r\n      num++\r\n    }\r\n    if (coms.s){\r\n      if (num > 0){s = <>,<strong> Software Engineers</strong></>}\r\n      else{d = <strong> Software Engineers</strong>}\r\n      num++\r\n    }\r\n    if (coms.o){\r\n      if (num > 0){o = <>,<strong> Others</strong></>}\r\n      else{d = <strong> Others</strong>}\r\n    }\r\n\r\n    return <p> Trending topics among{r}{d}{s}{o} in your audience this week.</p>\r\n  }\r\n  */\r\n\r\n  useLayoutEffect(() => {\r\n    //data = organizeData(props.data, 10, activeComs)\r\n    //setTable(renderTrendTable(data))\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n        <div id={uid} style={{ width: \"80%\"}}>\r\n         {table}\r\n         <br/>\r\n        </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default Trending;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\TopTweets.tsx",["414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436"],"import React, { useRef, useLayoutEffect, useState } from 'react';\r\nimport logo from './logo.svg';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport axios from 'axios'\r\nimport { Tweet} from 'react-twitter-widgets'\r\nimport PopoverContent from 'react-bootstrap/esm/PopoverContent';\r\n\r\nconst TrendTable = styled.table`\r\n&&& {\r\n  font-family: arial, sans-serif;\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n}`\r\n\r\nconst TrendTd = styled.td`{\r\n  text-align: left;\r\n  padding: 8px;\r\n}`\r\n\r\nconst TrendNum = styled.td`{\r\n  text-align: right;\r\n  padding: 8px;\r\n  width: 25%;\r\n}`\r\n\r\nconst TrendTrGray = styled.tr `{\r\n  background-color: #dddddd;\r\n}`\r\n\r\nconst Pop = styled.button `{\r\n  background:none;\r\n  border:none;\r\n  margin:0;\r\n  padding:0;\r\n  cursor: pointer;\r\n  color:blue;\r\n}`\r\n\r\nconst tweetpop = {\r\n  width: '275px',\r\n  maxWidth: '275px',\r\n  maxHeight: '400px',\r\n  'overflow-y': 'auto'\r\n  \r\n};\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nfunction compare( a, b ) {\r\n  if ( a.value < b.value ){\r\n    return -1;\r\n  }\r\n  if ( a.value > b.value ){\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\n\r\nfunction organizeData(data, num){\r\n  var new_data = []\r\n  \r\n  for (const key in data){\r\n    new_data.push(data[key].slice(0, num))\r\n  }\r\n\r\n  return (new_data)\r\n}\r\n\r\nfunction renderTweet(tweet_id){\r\n  return(\r\n    <div key = {tweet_id + \"tt\"}>\r\n    <Tweet tweetId={tweet_id} options={{ width: \"200px\", cards: \"hidden\"}}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction renderTweetTable(data, num){\r\n  var r_tweets = []\r\n  var p_tweets = []\r\n  var o_tweets = []\r\n  for (const key in data){\r\n    if (key == \"r\"){\r\n      var r_min = Math.min(data[key].length, num)\r\n      for (var i = 0; i < r_min; i++){\r\n        r_tweets.push(renderTweet(data[key][i]))\r\n      }\r\n    } else if (key == \"p\"){\r\n      var p_min = Math.min(data[key].length, num)\r\n      for (var i = 0; i < p_min; i++){\r\n        p_tweets.push(renderTweet(data[key][i]))\r\n      }\r\n    } else if (key == \"o\"){\r\n      var o_min = Math.min(data[key].length, num)\r\n      for (var i = 0; i < o_min; i++){\r\n        o_tweets.push(renderTweet(data[key][i]))\r\n      }\r\n    }\r\n  }\r\n  return(\r\n    <div className='columns'>\r\n        <div className='column'>\r\n        <h4>Among researchers</h4>\r\n          <Card style = {tweetpop}>\r\n            {r_tweets}\r\n          </Card>\r\n        </div>\r\n        <div className='column'>\r\n        <h4>Among practitioners</h4>\r\n          <Card style = {tweetpop}>\r\n            {p_tweets}\r\n          </Card>\r\n        </div>\r\n        <div className='column'>\r\n        <h4>Among other publics</h4>\r\n          <Card style = {tweetpop}>\r\n            {o_tweets}\r\n          </Card>\r\n        </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nfunction TopTweets(props) {\r\n  var data = []\r\n  //const [activeComs, setActiveComs] = useState({\"r\": true, \"d\": true, \"s\": true, \"o\": true})\r\n  //data = organizeData(props.data, 10)\r\n  data = props.data\r\n  var table = renderTweetTable(data, 5)\r\n  //const[table, setTable] = useState(renderTweetTable(data))\r\n\r\n  //const[comList, setComList] = useState(<p>Topics among <strong>Researchers</strong>, <strong>Designers</strong>, <strong>Software Engineers</strong>, <strong>Others</strong> in your audience this week.</p>)\r\n\r\n  /*\r\n  const setState = (key) => {\r\n    var state = {\"r\": activeComs[\"r\"], \"d\": activeComs[\"d\"], \"s\": activeComs[\"s\"], \"o\": activeComs[\"o\"]}\r\n    state[key] = !state[key]\r\n    setActiveComs(state)\r\n    var p = writeComList(state)\r\n    setComList(p)\r\n  }\r\n  */\r\n  /*\r\n  function writeComList(coms){\r\n    var r = <></>\r\n    var d = <></>\r\n    var s = <></>\r\n    var o = <></>\r\n    var num = 0\r\n\r\n    if (coms.r){\r\n      r = <strong> Researchers</strong>\r\n      num++\r\n    }\r\n    if (coms.d){\r\n      if (num > 0){d = <>,<strong> Designers</strong></>}\r\n      else{d = <strong> Designers</strong>}\r\n      num++\r\n    }\r\n    if (coms.s){\r\n      if (num > 0){s = <>,<strong> Software Engineers</strong></>}\r\n      else{d = <strong> Software Engineers</strong>}\r\n      num++\r\n    }\r\n    if (coms.o){\r\n      if (num > 0){o = <>,<strong> Others</strong></>}\r\n      else{d = <strong> Others</strong>}\r\n    }\r\n\r\n    return <p> Top tweets among{r}{d}{s}{o} in your audience this week.</p>\r\n  }\r\n  */\r\n\r\n  useLayoutEffect(() => {\r\n    //data = organizeData(props.data, 10, activeComs)\r\n    //setTable(renderTweetTable(data))\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n        <div id={props.divid} style={{ width: \"80%\", height: \"500px\" }}>\r\n         {table}\r\n        </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default TopTweets;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\BubbleLite.tsx",["437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452"],"import React, { useRef, useLayoutEffect, useState } from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport logo from './logo.svg';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport * as am4plugins_forceDirected from \"@amcharts/amcharts4/plugins/forceDirected\";\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport axios from 'axios'\r\nimport './chart.css';\r\nimport Popover from 'react-bootstrap/Popover'\r\n\r\nvar user_id = \"634739719\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\nam4core.options.autoDispose = true;\r\n\r\nconst tweetpop = {\r\n  width: '400px',\r\n  maxWidth: 'none',\r\n  height: '600px',\r\n  maxHeight: '600px'\r\n  \r\n};\r\n\r\nconst rcheck = {\r\n  color: '#9EFA99',\r\n  backgroundColor: '#9EFA99'\r\n\r\n}\r\n\r\nconst Check = styled.p`\r\n    &&& {\r\n    padding: .05em;\r\n    font-size: 24px;\r\n}`\r\n\r\nfunction Pop(data){\r\n  return(\r\n\r\n  <div>\r\n    <Popover id=\"popover-basic\" placement=\"top\" style={tweetpop}>\r\n      <Popover.Title>Sample Audience</Popover.Title>\r\n      <Popover.Content>\r\n          {data}\r\n      </Popover.Content>\r\n    </Popover>\r\n  </div>\r\n\r\n  )\r\n}\r\n\r\n\r\nfunction organizeData(data, num, color){\r\n  var new_data = []\r\n  var i = 0\r\n  for (const key in data){\r\n    i = i + 1\r\n        new_data.push({\"name\": String(key),\r\n                     \"value\": data[key][\"number\"],\r\n                    \"color\": color,\r\n                    \"sample\": data[key][\"audience_sample\"]})\r\n    if (i >= num){\r\n      break\r\n    }\r\n    }\r\n  \r\n  return (new_data)\r\n}\r\n\r\nfunction makeAudList(audience) {\r\n  var div = document.createElement(\"div\")\r\n  for (var i = 0; i < audience.length; i++) {\r\n    \r\n    var h = document.createElement(\"h4\")\r\n    var node = document.createTextNode(audience[i][\"name\"])\r\n    h.append(node)\r\n\r\n    var hsub = document.createElement(\"h5\")\r\n  \r\n    var anchor = document.createElement(\"a\")\r\n    node = document.createTextNode(audience[i][\"id_text\"])\r\n    anchor.append(node)\r\n    anchor.href = \"https://www.twitter.com/i/user/\" + audience[i][\"id_text\"]\r\n    anchor.target = \"_blank\"\r\n    anchor.rel = \"noopener noreferrer\"\r\n    hsub.append(anchor)\r\n\r\n    var p = document.createElement(\"p\")\r\n    node = document.createTextNode(audience[i][\"bio\"]);\r\n\r\n    p.appendChild(node)\r\n    div.append(h)\r\n    div.append(hsub)\r\n    div.append(p)\r\n  };\r\n  return div\r\n};\r\n\r\nfunction displayPopup(chart, audience) {\r\n  \r\n  chart.closeAllPopups();\r\n \r\n  var g = makeAudList(audience)\r\n  var gs = g.outerHTML;\r\n  chart.openPopup(gs, \"Sample users\");\r\n}\r\n\r\nfunction BubbleLite(props) {\r\n  const full_data = props.data\r\n\r\n  //const [isLoading, setLoading] = useState(true);\r\n  //const [audience, setAudience] = useState([]);\r\n  var series_dict = props.series_dict\r\n\r\n  /*\r\n  var ids = []\r\n\r\n  for (var key in full_data){\r\n    for (var word in full_data[key]){\r\n      console.log(full_data[key][word][\"audience_sample\"])\r\n      ids.push(...full_data[key][word][\"audience_sample\"])\r\n    }\r\n  }\r\n  console.log(\"ids:\")\r\n  console.log(ids)\r\n  */\r\n\r\n  useLayoutEffect(() => {\r\n\r\n    //chart.paddingRight = 20;\r\n    //chart.paddingLeft = 20;\r\n\r\n    /* Chart code */\r\n// Themes begin\r\nam4core.useTheme(am4themes_animated);\r\n// Themes end\r\n\r\nvar data0 = props.data\r\n\r\n// Chart\r\n//if (chart !== undefined) {chart.dispose()}\r\nlet chart = am4core.create(props.divid, am4plugins_forceDirected.ForceDirectedTree); \r\nchart.hiddenState.properties.opacity = 0; // this creates initial fade-in\r\n\r\nlet series = chart.series.push(new am4plugins_forceDirected.ForceDirectedSeries())\r\n\r\n/*series.colors.list = [am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\"),\r\n                      am4core.color(\"#000000\")];\r\nseries.colors.wrap = false;\r\n*/\r\nseries.dataFields.color = \"color\";\r\n// Set data\r\nseries.data = [{\r\n  \"name\": \"First\",\r\n  \"value\": 190,\r\n  \"color\": am4core.color(\"#000000\")\r\n}, {\r\n  \"name\": \"Second\",\r\n  \"value\": 289,\r\n  \"color\": am4core.color(\"#000000\")\r\n}, {\r\n  \"name\": \"Third\",\r\n  \"value\": 635,\r\n  \"color\": am4core.color(\"#000000\")\r\n}, {\r\n  \"name\": \"Fourth\",\r\n  \"value\": 732,\r\n  \"color\": am4core.color(\"#000000\")\r\n}, {\r\n  \"name\": \"Fifth\",\r\n  \"value\": 835,\r\n  \"color\": am4core.color(\"#000000\")\r\n}, {\r\n  \"name\": \"First\",\r\n  \"value\": 190,\r\n  \"color\": am4core.color(\"#9efa99\")\r\n}, {\r\n  \"name\": \"Second\",\r\n  \"value\": 289,\r\n  \"color\": am4core.color(\"#9efa99\")\r\n}, {\r\n  \"name\": \"Third\",\r\n  \"value\": 635,\r\n  \"color\": am4core.color(\"#9efa99\")\r\n}, {\r\n  \"name\": \"Fourth\",\r\n  \"value\": 732,\r\n  \"color\": am4core.color(\"#9efa99\")\r\n}, {\r\n  \"name\": \"Fifth\",\r\n  \"value\": 835,\r\n  \"color\": am4core.color(\"#9efa99\")\r\n}]\r\n\r\n// Set up data fields\r\nseries.dataFields.value = \"value\";\r\nseries.dataFields.name = \"name\";\r\nseries.dataFields.children = \"children\";\r\n\r\n// Add labels\r\nseries.nodes.template.label.text = \"{name}\";\r\nseries.nodes.template.label.fill = am4core.color(\"#000000\")\r\nseries.fontSize = 10;\r\nseries.minRadius = 2;\r\nseries.maxRadius = 30;\r\n\r\nseries.manyBodyStrength = -8;\r\nseries.links.template.distance = 2;\r\nseries.links.template.strength = 2;\r\n\r\n//chart.cursorOverStyle = am4core.MouseCursorStyle.grab;\r\nseries.nodes.template.cursorOverStyle = am4core.MouseCursorStyle.grab;\r\nseries.cursorOverStyle = am4core.MouseCursorStyle.grab;\r\n\r\nseries.nodes.template.tooltipText = \"{name}: {value}\";\r\nseries.nodes.template.events.on(\"hit\", function(ev) {\r\n  var ids = ev.target.dataItem.dataContext['sample']\r\n  axios\r\n        .get(`http://localhost:4001/twitter/audienceWhereIDs/${ids}`)\r\n        .then(response => {\r\n          displayPopup(chart, response.data)\r\n        })\r\n        .catch(error => console.error(`There was an error retrieving the retweets list: ${error}`));\r\n  /*chart.modal.close();\r\n \r\n  // get object info\r\n  console.log(ev.target.dataItem.dataContext['sample']);\r\n  //chart.openModal(ev.target.dataItem.dataContext['sample']);\r\n  //chart.openModal(\"<div>This is a <strong>strong</strong></div>\");\r\n  var g = makeAudList([])\r\n  var gs = g.outerHTML;\r\n  chart.openModal(gs);*/\r\n});\r\n\r\nseries.data = organizeData(props.data, 40, series_dict[props.com][\"col\"])\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n        <div id={props.divid} style={{ width: \"100%\", height: \"500px\" }}></div>\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default BubbleLite;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\CustomLegend.tsx",["453","454","455","456","457","458","459","460","461","462","463"],"import React, { useRef, useLayoutEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport styled from 'styled-components';\r\nimport qtip from './q.jpg'\r\nimport rsq from './images/r_square.jpg'\r\nimport psq from './images/p_square.jpg'\r\nimport osq from './images/o_square.jpg'\r\nimport esq from './images/empty_square.jpg'\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\n\r\nfunction renderTooltip(text){\r\n  return(\r\n  <Tooltip id=\"button-tooltip\">\r\n    {text}\r\n  </Tooltip>\r\n  )\r\n}\r\n\r\nfunction toolTrigger(text){\r\n  return(<OverlayTrigger\r\n    placement=\"right\"\r\n    delay={{ show: 100, hide: 100 }}\r\n    overlay={renderTooltip(text)}\r\n  >\r\n    <img width = \"20px\" src = {qtip} />\r\n  </OverlayTrigger>\r\n  )\r\n}\r\n\r\nconst Legend = styled.table `{\r\n  border-spacing: 50px;\r\n  border-collapse: collapse;\r\n  width: 200px;\r\n  margin-right:auto;\r\n}`\r\n\r\nconst Ltr = styled.tr `{\r\n  padding: 8px;\r\n}`\r\n\r\nconst pract_explanation = \"'Practitioners' currently includes software engineers and designers. Future updates may include additional practitioners groups relevant to HCI, such as teachers, healthcare providers, etc.\"\r\n\r\n\r\nfunction CustomLegend() {\r\n  return(\r\n    <div>\r\n      <p>Legend</p>\r\n    <Legend>\r\n      <tbody>\r\n      <Ltr>\r\n        <td><img width = \"25px\" src = {rsq}/></td>\r\n        <td>Researchers</td>\r\n      </Ltr>\r\n      <Ltr>\r\n        <td><img width = \"25px\" src = {psq}/></td>\r\n        <td>Practitioners</td>\r\n      </Ltr>\r\n      <Ltr>\r\n        <td><img width = \"25px\" src = {osq}/></td>\r\n        <td>Other Publics</td>\r\n      </Ltr>\r\n      </tbody>\r\n      <br></br>\r\n    </Legend>\r\n    <Legend>\r\n    <tbody>\r\n        <Ltr>\r\n        <td><img width = \"25px\" src = {esq}/></td>\r\n        <td> ≈ 25 users</td>\r\n        </Ltr>\r\n      </tbody>\r\n    </Legend>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomLegend;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\SideBar.tsx",["464","465","466","467"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { RoutesConfig } from '../config/routes.config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { ReactComponent as ReactSeoLogoSvg } from '../assets/img/ReactSeoLogo.svg';\r\nimport styled from 'styled-components';\r\nimport Card from 'react-bootstrap/Card';\r\nimport CustomLegend from '../containers/Home/components/CustomLegend'\r\n\r\nconst Sticky = styled.div`\r\n&&& {\r\n  position: -webkit-sticky; /* Safari */\r\n  position: sticky;\r\n  top: 10%;\r\n  right: 10%;\r\n  height: 400px;\r\n  width: 250px;\r\n}`\r\n\r\nconst SideBar: React.FC = (props) => (\r\n  <Sticky>\r\n    <Card style ={{padding:\"1em\"}}>\r\n    <div id=\"toc_container\">\r\n      <p>Page contents</p>\r\n      <ul>\r\n      <li><a href=\"#What is my audience?\">What is my reach?</a></li>\r\n      <li><a href=\"#Who are my followers?\">Who are my audience?</a>\r\n      </li>\r\n      <li><a href=\"#Who are my tweets reaching?\">Who are my tweets reaching?</a></li>\r\n      <li><a href=\"#What is my audience talking about?\">What is my audience talking about</a></li>\r\n     </ul>\r\n     <CustomLegend />\r\n    </div>\r\n    </Card>\r\n</Sticky>\r\n);\r\n\r\nexport default SideBar;\r\n","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\Categories.tsx",["468","469","470","471","472","473","474","475","476"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport MyContributions from './MyContributions';\r\nimport IndividualStats from './IndividualStats';\r\n\r\nconst Left = styled.div`\r\n    &&&{width: 72%;\r\n    }\r\n`\r\n\r\nconst Right = styled.div`\r\n    &&&{width:28%;\r\n    }\r\n`\r\n\r\nconst divStyle ={\r\n    display:'flex',\r\n}\r\n\r\nconst Title = styled.p`\r\n    &&& {\r\n    font-size: 30px;\r\n    font-weight:bold;\r\n}`\r\n\r\nconst Subtitle = styled.p`\r\n    &&& {\r\n    padding: .05em;\r\n    font-size: 24px;\r\n}`\r\n\r\n\r\nclass Categories extends React.Component{\r\n    render(){\r\n        return (\r\n            <div style={divStyle}>\r\n                <Card>\r\n                    <Subtitle>Researchers</Subtitle>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Categories;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Tweets\\index.ts",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Tweets\\Tweets.tsx",["477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493"],"import React, { useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { MetaInfo } from '../../components';\r\nimport { RoutesConfig } from '../../config/routes.config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { FeatureInfoConfig, FeatureInfo } from '../../config/features.config';\r\nimport axios from 'axios'\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport { Tweet} from 'react-twitter-widgets'\r\nimport Card from 'react-bootstrap/Card';\r\nimport SideBar from '../../components/SideBar';\r\n\r\nconst Grid = styled.div`\r\n&&& {\r\n  display: grid;\r\n  grid-column-gap: 0px;\r\n  grid-template-columns: auto 1px;\r\n}`\r\n\r\nconst Space = styled.p`\r\n    &&& {\r\n    padding: 0em;\r\n    margin-bottom: 1.4em;\r\n}`\r\n\r\nconst Sticky = styled.div`\r\n&&& {\r\n  position: -webkit-sticky; /* Safari */\r\n  position: sticky;\r\n  top: 50%;\r\n  left: 75%;\r\n  max-height: 300px;\r\n  max-width: 250px;\r\n}`\r\n\r\nconst Test = styled.div`\r\n&&& {\r\n  position: -webkit-sticky; /* Safari */\r\n  position: sticky;\r\n  top: 2%;\r\n  left: 95%;\r\n  max-height: 300px;\r\n  max-width: 250px;\r\n  background-color: lightblue;\r\n}`\r\n\r\nconst Title = styled.p`\r\n    &&& {\r\n    font-size: 30px;\r\n    font-weight:bold;\r\n}`\r\n\r\nconst Subtitle = styled.p`\r\n    &&& {\r\n    padding: .05em;\r\n    font-size: 24px;\r\n}`\r\n\r\nconst Tweets: React.FC = () => {\r\n  const featureList = useMemo<FeatureInfo[]>(() => {\r\n    return Object.keys(FeatureInfoConfig).map((key) => FeatureInfoConfig[key]);\r\n  }, []);\r\n\r\n  return (\r\n    <div className='view-wrapper'>\r\n      <MetaInfo {...RoutesConfig.Tweets.metaInfo} />\r\n      \r\n      <section className='container dashboard-content'>\r\n        <h1>Test</h1>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweets;\r\n",{"ruleId":"494","replacedBy":"495"},{"ruleId":"496","replacedBy":"497"},{"ruleId":"498","severity":1,"message":"499","line":2,"column":37,"nodeType":"500","messageId":"501","endLine":2,"endColumn":44},{"ruleId":"498","severity":1,"message":"502","line":3,"column":8,"nodeType":"500","messageId":"501","endLine":3,"endColumn":14},{"ruleId":"498","severity":1,"message":"503","line":2,"column":10,"nodeType":"500","messageId":"501","endLine":2,"endColumn":25},{"ruleId":"504","severity":1,"message":"505","line":32,"column":7,"nodeType":"506","endLine":32,"endColumn":51},{"ruleId":"504","severity":1,"message":"505","line":33,"column":7,"nodeType":"506","endLine":33,"endColumn":52},{"ruleId":"498","severity":1,"message":"503","line":4,"column":10,"nodeType":"500","messageId":"501","endLine":4,"endColumn":25},{"ruleId":"498","severity":1,"message":"507","line":5,"column":28,"nodeType":"500","messageId":"501","endLine":5,"endColumn":43},{"ruleId":"498","severity":1,"message":"508","line":3,"column":8,"nodeType":"500","messageId":"501","endLine":3,"endColumn":11},{"ruleId":"498","severity":1,"message":"509","line":4,"column":8,"nodeType":"500","messageId":"501","endLine":4,"endColumn":14},{"ruleId":"498","severity":1,"message":"503","line":7,"column":10,"nodeType":"500","messageId":"501","endLine":7,"endColumn":25},{"ruleId":"498","severity":1,"message":"510","line":9,"column":8,"nodeType":"500","messageId":"501","endLine":9,"endColumn":13},{"ruleId":"498","severity":1,"message":"511","line":10,"column":10,"nodeType":"500","messageId":"501","endLine":10,"endColumn":24},{"ruleId":"498","severity":1,"message":"512","line":10,"column":38,"nodeType":"500","messageId":"501","endLine":10,"endColumn":53},{"ruleId":"498","severity":1,"message":"513","line":10,"column":55,"nodeType":"500","messageId":"501","endLine":10,"endColumn":70},{"ruleId":"498","severity":1,"message":"514","line":10,"column":72,"nodeType":"500","messageId":"501","endLine":10,"endColumn":84},{"ruleId":"498","severity":1,"message":"515","line":10,"column":86,"nodeType":"500","messageId":"501","endLine":10,"endColumn":96},{"ruleId":"498","severity":1,"message":"516","line":11,"column":13,"nodeType":"500","messageId":"501","endLine":11,"endColumn":20},{"ruleId":"498","severity":1,"message":"517","line":12,"column":13,"nodeType":"500","messageId":"501","endLine":12,"endColumn":22},{"ruleId":"498","severity":1,"message":"518","line":13,"column":8,"nodeType":"500","messageId":"501","endLine":13,"endColumn":26},{"ruleId":"498","severity":1,"message":"519","line":14,"column":10,"nodeType":"500","messageId":"501","endLine":14,"endColumn":15},{"ruleId":"498","severity":1,"message":"520","line":15,"column":8,"nodeType":"500","messageId":"501","endLine":15,"endColumn":12},{"ruleId":"498","severity":1,"message":"521","line":31,"column":7,"nodeType":"500","messageId":"501","endLine":31,"endColumn":13},{"ruleId":"498","severity":1,"message":"522","line":41,"column":7,"nodeType":"500","messageId":"501","endLine":41,"endColumn":11},{"ruleId":"498","severity":1,"message":"523","line":52,"column":7,"nodeType":"500","messageId":"501","endLine":52,"endColumn":12},{"ruleId":"498","severity":1,"message":"524","line":58,"column":7,"nodeType":"500","messageId":"501","endLine":58,"endColumn":15},{"ruleId":"498","severity":1,"message":"525","line":65,"column":9,"nodeType":"500","messageId":"501","endLine":65,"endColumn":20},{"ruleId":"498","severity":1,"message":"526","line":69,"column":12,"nodeType":"500","messageId":"501","endLine":69,"endColumn":22},{"ruleId":"527","severity":1,"message":"528","line":101,"column":12,"nodeType":"529","messageId":"530","endLine":101,"endColumn":51},{"ruleId":"504","severity":1,"message":"505","line":187,"column":13,"nodeType":"506","endLine":187,"endColumn":44},{"ruleId":"498","severity":1,"message":"503","line":4,"column":10,"nodeType":"500","messageId":"501","endLine":4,"endColumn":25},{"ruleId":"498","severity":1,"message":"531","line":3,"column":9,"nodeType":"500","messageId":"501","endLine":3,"endColumn":14},{"ruleId":"498","severity":1,"message":"532","line":3,"column":16,"nodeType":"500","messageId":"501","endLine":3,"endColumn":21},{"ruleId":"498","severity":1,"message":"533","line":3,"column":23,"nodeType":"500","messageId":"501","endLine":3,"endColumn":29},{"ruleId":"498","severity":1,"message":"516","line":5,"column":13,"nodeType":"500","messageId":"501","endLine":5,"endColumn":20},{"ruleId":"498","severity":1,"message":"517","line":6,"column":13,"nodeType":"500","messageId":"501","endLine":6,"endColumn":22},{"ruleId":"498","severity":1,"message":"518","line":7,"column":8,"nodeType":"500","messageId":"501","endLine":7,"endColumn":26},{"ruleId":"498","severity":1,"message":"534","line":8,"column":9,"nodeType":"500","messageId":"501","endLine":8,"endColumn":21},{"ruleId":"498","severity":1,"message":"531","line":3,"column":9,"nodeType":"500","messageId":"501","endLine":3,"endColumn":14},{"ruleId":"498","severity":1,"message":"532","line":3,"column":16,"nodeType":"500","messageId":"501","endLine":3,"endColumn":21},{"ruleId":"498","severity":1,"message":"533","line":3,"column":23,"nodeType":"500","messageId":"501","endLine":3,"endColumn":29},{"ruleId":"498","severity":1,"message":"535","line":5,"column":8,"nodeType":"500","messageId":"501","endLine":5,"endColumn":15},{"ruleId":"498","severity":1,"message":"536","line":6,"column":8,"nodeType":"500","messageId":"501","endLine":6,"endColumn":15},{"ruleId":"498","severity":1,"message":"509","line":7,"column":8,"nodeType":"500","messageId":"501","endLine":7,"endColumn":14},{"ruleId":"498","severity":1,"message":"537","line":9,"column":8,"nodeType":"500","messageId":"501","endLine":9,"endColumn":19},{"ruleId":"498","severity":1,"message":"538","line":10,"column":8,"nodeType":"500","messageId":"501","endLine":10,"endColumn":16},{"ruleId":"498","severity":1,"message":"539","line":11,"column":8,"nodeType":"500","messageId":"501","endLine":11,"endColumn":20},{"ruleId":"498","severity":1,"message":"540","line":12,"column":8,"nodeType":"500","messageId":"501","endLine":12,"endColumn":19},{"ruleId":"498","severity":1,"message":"541","line":14,"column":8,"nodeType":"500","messageId":"501","endLine":14,"endColumn":17},{"ruleId":"498","severity":1,"message":"542","line":16,"column":8,"nodeType":"500","messageId":"501","endLine":16,"endColumn":19},{"ruleId":"498","severity":1,"message":"543","line":24,"column":8,"nodeType":"500","messageId":"501","endLine":24,"endColumn":17},{"ruleId":"498","severity":1,"message":"544","line":54,"column":7,"nodeType":"500","messageId":"501","endLine":54,"endColumn":15},{"ruleId":"498","severity":1,"message":"521","line":60,"column":7,"nodeType":"500","messageId":"501","endLine":60,"endColumn":13},{"ruleId":"498","severity":1,"message":"545","line":71,"column":7,"nodeType":"500","messageId":"501","endLine":71,"endColumn":12},{"ruleId":"498","severity":1,"message":"546","line":78,"column":7,"nodeType":"500","messageId":"501","endLine":78,"endColumn":13},{"ruleId":"498","severity":1,"message":"547","line":83,"column":7,"nodeType":"500","messageId":"501","endLine":83,"endColumn":14},{"ruleId":"498","severity":1,"message":"548","line":92,"column":7,"nodeType":"500","messageId":"501","endLine":92,"endColumn":15},{"ruleId":"504","severity":1,"message":"505","line":136,"column":5,"nodeType":"506","endLine":136,"endColumn":40},{"ruleId":"498","severity":1,"message":"549","line":145,"column":7,"nodeType":"500","messageId":"501","endLine":145,"endColumn":11},{"ruleId":"498","severity":1,"message":"550","line":2,"column":8,"nodeType":"500","messageId":"501","endLine":2,"endColumn":12},{"ruleId":"498","severity":1,"message":"502","line":6,"column":8,"nodeType":"500","messageId":"501","endLine":6,"endColumn":14},{"ruleId":"498","severity":1,"message":"531","line":7,"column":9,"nodeType":"500","messageId":"501","endLine":7,"endColumn":14},{"ruleId":"498","severity":1,"message":"532","line":7,"column":16,"nodeType":"500","messageId":"501","endLine":7,"endColumn":21},{"ruleId":"498","severity":1,"message":"533","line":7,"column":23,"nodeType":"500","messageId":"501","endLine":7,"endColumn":29},{"ruleId":"498","severity":1,"message":"520","line":8,"column":8,"nodeType":"500","messageId":"501","endLine":8,"endColumn":12},{"ruleId":"498","severity":1,"message":"551","line":40,"column":7,"nodeType":"500","messageId":"501","endLine":40,"endColumn":9},{"ruleId":"552","severity":1,"message":"553","line":60,"column":12,"nodeType":"554","messageId":"555","endLine":60,"endColumn":14},{"ruleId":"556","severity":1,"message":"557","line":69,"column":9,"nodeType":"500","messageId":"558","endLine":69,"endColumn":14},{"ruleId":"556","severity":1,"message":"559","line":70,"column":9,"nodeType":"500","messageId":"558","endLine":70,"endColumn":14},{"ruleId":"552","severity":1,"message":"553","line":72,"column":12,"nodeType":"554","messageId":"555","endLine":72,"endColumn":14},{"ruleId":"556","severity":1,"message":"557","line":81,"column":9,"nodeType":"500","messageId":"558","endLine":81,"endColumn":14},{"ruleId":"556","severity":1,"message":"559","line":82,"column":9,"nodeType":"500","messageId":"558","endLine":82,"endColumn":14},{"ruleId":"552","severity":1,"message":"553","line":84,"column":12,"nodeType":"554","messageId":"555","endLine":84,"endColumn":14},{"ruleId":"498","severity":1,"message":"560","line":95,"column":10,"nodeType":"500","messageId":"501","endLine":95,"endColumn":26},{"ruleId":"552","severity":1,"message":"553","line":125,"column":12,"nodeType":"554","messageId":"555","endLine":125,"endColumn":14},{"ruleId":"556","severity":1,"message":"557","line":134,"column":9,"nodeType":"500","messageId":"558","endLine":134,"endColumn":14},{"ruleId":"556","severity":1,"message":"559","line":135,"column":9,"nodeType":"500","messageId":"558","endLine":135,"endColumn":14},{"ruleId":"552","severity":1,"message":"553","line":137,"column":12,"nodeType":"554","messageId":"555","endLine":137,"endColumn":14},{"ruleId":"556","severity":1,"message":"557","line":146,"column":9,"nodeType":"500","messageId":"558","endLine":146,"endColumn":14},{"ruleId":"556","severity":1,"message":"559","line":147,"column":9,"nodeType":"500","messageId":"558","endLine":147,"endColumn":14},{"ruleId":"552","severity":1,"message":"553","line":149,"column":12,"nodeType":"554","messageId":"555","endLine":149,"endColumn":14},{"ruleId":"498","severity":1,"message":"561","line":163,"column":9,"nodeType":"500","messageId":"501","endLine":163,"endColumn":15},{"ruleId":"498","severity":1,"message":"562","line":354,"column":7,"nodeType":"500","messageId":"501","endLine":354,"endColumn":20},{"ruleId":"563","severity":1,"message":"564","line":355,"column":14,"nodeType":"565","messageId":"566","endLine":355,"endColumn":27},{"ruleId":"563","severity":1,"message":"564","line":359,"column":14,"nodeType":"565","messageId":"566","endLine":359,"endColumn":27},{"ruleId":"563","severity":1,"message":"564","line":363,"column":14,"nodeType":"565","messageId":"566","endLine":363,"endColumn":27},{"ruleId":"552","severity":1,"message":"567","line":393,"column":15,"nodeType":"554","messageId":"555","endLine":393,"endColumn":17},{"ruleId":"498","severity":1,"message":"550","line":2,"column":8,"nodeType":"500","messageId":"501","endLine":2,"endColumn":12},{"ruleId":"498","severity":1,"message":"502","line":6,"column":8,"nodeType":"500","messageId":"501","endLine":6,"endColumn":14},{"ruleId":"498","severity":1,"message":"531","line":7,"column":9,"nodeType":"500","messageId":"501","endLine":7,"endColumn":14},{"ruleId":"498","severity":1,"message":"532","line":7,"column":16,"nodeType":"500","messageId":"501","endLine":7,"endColumn":21},{"ruleId":"498","severity":1,"message":"533","line":7,"column":23,"nodeType":"500","messageId":"501","endLine":7,"endColumn":29},{"ruleId":"498","severity":1,"message":"520","line":8,"column":8,"nodeType":"500","messageId":"501","endLine":8,"endColumn":12},{"ruleId":"498","severity":1,"message":"568","line":28,"column":7,"nodeType":"500","messageId":"501","endLine":28,"endColumn":9},{"ruleId":"552","severity":1,"message":"553","line":37,"column":12,"nodeType":"554","messageId":"555","endLine":37,"endColumn":14},{"ruleId":"556","severity":1,"message":"557","line":46,"column":9,"nodeType":"500","messageId":"558","endLine":46,"endColumn":14},{"ruleId":"556","severity":1,"message":"559","line":47,"column":9,"nodeType":"500","messageId":"558","endLine":47,"endColumn":14},{"ruleId":"552","severity":1,"message":"553","line":49,"column":12,"nodeType":"554","messageId":"555","endLine":49,"endColumn":14},{"ruleId":"498","severity":1,"message":"569","line":61,"column":9,"nodeType":"500","messageId":"501","endLine":61,"endColumn":14},{"ruleId":"498","severity":1,"message":"570","line":63,"column":7,"nodeType":"500","messageId":"501","endLine":63,"endColumn":9},{"ruleId":"498","severity":1,"message":"571","line":64,"column":7,"nodeType":"500","messageId":"501","endLine":64,"endColumn":10},{"ruleId":"563","severity":1,"message":"564","line":248,"column":9,"nodeType":"565","messageId":"566","endLine":248,"endColumn":24},{"ruleId":"563","severity":1,"message":"564","line":249,"column":9,"nodeType":"565","messageId":"566","endLine":249,"endColumn":23},{"ruleId":"498","severity":1,"message":"562","line":257,"column":7,"nodeType":"500","messageId":"501","endLine":257,"endColumn":20},{"ruleId":"563","severity":1,"message":"564","line":258,"column":13,"nodeType":"565","messageId":"566","endLine":258,"endColumn":26},{"ruleId":"498","severity":1,"message":"531","line":3,"column":9,"nodeType":"500","messageId":"501","endLine":3,"endColumn":14},{"ruleId":"498","severity":1,"message":"532","line":3,"column":16,"nodeType":"500","messageId":"501","endLine":3,"endColumn":21},{"ruleId":"498","severity":1,"message":"533","line":3,"column":23,"nodeType":"500","messageId":"501","endLine":3,"endColumn":29},{"ruleId":"498","severity":1,"message":"536","line":6,"column":8,"nodeType":"500","messageId":"501","endLine":6,"endColumn":15},{"ruleId":"498","severity":1,"message":"537","line":9,"column":8,"nodeType":"500","messageId":"501","endLine":9,"endColumn":19},{"ruleId":"498","severity":1,"message":"538","line":10,"column":8,"nodeType":"500","messageId":"501","endLine":10,"endColumn":16},{"ruleId":"498","severity":1,"message":"539","line":11,"column":8,"nodeType":"500","messageId":"501","endLine":11,"endColumn":20},{"ruleId":"498","severity":1,"message":"550","line":2,"column":8,"nodeType":"500","messageId":"501","endLine":2,"endColumn":12},{"ruleId":"498","severity":1,"message":"502","line":6,"column":8,"nodeType":"500","messageId":"501","endLine":6,"endColumn":14},{"ruleId":"498","severity":1,"message":"531","line":7,"column":9,"nodeType":"500","messageId":"501","endLine":7,"endColumn":14},{"ruleId":"498","severity":1,"message":"532","line":7,"column":16,"nodeType":"500","messageId":"501","endLine":7,"endColumn":21},{"ruleId":"498","severity":1,"message":"533","line":7,"column":23,"nodeType":"500","messageId":"501","endLine":7,"endColumn":29},{"ruleId":"498","severity":1,"message":"520","line":8,"column":8,"nodeType":"500","messageId":"501","endLine":8,"endColumn":12},{"ruleId":"498","severity":1,"message":"569","line":13,"column":9,"nodeType":"500","messageId":"501","endLine":13,"endColumn":14},{"ruleId":"498","severity":1,"message":"570","line":15,"column":7,"nodeType":"500","messageId":"501","endLine":15,"endColumn":9},{"ruleId":"498","severity":1,"message":"571","line":16,"column":7,"nodeType":"500","messageId":"501","endLine":16,"endColumn":10},{"ruleId":"498","severity":1,"message":"531","line":3,"column":9,"nodeType":"500","messageId":"501","endLine":3,"endColumn":14},{"ruleId":"498","severity":1,"message":"532","line":3,"column":16,"nodeType":"500","messageId":"501","endLine":3,"endColumn":21},{"ruleId":"498","severity":1,"message":"533","line":3,"column":23,"nodeType":"500","messageId":"501","endLine":3,"endColumn":29},{"ruleId":"498","severity":1,"message":"520","line":4,"column":8,"nodeType":"500","messageId":"501","endLine":4,"endColumn":12},{"ruleId":"498","severity":1,"message":"537","line":5,"column":8,"nodeType":"500","messageId":"501","endLine":5,"endColumn":19},{"ruleId":"498","severity":1,"message":"513","line":6,"column":8,"nodeType":"500","messageId":"501","endLine":6,"endColumn":23},{"ruleId":"498","severity":1,"message":"572","line":14,"column":7,"nodeType":"500","messageId":"501","endLine":14,"endColumn":12},{"ruleId":"498","severity":1,"message":"531","line":3,"column":9,"nodeType":"500","messageId":"501","endLine":3,"endColumn":14},{"ruleId":"498","severity":1,"message":"532","line":3,"column":16,"nodeType":"500","messageId":"501","endLine":3,"endColumn":21},{"ruleId":"498","severity":1,"message":"533","line":3,"column":23,"nodeType":"500","messageId":"501","endLine":3,"endColumn":29},{"ruleId":"498","severity":1,"message":"537","line":5,"column":8,"nodeType":"500","messageId":"501","endLine":5,"endColumn":19},{"ruleId":"498","severity":1,"message":"540","line":6,"column":8,"nodeType":"500","messageId":"501","endLine":6,"endColumn":19},{"ruleId":"498","severity":1,"message":"573","line":9,"column":8,"nodeType":"500","messageId":"501","endLine":9,"endColumn":22},{"ruleId":"498","severity":1,"message":"535","line":10,"column":8,"nodeType":"500","messageId":"501","endLine":10,"endColumn":15},{"ruleId":"498","severity":1,"message":"516","line":13,"column":13,"nodeType":"500","messageId":"501","endLine":13,"endColumn":20},{"ruleId":"498","severity":1,"message":"524","line":37,"column":7,"nodeType":"500","messageId":"501","endLine":37,"endColumn":15},{"ruleId":"498","severity":1,"message":"574","line":57,"column":7,"nodeType":"500","messageId":"501","endLine":57,"endColumn":14},{"ruleId":"498","severity":1,"message":"575","line":65,"column":7,"nodeType":"500","messageId":"501","endLine":65,"endColumn":16},{"ruleId":"498","severity":1,"message":"576","line":74,"column":7,"nodeType":"500","messageId":"501","endLine":74,"endColumn":13},{"ruleId":"498","severity":1,"message":"577","line":82,"column":7,"nodeType":"500","messageId":"501","endLine":82,"endColumn":10},{"ruleId":"498","severity":1,"message":"578","line":91,"column":9,"nodeType":"500","messageId":"501","endLine":91,"endColumn":17},{"ruleId":"498","severity":1,"message":"579","line":99,"column":9,"nodeType":"500","messageId":"501","endLine":99,"endColumn":20},{"ruleId":"580","severity":1,"message":"581","line":252,"column":10,"nodeType":"582","endLine":252,"endColumn":12,"suggestions":"583"},{"ruleId":"498","severity":1,"message":"550","line":2,"column":8,"nodeType":"500","messageId":"501","endLine":2,"endColumn":12},{"ruleId":"498","severity":1,"message":"502","line":6,"column":8,"nodeType":"500","messageId":"501","endLine":6,"endColumn":14},{"ruleId":"498","severity":1,"message":"531","line":7,"column":9,"nodeType":"500","messageId":"501","endLine":7,"endColumn":14},{"ruleId":"498","severity":1,"message":"532","line":7,"column":16,"nodeType":"500","messageId":"501","endLine":7,"endColumn":21},{"ruleId":"498","severity":1,"message":"533","line":7,"column":23,"nodeType":"500","messageId":"501","endLine":7,"endColumn":29},{"ruleId":"498","severity":1,"message":"520","line":8,"column":8,"nodeType":"500","messageId":"501","endLine":8,"endColumn":12},{"ruleId":"498","severity":1,"message":"510","line":9,"column":8,"nodeType":"500","messageId":"501","endLine":9,"endColumn":13},{"ruleId":"498","severity":1,"message":"584","line":11,"column":5,"nodeType":"500","messageId":"501","endLine":11,"endColumn":12},{"ruleId":"498","severity":1,"message":"569","line":89,"column":9,"nodeType":"500","messageId":"501","endLine":89,"endColumn":14},{"ruleId":"498","severity":1,"message":"570","line":91,"column":7,"nodeType":"500","messageId":"501","endLine":91,"endColumn":9},{"ruleId":"498","severity":1,"message":"571","line":92,"column":7,"nodeType":"500","messageId":"501","endLine":92,"endColumn":10},{"ruleId":"498","severity":1,"message":"585","line":141,"column":10,"nodeType":"500","messageId":"501","endLine":141,"endColumn":22},{"ruleId":"498","severity":1,"message":"586","line":170,"column":5,"nodeType":"500","messageId":"501","endLine":170,"endColumn":14},{"ruleId":"498","severity":1,"message":"587","line":172,"column":5,"nodeType":"500","messageId":"501","endLine":172,"endColumn":10},{"ruleId":"552","severity":1,"message":"567","line":246,"column":15,"nodeType":"554","messageId":"555","endLine":246,"endColumn":17},{"ruleId":"580","severity":1,"message":"588","line":344,"column":6,"nodeType":"582","endLine":344,"endColumn":8,"suggestions":"589"},{"ruleId":"498","severity":1,"message":"550","line":2,"column":8,"nodeType":"500","messageId":"501","endLine":2,"endColumn":12},{"ruleId":"498","severity":1,"message":"502","line":6,"column":8,"nodeType":"500","messageId":"501","endLine":6,"endColumn":14},{"ruleId":"498","severity":1,"message":"531","line":7,"column":9,"nodeType":"500","messageId":"501","endLine":7,"endColumn":14},{"ruleId":"498","severity":1,"message":"532","line":7,"column":16,"nodeType":"500","messageId":"501","endLine":7,"endColumn":21},{"ruleId":"498","severity":1,"message":"533","line":7,"column":23,"nodeType":"500","messageId":"501","endLine":7,"endColumn":29},{"ruleId":"498","severity":1,"message":"520","line":8,"column":8,"nodeType":"500","messageId":"501","endLine":8,"endColumn":12},{"ruleId":"498","severity":1,"message":"510","line":9,"column":8,"nodeType":"500","messageId":"501","endLine":9,"endColumn":13},{"ruleId":"498","severity":1,"message":"590","line":10,"column":10,"nodeType":"500","messageId":"501","endLine":10,"endColumn":29},{"ruleId":"498","severity":1,"message":"591","line":10,"column":31,"nodeType":"500","messageId":"501","endLine":10,"endColumn":60},{"ruleId":"498","severity":1,"message":"569","line":21,"column":9,"nodeType":"500","messageId":"501","endLine":21,"endColumn":14},{"ruleId":"498","severity":1,"message":"570","line":23,"column":7,"nodeType":"500","messageId":"501","endLine":23,"endColumn":9},{"ruleId":"498","severity":1,"message":"571","line":24,"column":7,"nodeType":"500","messageId":"501","endLine":24,"endColumn":10},{"ruleId":"552","severity":1,"message":"553","line":105,"column":14,"nodeType":"554","messageId":"555","endLine":105,"endColumn":16},{"ruleId":"498","severity":1,"message":"592","line":168,"column":7,"nodeType":"500","messageId":"501","endLine":168,"endColumn":14},{"ruleId":"580","severity":1,"message":"593","line":219,"column":6,"nodeType":"582","endLine":219,"endColumn":8,"suggestions":"594"},{"ruleId":"498","severity":1,"message":"595","line":1,"column":17,"nodeType":"500","messageId":"501","endLine":1,"endColumn":23},{"ruleId":"498","severity":1,"message":"550","line":2,"column":8,"nodeType":"500","messageId":"501","endLine":2,"endColumn":12},{"ruleId":"498","severity":1,"message":"531","line":7,"column":9,"nodeType":"500","messageId":"501","endLine":7,"endColumn":14},{"ruleId":"498","severity":1,"message":"532","line":7,"column":16,"nodeType":"500","messageId":"501","endLine":7,"endColumn":21},{"ruleId":"498","severity":1,"message":"533","line":7,"column":23,"nodeType":"500","messageId":"501","endLine":7,"endColumn":29},{"ruleId":"498","severity":1,"message":"520","line":8,"column":8,"nodeType":"500","messageId":"501","endLine":8,"endColumn":12},{"ruleId":"498","severity":1,"message":"510","line":9,"column":8,"nodeType":"500","messageId":"501","endLine":9,"endColumn":13},{"ruleId":"498","severity":1,"message":"584","line":17,"column":5,"nodeType":"500","messageId":"501","endLine":17,"endColumn":12},{"ruleId":"504","severity":1,"message":"505","line":86,"column":5,"nodeType":"506","endLine":86,"endColumn":40},{"ruleId":"498","severity":1,"message":"578","line":91,"column":7,"nodeType":"500","messageId":"501","endLine":91,"endColumn":15},{"ruleId":"498","severity":1,"message":"514","line":114,"column":10,"nodeType":"500","messageId":"501","endLine":114,"endColumn":22},{"ruleId":"504","severity":1,"message":"505","line":119,"column":13,"nodeType":"506","endLine":119,"endColumn":46},{"ruleId":"504","severity":1,"message":"505","line":123,"column":13,"nodeType":"506","endLine":123,"endColumn":46},{"ruleId":"504","severity":1,"message":"505","line":127,"column":13,"nodeType":"506","endLine":127,"endColumn":46},{"ruleId":"556","severity":1,"message":"596","line":204,"column":12,"nodeType":"500","messageId":"558","endLine":204,"endColumn":13},{"ruleId":"498","severity":1,"message":"597","line":263,"column":7,"nodeType":"500","messageId":"501","endLine":263,"endColumn":18},{"ruleId":"498","severity":1,"message":"598","line":320,"column":9,"nodeType":"500","messageId":"501","endLine":320,"endColumn":13},{"ruleId":"556","severity":1,"message":"596","line":364,"column":10,"nodeType":"500","messageId":"558","endLine":364,"endColumn":11},{"ruleId":"580","severity":1,"message":"599","line":373,"column":6,"nodeType":"582","endLine":373,"endColumn":8,"suggestions":"600"},{"ruleId":"498","severity":1,"message":"595","line":1,"column":17,"nodeType":"500","messageId":"501","endLine":1,"endColumn":23},{"ruleId":"498","severity":1,"message":"601","line":2,"column":8,"nodeType":"500","messageId":"501","endLine":2,"endColumn":16},{"ruleId":"498","severity":1,"message":"550","line":3,"column":8,"nodeType":"500","messageId":"501","endLine":3,"endColumn":12},{"ruleId":"498","severity":1,"message":"517","line":5,"column":13,"nodeType":"500","messageId":"501","endLine":5,"endColumn":22},{"ruleId":"498","severity":1,"message":"531","line":9,"column":9,"nodeType":"500","messageId":"501","endLine":9,"endColumn":14},{"ruleId":"498","severity":1,"message":"532","line":9,"column":16,"nodeType":"500","messageId":"501","endLine":9,"endColumn":21},{"ruleId":"498","severity":1,"message":"533","line":9,"column":23,"nodeType":"500","messageId":"501","endLine":9,"endColumn":29},{"ruleId":"498","severity":1,"message":"520","line":10,"column":8,"nodeType":"500","messageId":"501","endLine":10,"endColumn":12},{"ruleId":"498","severity":1,"message":"584","line":17,"column":5,"nodeType":"500","messageId":"501","endLine":17,"endColumn":12},{"ruleId":"498","severity":1,"message":"602","line":30,"column":7,"nodeType":"500","messageId":"501","endLine":30,"endColumn":13},{"ruleId":"498","severity":1,"message":"603","line":36,"column":7,"nodeType":"500","messageId":"501","endLine":36,"endColumn":12},{"ruleId":"498","severity":1,"message":"604","line":42,"column":10,"nodeType":"500","messageId":"501","endLine":42,"endColumn":13},{"ruleId":"498","severity":1,"message":"605","line":130,"column":9,"nodeType":"500","messageId":"501","endLine":130,"endColumn":18},{"ruleId":"498","severity":1,"message":"606","line":165,"column":5,"nodeType":"500","messageId":"501","endLine":165,"endColumn":10},{"ruleId":"580","severity":1,"message":"607","line":277,"column":6,"nodeType":"582","endLine":277,"endColumn":18,"suggestions":"608"},{"ruleId":"498","severity":1,"message":"595","line":1,"column":17,"nodeType":"500","messageId":"501","endLine":1,"endColumn":23},{"ruleId":"498","severity":1,"message":"609","line":1,"column":42,"nodeType":"500","messageId":"501","endLine":1,"endColumn":50},{"ruleId":"498","severity":1,"message":"550","line":2,"column":8,"nodeType":"500","messageId":"501","endLine":2,"endColumn":12},{"ruleId":"498","severity":1,"message":"517","line":4,"column":13,"nodeType":"500","messageId":"501","endLine":4,"endColumn":22},{"ruleId":"498","severity":1,"message":"531","line":7,"column":9,"nodeType":"500","messageId":"501","endLine":7,"endColumn":14},{"ruleId":"498","severity":1,"message":"532","line":7,"column":16,"nodeType":"500","messageId":"501","endLine":7,"endColumn":21},{"ruleId":"498","severity":1,"message":"533","line":7,"column":23,"nodeType":"500","messageId":"501","endLine":7,"endColumn":29},{"ruleId":"498","severity":1,"message":"520","line":8,"column":8,"nodeType":"500","messageId":"501","endLine":8,"endColumn":12},{"ruleId":"498","severity":1,"message":"510","line":11,"column":8,"nodeType":"500","messageId":"501","endLine":11,"endColumn":13},{"ruleId":"498","severity":1,"message":"610","line":13,"column":8,"nodeType":"500","messageId":"501","endLine":13,"endColumn":22},{"ruleId":"498","severity":1,"message":"611","line":86,"column":10,"nodeType":"500","messageId":"501","endLine":86,"endColumn":22},{"ruleId":"552","severity":1,"message":"553","line":192,"column":17,"nodeType":"554","messageId":"555","endLine":192,"endColumn":19},{"ruleId":"552","severity":1,"message":"553","line":194,"column":24,"nodeType":"554","messageId":"555","endLine":194,"endColumn":26},{"ruleId":"552","severity":1,"message":"553","line":196,"column":24,"nodeType":"554","messageId":"555","endLine":196,"endColumn":26},{"ruleId":"556","severity":1,"message":"596","line":202,"column":14,"nodeType":"500","messageId":"558","endLine":202,"endColumn":15},{"ruleId":"552","severity":1,"message":"553","line":204,"column":15,"nodeType":"554","messageId":"555","endLine":204,"endColumn":17},{"ruleId":"552","severity":1,"message":"553","line":206,"column":22,"nodeType":"554","messageId":"555","endLine":206,"endColumn":24},{"ruleId":"552","severity":1,"message":"553","line":208,"column":22,"nodeType":"554","messageId":"555","endLine":208,"endColumn":24},{"ruleId":"498","severity":1,"message":"595","line":1,"column":17,"nodeType":"500","messageId":"501","endLine":1,"endColumn":23},{"ruleId":"498","severity":1,"message":"609","line":1,"column":42,"nodeType":"500","messageId":"501","endLine":1,"endColumn":50},{"ruleId":"498","severity":1,"message":"550","line":2,"column":8,"nodeType":"500","messageId":"501","endLine":2,"endColumn":12},{"ruleId":"498","severity":1,"message":"517","line":4,"column":13,"nodeType":"500","messageId":"501","endLine":4,"endColumn":22},{"ruleId":"498","severity":1,"message":"531","line":7,"column":9,"nodeType":"500","messageId":"501","endLine":7,"endColumn":14},{"ruleId":"498","severity":1,"message":"532","line":7,"column":16,"nodeType":"500","messageId":"501","endLine":7,"endColumn":21},{"ruleId":"498","severity":1,"message":"533","line":7,"column":23,"nodeType":"500","messageId":"501","endLine":7,"endColumn":29},{"ruleId":"498","severity":1,"message":"535","line":9,"column":8,"nodeType":"500","messageId":"501","endLine":9,"endColumn":15},{"ruleId":"498","severity":1,"message":"573","line":10,"column":8,"nodeType":"500","messageId":"501","endLine":10,"endColumn":22},{"ruleId":"498","severity":1,"message":"510","line":11,"column":8,"nodeType":"500","messageId":"501","endLine":11,"endColumn":13},{"ruleId":"498","severity":1,"message":"610","line":13,"column":8,"nodeType":"500","messageId":"501","endLine":13,"endColumn":22},{"ruleId":"498","severity":1,"message":"612","line":15,"column":7,"nodeType":"500","messageId":"501","endLine":15,"endColumn":17},{"ruleId":"498","severity":1,"message":"613","line":22,"column":7,"nodeType":"500","messageId":"501","endLine":22,"endColumn":14},{"ruleId":"498","severity":1,"message":"614","line":27,"column":7,"nodeType":"500","messageId":"501","endLine":27,"endColumn":15},{"ruleId":"498","severity":1,"message":"615","line":33,"column":7,"nodeType":"500","messageId":"501","endLine":33,"endColumn":18},{"ruleId":"498","severity":1,"message":"577","line":37,"column":7,"nodeType":"500","messageId":"501","endLine":37,"endColumn":10},{"ruleId":"498","severity":1,"message":"616","line":56,"column":10,"nodeType":"500","messageId":"501","endLine":56,"endColumn":17},{"ruleId":"498","severity":1,"message":"611","line":67,"column":10,"nodeType":"500","messageId":"501","endLine":67,"endColumn":22},{"ruleId":"552","severity":1,"message":"553","line":90,"column":13,"nodeType":"554","messageId":"555","endLine":90,"endColumn":15},{"ruleId":"552","severity":1,"message":"553","line":95,"column":20,"nodeType":"554","messageId":"555","endLine":95,"endColumn":22},{"ruleId":"556","severity":1,"message":"596","line":97,"column":16,"nodeType":"500","messageId":"558","endLine":97,"endColumn":17},{"ruleId":"552","severity":1,"message":"553","line":100,"column":20,"nodeType":"554","messageId":"555","endLine":100,"endColumn":22},{"ruleId":"556","severity":1,"message":"596","line":102,"column":16,"nodeType":"500","messageId":"558","endLine":102,"endColumn":17},{"ruleId":"498","severity":1,"message":"595","line":1,"column":17,"nodeType":"500","messageId":"501","endLine":1,"endColumn":23},{"ruleId":"498","severity":1,"message":"609","line":1,"column":42,"nodeType":"500","messageId":"501","endLine":1,"endColumn":50},{"ruleId":"498","severity":1,"message":"601","line":2,"column":8,"nodeType":"500","messageId":"501","endLine":2,"endColumn":16},{"ruleId":"498","severity":1,"message":"550","line":3,"column":8,"nodeType":"500","messageId":"501","endLine":3,"endColumn":12},{"ruleId":"498","severity":1,"message":"517","line":5,"column":13,"nodeType":"500","messageId":"501","endLine":5,"endColumn":22},{"ruleId":"498","severity":1,"message":"531","line":9,"column":9,"nodeType":"500","messageId":"501","endLine":9,"endColumn":14},{"ruleId":"498","severity":1,"message":"532","line":9,"column":16,"nodeType":"500","messageId":"501","endLine":9,"endColumn":21},{"ruleId":"498","severity":1,"message":"533","line":9,"column":23,"nodeType":"500","messageId":"501","endLine":9,"endColumn":29},{"ruleId":"498","severity":1,"message":"520","line":10,"column":8,"nodeType":"500","messageId":"501","endLine":10,"endColumn":12},{"ruleId":"498","severity":1,"message":"584","line":15,"column":5,"nodeType":"500","messageId":"501","endLine":15,"endColumn":12},{"ruleId":"498","severity":1,"message":"602","line":28,"column":7,"nodeType":"500","messageId":"501","endLine":28,"endColumn":13},{"ruleId":"498","severity":1,"message":"603","line":34,"column":7,"nodeType":"500","messageId":"501","endLine":34,"endColumn":12},{"ruleId":"498","severity":1,"message":"604","line":40,"column":10,"nodeType":"500","messageId":"501","endLine":40,"endColumn":13},{"ruleId":"498","severity":1,"message":"605","line":112,"column":9,"nodeType":"500","messageId":"501","endLine":112,"endColumn":18},{"ruleId":"498","severity":1,"message":"606","line":141,"column":5,"nodeType":"500","messageId":"501","endLine":141,"endColumn":10},{"ruleId":"580","severity":1,"message":"617","line":251,"column":6,"nodeType":"582","endLine":251,"endColumn":8,"suggestions":"618"},{"ruleId":"498","severity":1,"message":"595","line":1,"column":17,"nodeType":"500","messageId":"501","endLine":1,"endColumn":23},{"ruleId":"498","severity":1,"message":"619","line":1,"column":25,"nodeType":"500","messageId":"501","endLine":1,"endColumn":40},{"ruleId":"498","severity":1,"message":"550","line":2,"column":8,"nodeType":"500","messageId":"501","endLine":2,"endColumn":12},{"ruleId":"498","severity":1,"message":"518","line":3,"column":8,"nodeType":"500","messageId":"501","endLine":3,"endColumn":26},{"ruleId":"498","severity":1,"message":"620","line":21,"column":10,"nodeType":"500","messageId":"501","endLine":21,"endColumn":21},{"ruleId":"504","severity":1,"message":"505","line":27,"column":5,"nodeType":"506","endLine":27,"endColumn":40},{"ruleId":"498","severity":1,"message":"621","line":43,"column":7,"nodeType":"500","messageId":"501","endLine":43,"endColumn":24},{"ruleId":"504","severity":1,"message":"505","line":53,"column":13,"nodeType":"506","endLine":53,"endColumn":46},{"ruleId":"504","severity":1,"message":"505","line":57,"column":13,"nodeType":"506","endLine":57,"endColumn":46},{"ruleId":"504","severity":1,"message":"505","line":61,"column":13,"nodeType":"506","endLine":61,"endColumn":46},{"ruleId":"504","severity":1,"message":"505","line":70,"column":13,"nodeType":"506","endLine":70,"endColumn":46},{"ruleId":"498","severity":1,"message":"622","line":2,"column":10,"nodeType":"500","messageId":"501","endLine":2,"endColumn":17},{"ruleId":"498","severity":1,"message":"623","line":3,"column":10,"nodeType":"500","messageId":"501","endLine":3,"endColumn":22},{"ruleId":"498","severity":1,"message":"503","line":4,"column":10,"nodeType":"500","messageId":"501","endLine":4,"endColumn":25},{"ruleId":"498","severity":1,"message":"507","line":5,"column":28,"nodeType":"500","messageId":"501","endLine":5,"endColumn":43},{"ruleId":"498","severity":1,"message":"531","line":3,"column":9,"nodeType":"500","messageId":"501","endLine":3,"endColumn":14},{"ruleId":"498","severity":1,"message":"532","line":3,"column":16,"nodeType":"500","messageId":"501","endLine":3,"endColumn":21},{"ruleId":"498","severity":1,"message":"533","line":3,"column":23,"nodeType":"500","messageId":"501","endLine":3,"endColumn":29},{"ruleId":"498","severity":1,"message":"537","line":5,"column":8,"nodeType":"500","messageId":"501","endLine":5,"endColumn":19},{"ruleId":"498","severity":1,"message":"513","line":6,"column":8,"nodeType":"500","messageId":"501","endLine":6,"endColumn":23},{"ruleId":"498","severity":1,"message":"512","line":7,"column":8,"nodeType":"500","messageId":"501","endLine":7,"endColumn":23},{"ruleId":"498","severity":1,"message":"624","line":9,"column":7,"nodeType":"500","messageId":"501","endLine":9,"endColumn":11},{"ruleId":"498","severity":1,"message":"572","line":14,"column":7,"nodeType":"500","messageId":"501","endLine":14,"endColumn":12},{"ruleId":"498","severity":1,"message":"523","line":23,"column":7,"nodeType":"500","messageId":"501","endLine":23,"endColumn":12},{"ruleId":"498","severity":1,"message":"508","line":3,"column":8,"nodeType":"500","messageId":"501","endLine":3,"endColumn":11},{"ruleId":"498","severity":1,"message":"509","line":4,"column":8,"nodeType":"500","messageId":"501","endLine":4,"endColumn":14},{"ruleId":"498","severity":1,"message":"503","line":7,"column":10,"nodeType":"500","messageId":"501","endLine":7,"endColumn":25},{"ruleId":"498","severity":1,"message":"510","line":9,"column":8,"nodeType":"500","messageId":"501","endLine":9,"endColumn":13},{"ruleId":"498","severity":1,"message":"516","line":10,"column":13,"nodeType":"500","messageId":"501","endLine":10,"endColumn":20},{"ruleId":"498","severity":1,"message":"517","line":11,"column":13,"nodeType":"500","messageId":"501","endLine":11,"endColumn":22},{"ruleId":"498","severity":1,"message":"518","line":12,"column":8,"nodeType":"500","messageId":"501","endLine":12,"endColumn":26},{"ruleId":"498","severity":1,"message":"519","line":13,"column":10,"nodeType":"500","messageId":"501","endLine":13,"endColumn":15},{"ruleId":"498","severity":1,"message":"520","line":14,"column":8,"nodeType":"500","messageId":"501","endLine":14,"endColumn":12},{"ruleId":"498","severity":1,"message":"499","line":15,"column":8,"nodeType":"500","messageId":"501","endLine":15,"endColumn":15},{"ruleId":"498","severity":1,"message":"625","line":17,"column":7,"nodeType":"500","messageId":"501","endLine":17,"endColumn":11},{"ruleId":"498","severity":1,"message":"545","line":24,"column":7,"nodeType":"500","messageId":"501","endLine":24,"endColumn":12},{"ruleId":"498","severity":1,"message":"521","line":30,"column":7,"nodeType":"500","messageId":"501","endLine":30,"endColumn":13},{"ruleId":"498","severity":1,"message":"522","line":40,"column":7,"nodeType":"500","messageId":"501","endLine":40,"endColumn":11},{"ruleId":"498","severity":1,"message":"523","line":51,"column":7,"nodeType":"500","messageId":"501","endLine":51,"endColumn":12},{"ruleId":"498","severity":1,"message":"524","line":57,"column":7,"nodeType":"500","messageId":"501","endLine":57,"endColumn":15},{"ruleId":"498","severity":1,"message":"525","line":64,"column":9,"nodeType":"500","messageId":"501","endLine":64,"endColumn":20},"no-native-reassign",["626"],"no-negated-in-lhs",["627"],"@typescript-eslint/no-unused-vars","'SideBar' is defined but never used.","Identifier","unusedVar","'styled' is defined but never used.","'FontAwesomeIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReactSeoLogoSvg' is defined but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'axios' is defined but never used.","'CommunityStats' is defined but never used.","'IndividualStats' is defined but never used.","'MyContributions' is defined but never used.","'CustomLegend' is defined but never used.","'Categories' is defined but never used.","'am4core' is defined but never used.","'am4charts' is defined but never used.","'am4themes_animated' is defined but never used.","'Tweet' is defined but never used.","'Card' is defined but never used.","'Sticky' is assigned a value but never used.","'Test' is assigned a value but never used.","'Title' is assigned a value but never used.","'Subtitle' is assigned a value but never used.","'featureList' is assigned a value but never used.","'CSVToArray' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'space' is defined but never used.","'color' is defined but never used.","'layout' is defined but never used.","'TweetsWaffle' is defined but never used.","'Popover' is defined but never used.","'Overlay' is defined but never used.","'CardColumns' is defined but never used.","'MyWaffle' is defined but never used.","'MyDownstream' is defined but never used.","'WaffleChart' is defined but never used.","'LineChart' is defined but never used.","'BubbleChart' is defined but never used.","'StickyBox' is defined but never used.","'Poptitle' is assigned a value but never used.","'Space' is assigned a value but never used.","'vizpop' is assigned a value but never used.","'linepop' is assigned a value but never used.","'Question' is assigned a value but never used.","'test' is assigned a value but never used.","'logo' is defined but never used.","'r3' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-redeclare","'x_str' is already defined.","redeclared","'y_str' is already defined.","'WaffleProportion' is defined but never used.","'chart2' is assigned a value but never used.","'coms' is assigned a value but never used.","no-new-wrappers","Do not use Number as a constructor.","NewExpression","noConstructor","Expected '!==' and instead saw '!='.","'r2' is assigned a value but never used.","'chart' is assigned a value but never used.","'rs' is assigned a value but never used.","'nrs' is assigned a value but never used.","'Right' is assigned a value but never used.","'OverlayTrigger' is defined but never used.","'Retweet' is assigned a value but never used.","'tweetwind' is assigned a value but never used.","'square' is assigned a value but never used.","'Pop' is assigned a value but never used.","'tweetpop' is assigned a value but never used.","'roundButton' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["628"],"'user_id' is assigned a value but never used.","'createSeries' is defined but never used.","'nums_list' is assigned a value but never used.","'denom' is assigned a value but never used.","React Hook useLayoutEffect has missing dependencies: 'props.data', 'props.divid', 'props.legend_pos', and 'props.scheme'. Either include them or remove the dependency array.",["629"],"'ContactlessOutlined' is defined but never used.","'LocalConvenienceStoreOutlined' is defined but never used.","'series2' is assigned a value but never used.","React Hook useLayoutEffect has missing dependencies: 'props.data', 'props.dv', 'props.id', 'props.med', and 'props.yaxis'. Either include them or remove the dependency array.",["630"],"'useRef' is defined but never used.","'i' is already defined.","'series_dict' is assigned a value but never used.","'info' is assigned a value but never used.","React Hook useLayoutEffect has missing dependencies: 'props.cols', 'props.data', 'props.denom', 'props.divid', 'props.rows', and 'props.series_dict'. Either include them or remove the dependency array.",["631"],"'ReactDom' is defined but never used.","'rcheck' is assigned a value but never used.","'Check' is assigned a value but never used.","'Pop' is defined but never used.","'full_data' is assigned a value but never used.","'data0' is assigned a value but never used.","React Hook useLayoutEffect has missing dependencies: 'props.data', 'props.divid', and 'series_dict'. Either include them or remove the dependency array.",["632"],"'useState' is defined but never used.","'PopoverContent' is defined but never used.","'organizeData' is defined but never used.","'TrendTable' is assigned a value but never used.","'TrendTd' is assigned a value but never used.","'TrendNum' is assigned a value but never used.","'TrendTrGray' is assigned a value but never used.","'compare' is defined but never used.","React Hook useLayoutEffect has missing dependencies: 'props.com', 'props.data', 'props.divid', and 'series_dict'. Either include them or remove the dependency array.",["633"],"'useLayoutEffect' is defined but never used.","'toolTrigger' is defined but never used.","'pract_explanation' is assigned a value but never used.","'NavLink' is defined but never used.","'RoutesConfig' is defined but never used.","'Left' is assigned a value but never used.","'Grid' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"634","fix":"635"},{"desc":"636","fix":"637"},{"desc":"638","fix":"639"},{"desc":"640","fix":"641"},{"desc":"642","fix":"643"},{"desc":"644","fix":"645"},"Update the dependencies array to be: [id]",{"range":"646","text":"647"},"Update the dependencies array to be: [props.data, props.divid, props.legend_pos, props.scheme]",{"range":"648","text":"649"},"Update the dependencies array to be: [props.data, props.dv, props.id, props.med, props.yaxis]",{"range":"650","text":"651"},"Update the dependencies array to be: [props.cols, props.data, props.denom, props.divid, props.rows, props.series_dict]",{"range":"652","text":"653"},"Update the dependencies array to be: [activeComs, props.data, props.divid, series_dict]",{"range":"654","text":"655"},"Update the dependencies array to be: [props.com, props.data, props.divid, series_dict]",{"range":"656","text":"657"},[6626,6628],"[id]",[8546,8548],"[props.data, props.divid, props.legend_pos, props.scheme]",[5272,5274],"[props.data, props.dv, props.id, props.med, props.yaxis]",[9342,9344],"[props.cols, props.data, props.denom, props.divid, props.rows, props.series_dict]",[7425,7437],"[activeComs, props.data, props.divid, series_dict]",[6661,6663],"[props.com, props.data, props.divid, series_dict]"]