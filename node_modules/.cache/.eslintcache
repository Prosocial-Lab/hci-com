[{"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\index.tsx":"1","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\serviceWorker.ts":"2","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\config\\fa.config.ts":"3","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\App.tsx":"4","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\config\\routes.config.ts":"5","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\Layout.tsx":"6","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\withTracker.tsx":"7","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\index.ts":"8","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\index.ts":"9","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\MetaInfo.tsx":"10","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\Footer.tsx":"11","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\BackToTop.tsx":"12","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\NavBar.tsx":"13","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\NotFound.tsx":"14","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\index.ts":"15","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\About\\index.ts":"16","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\Home.tsx":"17","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\About\\About.tsx":"18","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\config\\features.config.ts":"19","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\index.ts":"20","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\CommunityStats.tsx":"21","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\IndividualStats.tsx":"22","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\TweetsWaffle.tsx":"23","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\MyWaffle.tsx":"24","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\MyContributions.tsx":"25","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\MyDownstream.tsx":"26","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\Individual.tsx":"27","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\MyTweets.tsx":"28","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\WaffleChart.tsx":"29","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\LineChart.tsx":"30"},{"size":606,"mtime":1617049482669,"results":"31","hashOfConfig":"32"},{"size":5344,"mtime":1614571602420,"results":"33","hashOfConfig":"32"},{"size":493,"mtime":1614571602411,"results":"34","hashOfConfig":"32"},{"size":759,"mtime":1614571602402,"results":"35","hashOfConfig":"32"},{"size":1045,"mtime":1614571602412,"results":"36","hashOfConfig":"32"},{"size":275,"mtime":1614571602403,"results":"37","hashOfConfig":"32"},{"size":919,"mtime":1614571602421,"results":"38","hashOfConfig":"32"},{"size":98,"mtime":1614571602419,"results":"39","hashOfConfig":"32"},{"size":249,"mtime":1614571602410,"results":"40","hashOfConfig":"32"},{"size":495,"mtime":1614571602409,"results":"41","hashOfConfig":"32"},{"size":1027,"mtime":1614571602409,"results":"42","hashOfConfig":"32"},{"size":2228,"mtime":1614571602409,"results":"43","hashOfConfig":"32"},{"size":1216,"mtime":1614571602410,"results":"44","hashOfConfig":"32"},{"size":965,"mtime":1614571602410,"results":"45","hashOfConfig":"32"},{"size":50,"mtime":1614571602419,"results":"46","hashOfConfig":"32"},{"size":53,"mtime":1614571602413,"results":"47","hashOfConfig":"32"},{"size":7553,"mtime":1617061302997,"results":"48","hashOfConfig":"32"},{"size":3480,"mtime":1614571602412,"results":"49","hashOfConfig":"32"},{"size":777,"mtime":1614571602411,"results":"50","hashOfConfig":"32"},{"size":565,"mtime":1614574821296,"results":"51","hashOfConfig":"32"},{"size":2639,"mtime":1615925449741,"results":"52","hashOfConfig":"32"},{"size":5976,"mtime":1617061252997,"results":"53","hashOfConfig":"32"},{"size":9340,"mtime":1614575315179,"results":"54","hashOfConfig":"32"},{"size":6945,"mtime":1614571602417,"results":"55","hashOfConfig":"32"},{"size":3639,"mtime":1617055047074,"results":"56","hashOfConfig":"32"},{"size":5287,"mtime":1614571602417,"results":"57","hashOfConfig":"32"},{"size":785,"mtime":1614571602416,"results":"58","hashOfConfig":"32"},{"size":5843,"mtime":1617050939446,"results":"59","hashOfConfig":"32"},{"size":7955,"mtime":1614574231715,"results":"60","hashOfConfig":"32"},{"size":3635,"mtime":1616973586197,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"kmprk5",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"64"},"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\index.tsx",[],["137","138"],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\serviceWorker.ts",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\config\\fa.config.ts",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\App.tsx",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\config\\routes.config.ts",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\Layout.tsx",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\withTracker.tsx",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\index.ts",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\index.ts",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\MetaInfo.tsx",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\Footer.tsx",["139","140","141"],"import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Footer: React.FC = () => (\r\n  <footer className='footer'>\r\n    {/* <div className='buttons'>\r\n      <a\r\n        target='_blank'\r\n        aria-label='GitHub'\r\n        rel='noopener noreferrer'\r\n        className='button is-medium'\r\n        href='https://github.com/based-ghost'\r\n      >\r\n        <FontAwesomeIcon icon={['fab', 'github']} />\r\n      </a>\r\n      <a\r\n        href='#/'\r\n        aria-label='Twitter'\r\n        className='button is-medium'\r\n      >\r\n        <FontAwesomeIcon icon={['fab', 'twitter']} />\r\n      </a>\r\n      <a\r\n        href='#/'\r\n        aria-label='Medium'\r\n        className='button is-medium'\r\n      >\r\n        <FontAwesomeIcon icon={['fab', 'medium-m']} />\r\n      </a>\r\n    </div> */}\r\n    <div className='content'>\r\n      <img src = \"hci-com/uwcse.png\" width= \"350\"></img>\r\n      <img src = \"hci-com/uwhcde.png\" width= \"300\"></img>\r\n    </div>\r\n\r\n\r\n\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\BackToTop.tsx",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\NavBar.tsx",["142","143"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { RoutesConfig } from '../config/routes.config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { ReactComponent as ReactSeoLogoSvg } from '../assets/img/ReactSeoLogo.svg';\r\n\r\nconst NavBar: React.FC = () => (\r\n  <nav\r\n    role='navigation'\r\n    className='navbar'\r\n    aria-label='main navigation'\r\n  >\r\n    <div className='navbar-wrapper'>\r\n      <div className='brand-wrapper'>\r\n        Insert Logo Here\r\n      </div>\r\n      <div className='navbar-routes'>\r\n        <NavLink\r\n          className='navbar-item'\r\n          to={RoutesConfig.Home.path}\r\n          exact={RoutesConfig.Home.exact}\r\n          activeClassName={RoutesConfig.Home.activeClassName}\r\n        >\r\n          <span>{RoutesConfig.Home.displayName}</span>\r\n        </NavLink>\r\n        <NavLink\r\n          className='navbar-item'\r\n          to={RoutesConfig.About.path}\r\n          exact={RoutesConfig.About.exact}\r\n          activeClassName={RoutesConfig.About.activeClassName}\r\n        >\r\n          <span>{RoutesConfig.About.displayName}</span>\r\n        </NavLink>\r\n      \r\n      </div>\r\n    </div>\r\n  </nav>\r\n);\r\n\r\nexport default NavBar;\r\n","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\components\\NotFound.tsx",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\index.ts",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\About\\index.ts",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\Home.tsx",["144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161"],"import React, { useMemo } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { MetaInfo } from '../../components';\r\nimport { RoutesConfig } from '../../config/routes.config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { FeatureInfoConfig, FeatureInfo } from '../../config/features.config';\r\nimport axios from 'axios'\r\nimport { CommunityStats, Individual, IndividualStats, MyContributions, MyTweets} from './components';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport { Tweet} from 'react-twitter-widgets'\r\n\r\nconst Home: React.FC = () => {\r\n  const featureList = useMemo<FeatureInfo[]>(() => {\r\n    return Object.keys(FeatureInfoConfig).map((key) => FeatureInfoConfig[key]);\r\n  }, []);\r\n\r\n  const sample = './data/sample.csv';\r\n\r\n  var x = 2\r\n  x = x + 5\r\n\r\n  var user_id = 319005485 //This is Keri's twitter\r\n\r\n  //The axios statements below collect summary data from the server (server.js)\r\n\r\n  //user\r\n  var u = 0\r\n  //community data over time\r\n  var com = 0\r\n  //user data (snapshots) over time\r\n  var snaps = 0\r\n  axios\r\n      .get(`http://localhost:4001/twitter/userWhereID/${user_id}`)\r\n      .then(response => {\r\n        // Update the books state\r\n        u = response.data;\r\n        //setBooks(response.data)\r\n\r\n        // Update loading state\r\n        //setLoading(false)\r\n      })\r\n      .catch(error => console.error(`There was an error retrieving the user list: ${error}`))\r\n\r\n  \r\n  axios\r\n      .get(`http://localhost:4001/twitter/communityAll`)\r\n      .then(response => {\r\n        // Update the books state\r\n        com = response.data;\r\n        //setBooks(response.data)\r\n\r\n        // Update loading state\r\n        //setLoading(false)\r\n      })\r\n      .catch(error => console.error(`There was an error retrieving the user list: ${error}`))\r\n\r\n  axios\r\n      .get(`http://localhost:4001/twitter/snapshotsWhereID/${user_id}`)\r\n      .then(response => {\r\n        // Update the books state\r\n        snaps = response.data;\r\n        //setBooks(response.data)\r\n\r\n        // Update loading state\r\n        //setLoading(false)\r\n      })\r\n      .catch(error => console.error(`There was an error retrieving the user list: ${error}`))\r\n\r\n  function CSVToArray( strData, strDelimiter ){\r\n    // Check to see if the delimiter is defined. If not,\r\n    // then default to comma.\r\n    strDelimiter = (strDelimiter || \",\");\r\n\r\n    // Create a regular expression to parse the CSV values.\r\n    var objPattern = new RegExp(\r\n        (\r\n            // Delimiters.\r\n            \"(\\\\\" + strDelimiter + \"|\\\\r?\\\\n|\\\\r|^)\" +\r\n\r\n            // Quoted fields.\r\n            \"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" +\r\n\r\n            // Standard fields.\r\n            \"([^\\\"\\\\\" + strDelimiter + \"\\\\r\\\\n]*))\"\r\n        ),\r\n        \"gi\"\r\n        );\r\n\r\n\r\n    // Create an array to hold our data. Give the array\r\n    // a default empty first row.\r\n    var arrData = [[]];\r\n\r\n    // Create an array to hold our individual pattern\r\n    // matching groups.\r\n    var arrMatches = null;\r\n\r\n\r\n    // Keep looping over the regular expression matches\r\n    // until we can no longer find a match.\r\n    while (arrMatches = objPattern.exec( strData )){\r\n\r\n        // Get the delimiter that was found.\r\n        var strMatchedDelimiter = arrMatches[ 1 ];\r\n\r\n        // Check to see if the given delimiter has a length\r\n        // (is not the start of string) and if it matches\r\n        // field delimiter. If id does not, then we know\r\n        // that this delimiter is a row delimiter.\r\n        if (\r\n            strMatchedDelimiter.length &&\r\n            strMatchedDelimiter !== strDelimiter\r\n            ){\r\n\r\n            // Since we have reached a new row of data,\r\n            // add an empty row to our data array.\r\n            arrData.push( [] );\r\n\r\n        }\r\n\r\n        var strMatchedValue;\r\n\r\n        // Now that we have our delimiter out of the way,\r\n        // let's check to see which kind of value we\r\n        // captured (quoted or unquoted).\r\n        if (arrMatches[ 2 ]){\r\n\r\n            // We found a quoted value. When we capture\r\n            // this value, unescape any double quotes.\r\n            strMatchedValue = arrMatches[ 2 ].replace(\r\n                new RegExp( \"\\\"\\\"\", \"g\" ),\r\n                \"\\\"\"\r\n                );\r\n\r\n        } else {\r\n\r\n            // We found a non-quoted value.\r\n            strMatchedValue = arrMatches[ 3 ];\r\n\r\n        }\r\n\r\n\r\n        // Now that we have our value string, let's add\r\n        // it to the data array.\r\n        arrData[ arrData.length - 1 ].push( strMatchedValue );\r\n    }\r\n\r\n    // Return the parsed data.\r\n    return( arrData );\r\n}\r\n\r\n  return (\r\n    <div className='view-wrapper'>\r\n      <MetaInfo {...RoutesConfig.Home.metaInfo} />\r\n      \r\n      <section className='container dashboard-content'>\r\n        <div className='columns'>\r\n          <div className='column'>\r\n            <p className='title'>HCI COM</p>\r\n            <p className='subtitle'>Twitter Science Communication Research</p>\r\n            <div className='content'>\r\n            <p>\r\n            This site is intended to show the reach of the HCI research community on Twitter, as well as to provide personal analytics to help individuals learn more about their audiences and make the most of\r\n            the platform. The first section shows the current reach and growth of the HCI community, to show the magnitude of activity and the number of non-researchers following members of the community. \r\n            <br/> \r\n\r\n            As you scroll down, you can see your personal analytics. By checking out your current followers and average \"downstream\" audience (those exposed to your tweets via retweets), you can see learn whether\r\n            your tweets are reaching users outside the research community. If so, it may be worth thinking about whether you should tailor your tweets to non-research audiences. In the same section, you can see\r\n            how often you've linked to research papers and blog posts across various hosting sites. By promoting your work and others, you can help highlight the important work being done in our community. \r\n            <br/>\r\n\r\n            At the bottom of the page, you can see the downstream audiences for some of your reason tweets. If you've tweeted about research you've done, or a perspective on an important issue, or a call for \r\n            participants, or anything else, you can see how many people were potentially exposed. \r\n\r\n            </p>\r\n\r\n            {/* <Tweet tweetId=\"841418541026877441\" options={{ width: \"200\" }}/> */}\r\n            </div>\r\n          </div>\r\n          <div className = 'column'>\r\n            <img src = \"hci-com/graph.png\"></img>\r\n          </div>\r\n        </div>\r\n\r\n        <CommunityStats/>\r\n        {/* <Researchers/>\r\n        <IndividualStats/>\r\n        <MyContributions/> */}\r\n        <Individual/>\r\n        <MyTweets/>\r\n\r\n        <div className='columns'>\r\n          <div className='column'>\r\n            <p className='title'>HCI COM</p>\r\n            <div className='content'>\r\n            HAVE A NICE CALL TO ACTION HERE ABOUT JOINING THE HCI COM COMMUNITY POOL – WANT TO SEE MORE? STAY UP TO DATE? BE A PART OF THE COMMUNITY TO SEE YOUR STATS IN THE COMMUNITY INFORMATION, SHARE TO INFORM YOUR COMMUNITY\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\About\\About.tsx",["162"],"import React from 'react';\r\nimport { MetaInfo } from '../../components';\r\nimport { RoutesConfig } from '../../config/routes.config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst About: React.FC = () => (\r\n  <div className='container view-wrapper'>\r\n    <section className = 'container dashboard-content'>\r\n    <MetaInfo {...RoutesConfig.About.metaInfo} />\r\n    {/* { <div className='tile is-parent is-8 is-vertical is-notification-tile'>\r\n      <div className='notification tile is-child is-primary pageSlideDown-animation'>\r\n        <div>\r\n          <FontAwesomeIcon icon='info-circle' size='2x' />\r\n          <span className='title'>About Page</span>\r\n        </div>\r\n        <p className='subtitle'>Very interesting information may go here.</p>\r\n      </div>\r\n    </div> } */}\r\n    <div className='columns'>\r\n      <div className='column'>\r\n        <p className='title'>About the Project</p>\r\n        <div className='content'>\r\n          Lorem ipsum dolor sit amet, alia appareat usu id, has legere facilis\r\n          in. Nam inani malorum epicuri id, illud eleifend reformidans nec cu.\r\n          Stet meis rebum quo an, ad recusabo praesent reprimique duo, ne\r\n          delectus expetendis philosophia nam. Mel lorem recusabo ex, vim\r\n          congue facilisis eu, id vix oblique mentitum. Vide aeterno duo ei.\r\n          Qui ne urbanitas conceptam deseruisse, commune philosophia eos no.\r\n          Id ullum reprimique qui, vix ei malorum assueverit contentiones. Nec\r\n          facilis dignissim efficiantur ad, tantas tempor nam in. Per feugait\r\n          atomorum ut. Novum appareat ei usu, an usu omnium concludaturque. Et\r\n          nam latine mentitum, impedit explicari ullamcorper ut est, vis ipsum\r\n          viderer ei. Porro essent eu per, ut tantas dissentias vim. Dicant\r\n          regione argumentum vis id, adipisci accusata postulant at vix.\r\n          Adipisci vituperata ea duo, eu summo detracto mei, et per option\r\n          periculis. Eos laudem vivendo ex.\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <hr/>\r\n  \r\n    <div className = 'columns'>\r\n      <div className='column'>\r\n      <p className = 'title'>About the Team</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div className='columns'>\r\n      <div className='column'>\r\n        <p className='subtitle'>Spencer Williams</p>\r\n        <div className='content'>\r\n          PhD Student <br/>\r\n          UW Human Centered Design and Engineering\r\n        </div>\r\n      </div>\r\n      <div className='column'>\r\n        <p className='subtitle'>Gary Hsieh</p>\r\n        <div className='content'>\r\n          Associate Professor <br/>\r\n          UW Human Centered Design and Engineering\r\n        </div>\r\n      </div>\r\n      <div className='column'>\r\n        <p className='subtitle'>Katharina Reinecke</p>\r\n        <div className='content'>\r\n         Associate Professor <br/>\r\n         UW Computer Science and Engineering\r\n        </div>\r\n      </div>\r\n      <div className='column'>\r\n        <p className='subtitle'>Keri Mallari</p>\r\n        <div className='content'>\r\n          PhD Student <br/>\r\n          UW Human Centered Design and Engineering\r\n        </div>\r\n      </div>\r\n      <div className='column'>\r\n        <p className='subtitle'>Carol Lei</p>\r\n        <div className='content'>\r\n          Undergraduate Student <br/>\r\n          UW Human Centered Design and Engineering\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  </div>\r\n);\r\n\r\nexport default About;\r\n","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\config\\features.config.ts",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\index.ts",[],"C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\CommunityStats.tsx",["163","164","165","166","167","168"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport {TweetsWaffle} from \"../components\";\r\nimport WaffleChart from './WaffleChart';\r\nimport LineChart from './LineChart';\r\nimport axios from 'axios';\r\n\r\nconst Title = styled.p`\r\n    &&& {\r\n    font-size: 30px;\r\n    font-weight:bold;\r\n}`\r\n\r\nconst Subtitle = styled.p`\r\n    &&& {\r\n    padding: 1em;\r\n    font-size: 24px;\r\n}`\r\n    \r\n\r\nfunction CommunityStats(props) {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [snaps, setSnaps] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n        .get(`http://localhost:4001/twitter/communityAll`)\r\n        .then(response => {\r\n          setSnaps(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch(error => console.error(`There was an error retrieving the retweets list: ${error}`));\r\n      }, []);\r\n\r\n      if (isLoading) {\r\n        return <div>\r\n        <Card>\r\n            <Title>My Tweets</Title>\r\n            <p>Loading...</p>\r\n        </Card>\r\n        </div>\r\n      }\r\n\r\n      return(\r\n\r\n<div>\r\n    <Card style ={{padding:\"3em\"}}>\r\n        <Title>A look at the HCI Research Community on Twitter</Title>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Subtitle>Community Followers</Subtitle>\r\n                    <WaffleChart divid = \"communityfollow\" data = {snaps[snaps.length - 1]} r = {snaps[snaps.length - 1]['researchers']} n = {snaps[snaps.length - 1]['non_researchers']} />\r\n                    \r\n                </div>\r\n                <div className='column'>\r\n                    <Subtitle>Tweet Content</Subtitle>\r\n                    <TweetsWaffle/>\r\n                </div>\r\n            </div>\r\n\r\n            <br/>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Subtitle>Follower Growth</Subtitle>\r\n                    <LineChart data = {snaps} id = {\"comline\"} dv = \"total_followers\" yaxis = \"Followers\" />\r\n                </div>\r\n                <div className='column'>\r\n                    <Subtitle>Total Tweets</Subtitle>\r\n                    <LineChart data = {snaps} id = {\"tline\"} dv = \"total_tweets\" yaxis = \"Tweets\"/>\r\n                </div>\r\n            </div>\r\n    </Card>\r\n    <br/>\r\n</div>\r\n);\r\n}\r\n\r\n\r\nexport default CommunityStats;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\IndividualStats.tsx",["169","170","171","172","173","174","175"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport Overlay from 'react-bootstrap/Overlay'\r\nimport Button from 'react-bootstrap/Button'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport MyWaffle from './MyWaffle';\r\nimport MyDownstream from './MyDownstream';\r\nimport WaffleChart from './WaffleChart';\r\nimport axios from 'axios';\r\nimport LineChart from './LineChart';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n//var id = \"634739719\"\r\nvar id = \"1293416714923683841\"\r\n\r\nconst Title = styled.p`\r\n    &&& {\r\n    font-size: 30px;\r\n    font-weight:bold;\r\n}`\r\n\r\nconst Subtitle = styled.p`\r\n    &&& {\r\n    padding: 1em;\r\n    font-size: 24px;\r\n}`\r\n\r\nconst vizpop = {\r\n    width: '425px',\r\n    maxWidth: 'none'\r\n  };\r\n    \r\n\r\nfunction IndividualStats(props) {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [snaps, setSnaps] = useState([]);\r\n\r\n    const [isLoading2, setLoading2] = useState(true);\r\n    const [med, setMed] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n        .get(`http://localhost:4001/twitter/snapshotsWhereID/${id}`)\r\n        .then(response => {\r\n          setSnaps(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch(error => console.error(`There was an error retrieving the retweets list: ${error}`));\r\n\r\n        axios\r\n        .get(`http://localhost:4001/twitter/medsnaps`)\r\n        .then(response => {\r\n          setMed(response.data);\r\n          setLoading2(false);\r\n        })\r\n        .catch(error => console.error(`There was an error retrieving the median list: ${error}`));\r\n      }, []);\r\n\r\n      if (isLoading || isLoading2) {\r\n        return <div>\r\n        <Card>\r\n            <Title>My Tweets</Title>\r\n            <p>Loading...</p>\r\n        </Card>\r\n        </div>\r\n      }\r\n\r\n      //Followers Popover\r\n      const pop_followers = (\r\n        <Popover id=\"popover-basic\" placement=\"top\" style={vizpop}>\r\n            <Popover.Title>Median Followers</Popover.Title>\r\n          <Popover.Content>\r\n          <WaffleChart divid = \"medfollowers\" r = {med[med.length - 1]['researchers']} n = {med[med.length - 1]['non_researchers']} />\r\n          </Popover.Content>\r\n        </Popover>\r\n      );\r\n      \r\n      const PopFollowers = () => (\r\n        <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={pop_followers}>\r\n        <Button variant=\"outline-primary\">See Median</Button>\r\n          \r\n        </OverlayTrigger>\r\n      );\r\n\r\n      //Downstream Popover\r\n      const pop_downstream = (\r\n        <Popover id=\"popover-basic\" placement=\"top\" style={vizpop}>\r\n            <Popover.Title>Median Downstream</Popover.Title>\r\n          <Popover.Content>\r\n          <WaffleChart divid = \"meddownstream\"  r = {med[med.length - 1]['median_down_r']} n = {med[med.length - 1]['median_down_n']} />\r\n          </Popover.Content>\r\n        </Popover>\r\n      );\r\n      \r\n      const PopDownstream = () => (\r\n        <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={pop_downstream}>\r\n        <Button variant=\"outline-primary\">See Median</Button>\r\n          \r\n        </OverlayTrigger>\r\n      );\r\n\r\n      //Growth Popover\r\n      const pop_growth = (\r\n        <Popover id=\"popover-basic\" placement=\"top\" style={vizpop}>\r\n          <Popover.Content>\r\n          <LineChart data = {med} id = {\"indlinemed\"} dv = \"total_followers\" yaxis = \"Followers\"/>\r\n          </Popover.Content>\r\n        </Popover>\r\n      );\r\n      \r\n      const PopGrowth= () => (\r\n        <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={pop_growth}>\r\n        <Button variant=\"outline-primary\">See Median</Button>\r\n        </OverlayTrigger>\r\n      );\r\n\r\n      //Tweet Popover\r\n      const pop_tweet = (\r\n        <Popover id=\"popover-basic\" placement=\"top\" style={vizpop}>\r\n          <Popover.Content>\r\n          <LineChart data = {med} id = {\"indlinemed2\"} dv = \"total_tweets\" yaxis = \"Tweets\"/>\r\n          </Popover.Content>\r\n        </Popover>\r\n      );\r\n      \r\n      const PopTweet= () => (\r\n        <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={pop_tweet}>\r\n        <Button variant=\"outline-primary\">See Median</Button>\r\n        </OverlayTrigger>\r\n      );\r\n\r\n      \r\n\r\n      return(\r\n\r\n<div>\r\n    <Card style ={{padding:\"3em\"}}>\r\n        <Title>My Statistics</Title>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Subtitle>My Followers</Subtitle>\r\n                    <WaffleChart divid = \"myfollowers\" data = {snaps[snaps.length - 1]} r = {snaps[snaps.length - 1]['researchers']} n = {snaps[snaps.length - 1]['non_researchers']} />\r\n                    <PopFollowers/>\r\n                    \r\n                </div>\r\n                <div className='column'>\r\n                    <Subtitle>My Downstream Audience</Subtitle>\r\n                    <WaffleChart divid = \"mydownstream\" data = {snaps[snaps.length - 1]} r = {snaps[snaps.length - 1]['median_down_r']} n = {snaps[snaps.length - 1]['median_down_n']} />\r\n                    <PopDownstream/>\r\n                </div>\r\n            </div>\r\n\r\n            <br/>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Subtitle>Follower Growth</Subtitle>\r\n                    <LineChart data = {snaps} id = {\"indline\"} dv = \"total_followers\" yaxis = \"Followers\"/>\r\n                    <PopGrowth/>\r\n                </div>\r\n                <div className='column'>\r\n                    <Subtitle>Total Tweets</Subtitle>\r\n                    <LineChart data = {snaps} id = {\"indline2\"} dv = \"total_tweets\" yaxis = \"Tweets\"/>\r\n                    <PopTweet/>\r\n                </div>\r\n            </div>\r\n    </Card>\r\n    <br/>\r\n\r\n</div>\r\n      );\r\n};\r\n\r\n\r\nexport default IndividualStats;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\TweetsWaffle.tsx",["176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202"],"import React, { useRef, useLayoutEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport axios from 'axios'\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nfunction WaffleProportionCheat(n: Number, m: Number, o: Number){\r\n  var data1 = [];\r\n  var data2 = [];\r\n  var data3 = [];\r\n  var x_val = n.valueOf();\r\n  var y_val = m.valueOf();\r\n  var z_val = o.valueOf();\r\n\r\n  var tot = x_val + y_val + z_val;\r\n\r\n  var num_cols = parseInt(Math.sqrt((tot / 50)).toFixed());\r\n\r\n  num_cols = Math.max(3, num_cols);\r\n  num_cols = Math.min(30, num_cols)\r\n\r\n  var num_cells = num_cols * num_cols\r\n\r\n  var num1 = x_val / tot;\r\n  var num2 = y_val / tot;\r\n  var num3 = 1 - (num1+num2)\r\n\r\n  var s1 = (num1 * num_cells).toFixed();\r\n  var s2 = (num2 * num_cells).toFixed();\r\n  var s3 = (num3 * num_cells).toFixed();\r\n\r\n  var r1 = parseInt(s1);\r\n  var r2 = parseInt(s2);\r\n  var r3 = parseInt(s3)\r\n\r\n  var row = 1\r\n  var col = 1\r\n\r\n  var new_data_x = [];\r\n  var new_data_y = [];\r\n\r\n  for (let i = 1; i <= num_cols; i++) {\r\n    new_data_x.push({x : i.toString()});\r\n  }\r\n\r\n  for (let i = 1; i <= num_cols; i++) {\r\n    new_data_y.push({y : i.toString()});\r\n  }\r\n\r\n  for (let i = 0; i < r1; i++) {\r\n    var x_str = row.toString();\r\n    var y_str = col.toString();\r\n    data1.push({ x: x_str, y: y_str});\r\n    if(col == num_cols){\r\n      row = row + 1;\r\n      col = 1\r\n    } else {\r\n      col = col + 1\r\n    }\r\n  }\r\n\r\n  for (let i = r1; i < r1+r2; i++) {\r\n    var x_str = row.toString();\r\n    var y_str = col.toString();\r\n    data2.push({ x: x_str, y: y_str});\r\n    if(col == num_cols){\r\n      row = row + 1;\r\n      col = 1\r\n    } else {\r\n      col = col + 1\r\n    }\r\n  }\r\n\r\n  for (let i = r1+r2; i < num_cells; i++) {\r\n    var x_str = row.toString();\r\n    var y_str = col.toString();\r\n    data3.push({ x: x_str, y: y_str});\r\n    if(col == num_cols){\r\n      row = row + 1;\r\n      col = 1\r\n    } else {\r\n      col = col + 1\r\n    }\r\n  }\r\n\r\n  return([data1, data2, data3, new_data_x, new_data_y]);\r\n}\r\n\r\nfunction WaffleProportion(n: Number, m: Number, o: Number){\r\n  var data1 = []\r\n  var data2 = []\r\n  var data3 = []\r\n  var x_val = n.valueOf();\r\n  var y_val = m.valueOf();\r\n  var z_val = o.valueOf();\r\n  var tot = x_val + y_val + z_val;\r\n  var num1 = x_val / tot;\r\n  var num2 = y_val / tot;\r\n  var num3 = 1 - (num1+num2)\r\n\r\n  var s1 = (num1 * 100).toFixed();\r\n  var s2 = (num2 * 100).toFixed();\r\n  var s3 = (num3 * 100).toFixed();\r\n\r\n  var r1 = parseInt(s1);\r\n  var r2 = parseInt(s2);\r\n  var r3 = parseInt(s3);\r\n  console.log(r1);\r\n  console.log(r2);\r\n  console.log(r3);\r\n\r\n  var row = 1\r\n  var col = 1\r\n\r\n  for (let i = 0; i < r1; i++) {\r\n    var x_str = row.toString();\r\n    var y_str = col.toString();\r\n    data1.push({ x: x_str, y: y_str});\r\n    if(col == 10){\r\n      row = row + 1;\r\n      col = 1\r\n    } else {\r\n      col = col + 1\r\n    }\r\n  }\r\n\r\n  for (let i = r1; i < r1+r2; i++) {\r\n    var x_str = row.toString();\r\n    var y_str = col.toString();\r\n    data2.push({ x: x_str, y: y_str});\r\n    if(col == 10){\r\n      row = row + 1;\r\n      col = 1\r\n    } else {\r\n      col = col + 1\r\n    }\r\n  }\r\n\r\n  for (let i = r1+r2; i < 100; i++) {\r\n    var x_str = row.toString();\r\n    var y_str = col.toString();\r\n    data3.push({ x: x_str, y: y_str});\r\n    if(col == 10){\r\n      row = row + 1;\r\n      col = 1\r\n    } else {\r\n      col = col + 1\r\n    }\r\n  }\r\n\r\n  return([data1, data2, data3]);\r\n}\r\n\r\n\r\n\r\nfunction TweetsWaffle(props) {\r\n  const chart2 = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    let x = am4core.create(\"chart2div\", am4charts.XYChart);\r\n\r\n    x.paddingRight = 20;\r\n    x.paddingLeft = 20;\r\n\r\n    /* Chart code */\r\n// Themes begin\r\nam4core.useTheme(am4themes_animated);\r\n// Themes end\r\n\r\n// Chart\r\nlet chart2 = am4core.create( \"chart2div\", am4charts.XYChart );\r\nchart2.hiddenState.properties.opacity = 0; // this creates initial fade-in\r\n//chart.colors.step = 2;\r\nchart2.colors.list = [am4core.color( \"#98a2df\" ), am4core.color( \"#e96b6a\" ), am4core.color(\"#7FB285\")]\r\n\r\n// X axis\r\nlet xAxis = chart2.xAxes.push( new am4charts.CategoryAxis() );\r\nxAxis.dataFields.category = \"x\";\r\nxAxis.renderer.grid.template.location = 0;\r\nxAxis.renderer.minGridDistance = 10;\r\nxAxis.renderer.labels.template.disabled = true;\r\nxAxis.data = [{ x: \"1\" }, { x: \"2\" }, { x: \"3\" }, { x: \"4\" }, { x: \"5\" }, { x: \"6\" }, { x: \"7\" }, { x: \"8\" }, { x: \"9\" }, { x: \"10\" }];\r\n\r\n// Y axis\r\nlet yAxis = chart2.yAxes.push( new am4charts.CategoryAxis() );\r\nyAxis.renderer.labels.template.disabled = true;\r\nyAxis.renderer.grid.template.location = 0;\r\nyAxis.renderer.minGridDistance = 10;\r\nyAxis.dataFields.category = \"y\";\r\nyAxis.data = [{ y: \"1\" }, { y: \"2\" }, { y: \"3\" }, { y: \"4\" }, { y: \"5\" }, { y: \"6\" }, { y: \"7\" }, { y: \"8\" }, { y: \"9\" }, { y: \"10\" }];\r\n\r\n// Legend\r\nchart2.legend = new am4charts.Legend();\r\nchart2.legend.position = \"right\";\r\n\r\n// Create series\r\nfunction createSeries(name) {\r\n  let series = chart2.series.push( new am4charts.ColumnSeries() );\r\n  series.dataFields.categoryX = \"x\";\r\n  series.dataFields.categoryY = \"y\";\r\n  series.sequencedInterpolation = true;\r\n  series.defaultState.transitionDuration = 3000;\r\n  series.name = name;\r\n\r\n\r\n  // Set up column appearance\r\n  let column = series.columns.template;\r\n  column.strokeWidth = 1;\r\n  column.strokeOpacity = 1;\r\n  column.stroke = am4core.color( \"#ffffff\" );\r\n  column.width = am4core.percent( 100 );\r\n  column.height = am4core.percent( 100 );\r\n  //column.column.cornerRadius(6, 6, 6, 6);\r\n  \r\n  return series;\r\n}\r\n\r\nlet series1 = createSeries(\"Paper\");\r\nseries1.data = [\r\n  { x: \"1\", y: \"1\" },\r\n  { x: \"1\", y: \"2\" },\r\n  { x: \"1\", y: \"3\" },\r\n  { x: \"1\", y: \"4\" },\r\n  { x: \"1\", y: \"5\" },\r\n  { x: \"1\", y: \"6\" },\r\n  { x: \"1\", y: \"7\" },\r\n  { x: \"1\", y: \"8\" },\r\n  { x: \"1\", y: \"9\" },\r\n  { x: \"1\", y: \"10\" },\r\n  \r\n  { x: \"2\", y: \"1\" },\r\n  { x: \"2\", y: \"2\" },\r\n  { x: \"2\", y: \"3\" },\r\n  { x: \"2\", y: \"4\" },\r\n  { x: \"2\", y: \"5\" },\r\n  { x: \"2\", y: \"6\" },\r\n  { x: \"2\", y: \"7\" },\r\n  \r\n\r\n];\r\n\r\nlet series2 = createSeries(\"Blog\");\r\nseries2.data = [\r\n  { x: \"2\", y: \"8\" },\r\n  { x: \"2\", y: \"9\" },\r\n  { x: \"2\", y: \"10\" },\r\n  \r\n  { x: \"3\", y: \"1\" },\r\n  { x: \"3\", y: \"2\" },\r\n  { x: \"3\", y: \"3\" },\r\n  { x: \"3\", y: \"4\" },\r\n  { x: \"3\", y: \"5\" },\r\n  { x: \"3\", y: \"6\" },\r\n  { x: \"3\", y: \"7\" },\r\n  { x: \"3\", y: \"8\" },\r\n  { x: \"3\", y: \"9\" },\r\n  { x: \"3\", y: \"10\" },\r\n\r\n  { x: \"4\", y: \"1\" },\r\n  { x: \"4\", y: \"2\" },\r\n  { x: \"4\", y: \"3\" },\r\n  { x: \"4\", y: \"4\" },\r\n  { x: \"4\", y: \"5\" },\r\n  { x: \"4\", y: \"6\" },\r\n  \r\n];\r\n\r\nlet series3 = createSeries(\"None\");\r\nseries3.data = [\r\n  \r\n  { x: \"4\", y: \"7\" },\r\n  { x: \"4\", y: \"8\" },\r\n  { x: \"4\", y: \"9\" },\r\n  { x: \"4\", y: \"10\" },\r\n  \r\n  { x: \"5\", y: \"1\" },\r\n  { x: \"5\", y: \"2\" },\r\n  { x: \"5\", y: \"3\" },\r\n  { x: \"5\", y: \"4\" },\r\n  { x: \"5\", y: \"5\" },\r\n  { x: \"5\", y: \"6\" },\r\n  { x: \"5\", y: \"7\" },\r\n  { x: \"5\", y: \"8\" },\r\n  { x: \"5\", y: \"9\" },\r\n  { x: \"5\", y: \"10\" },\r\n\r\n  { x: \"6\", y: \"1\" },\r\n  { x: \"6\", y: \"2\" },\r\n  { x: \"6\", y: \"3\" },\r\n  { x: \"6\", y: \"4\" },\r\n  { x: \"6\", y: \"5\" },\r\n  { x: \"6\", y: \"6\" },\r\n  { x: \"6\", y: \"7\" },\r\n  { x: \"6\", y: \"8\" },\r\n  { x: \"6\", y: \"9\" },\r\n  { x: \"6\", y: \"10\" },\r\n\r\n  { x: \"7\", y: \"1\" },\r\n  { x: \"7\", y: \"2\" },\r\n  { x: \"7\", y: \"3\" },\r\n  { x: \"7\", y: \"4\" },\r\n  { x: \"7\", y: \"5\" },\r\n  { x: \"7\", y: \"6\" },\r\n  { x: \"7\", y: \"7\" },\r\n  { x: \"7\", y: \"8\" },\r\n  { x: \"7\", y: \"9\" },\r\n  { x: \"7\", y: \"10\" },\r\n\r\n  { x: \"8\", y: \"1\" },\r\n  { x: \"8\", y: \"2\" },\r\n  { x: \"8\", y: \"3\" },\r\n  { x: \"8\", y: \"4\" },\r\n  { x: \"8\", y: \"5\" },\r\n  { x: \"8\", y: \"6\" },\r\n  { x: \"8\", y: \"7\" },\r\n  { x: \"8\", y: \"8\" },\r\n  { x: \"8\", y: \"9\" },\r\n  { x: \"8\", y: \"10\" },\r\n\r\n  { x: \"9\", y: \"1\" },\r\n  { x: \"9\", y: \"2\" },\r\n  { x: \"9\", y: \"3\" },\r\n  { x: \"9\", y: \"4\" },\r\n  { x: \"9\", y: \"5\" },\r\n  { x: \"9\", y: \"6\" },\r\n  { x: \"9\", y: \"7\" },\r\n  { x: \"9\", y: \"8\" },\r\n  { x: \"9\", y: \"9\" },\r\n  { x: \"9\", y: \"10\" },\r\n\r\n  { x: \"10\", y: \"1\" },\r\n  { x: \"10\", y: \"2\" },\r\n  { x: \"10\", y: \"3\" },\r\n  { x: \"10\", y: \"4\" },\r\n  { x: \"10\", y: \"5\" },\r\n  { x: \"10\", y: \"6\" },\r\n  { x: \"10\", y: \"7\" },\r\n  { x: \"10\", y: \"8\" },\r\n  { x: \"10\", y: \"9\" },\r\n  { x: \"10\", y: \"10\" },\r\n];\r\n\r\naxios\r\n.get(`http://localhost:4001/twitter/communityAll`)\r\n.then(response => {\r\n  // Update the books state\r\n  var com = response.data;\r\n  var coms:object[] = [];\r\n  var num1 = new Number(0)\r\n  num1 = com[com.length -1]['paper_tweets']\r\n  series1.name = \"Paper: \" + num1.toString();\r\n  \r\n  var num2 = new Number(0)\r\n  num2 = com[com.length -1]['blog_tweets']\r\n  series2.name = \"Blog: \" + num2.toString();\r\n  \r\n  var num3 = new Number(0)\r\n  num3 = com[com.length -1]['total_tweets'] - (num1.valueOf() + num2.valueOf())\r\n  series3.name = \"None: \" + num3.toString();\r\n\r\n  var datas = WaffleProportionCheat(num1, num2, num3);\r\n\r\n  xAxis.data = datas[3];\r\n  yAxis.data = datas[4];\r\n\r\n  series1.data = datas[0];\r\n  series2.data = datas[1];\r\n  series3.data = datas[2];\r\n\r\n})\r\n.catch(error => console.error(`There was an error retrieving the user list: ${error}`))\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n        <div id=\"chart2div\" style={{ width: \"100%\", height: \"250px\" }}></div>\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default TweetsWaffle;\r\n\r\n","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\MyWaffle.tsx",["203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220"],"import React, { useRef, useLayoutEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport axios from 'axios'\r\n\r\nvar user_id = 634739719;\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nfunction WaffleProportion(n: Number, m: Number){\r\n  var data1 = []\r\n  var data2 = []\r\n  var x_val = n.valueOf();\r\n  var y_val = m.valueOf();\r\n  var tot = x_val + y_val;\r\n  var num1 = x_val / tot;\r\n  var num2 = tot - num1;\r\n\r\n  var s1 = num1.toFixed();\r\n  var s2 = num2.toFixed();\r\n\r\n  var r1 = parseInt(s1);\r\n  var r2 = parseInt(s2);\r\n\r\n  var row = 1\r\n  var col = 1\r\n\r\n  for (let i = 0; i < r1; i++) {\r\n    var x_str = row.toString();\r\n    var y_str = col.toString();\r\n    data1.push({ x: x_str, y: y_str});\r\n    if(col == 10){\r\n      row = row + 1;\r\n      col = 1\r\n    } else {\r\n      col = col + 1\r\n    }\r\n  }\r\n\r\n  for (let i = r1; i < 100; i++) {\r\n    var x_str = row.toString();\r\n    var y_str = col.toString();\r\n    data2.push({ x: x_str, y: y_str});\r\n    if(col == 10){\r\n      row = row + 1;\r\n      col = 1\r\n    } else {\r\n      col = col + 1\r\n    }\r\n  }\r\n\r\n  return([data1, data2]);\r\n}\r\n\r\nfunction MyWaffle(props) {\r\n  const chart = useRef(null);\r\n\r\n  var rs = 3600\r\n  var nrs = 6400\r\n\r\n  useLayoutEffect(() => {\r\n    let x = am4core.create(\"chartdivmy\", am4charts.XYChart);\r\n\r\n    x.paddingRight = 20;\r\n    x.paddingLeft = 20;\r\n\r\n    /* Chart code */\r\n// Themes begin\r\nam4core.useTheme(am4themes_animated);\r\n// Themes end\r\n\r\n// Chart\r\nlet chart = am4core.create( \"chartdivmy\", am4charts.XYChart );\r\nchart.hiddenState.properties.opacity = 0; // this creates initial fade-in\r\n//chart.colors.step = 2;\r\nchart.colors.list = [am4core.color( \"#98a2df\" ), am4core.color( \"#e96b6a\" ), am4core.color(\"#a2df98\")]\r\n\r\n// X axis\r\nlet xAxis = chart.xAxes.push( new am4charts.CategoryAxis() );\r\nxAxis.dataFields.category = \"x\";\r\nxAxis.renderer.grid.template.location = 0;\r\nxAxis.renderer.minGridDistance = 10;\r\nxAxis.renderer.labels.template.disabled = true;\r\nxAxis.data = [{ x: \"1\" }, { x: \"2\" }, { x: \"3\" }, { x: \"4\" }, { x: \"5\" }, { x: \"6\" }, { x: \"7\" }, { x: \"8\" }, { x: \"9\" }, { x: \"10\" }];\r\n\r\n// Y axis\r\nlet yAxis = chart.yAxes.push( new am4charts.CategoryAxis() );\r\nyAxis.renderer.labels.template.disabled = true;\r\nyAxis.renderer.grid.template.location = 0;\r\nyAxis.renderer.minGridDistance = 10;\r\nyAxis.dataFields.category = \"y\";\r\nyAxis.data = [{ y: \"1\" }, { y: \"2\" }, { y: \"3\" }, { y: \"4\" }, { y: \"5\" }, { y: \"6\" }, { y: \"7\" }, { y: \"8\" }, { y: \"9\" }, { y: \"10\" }];\r\n\r\n// Legend\r\nchart.legend = new am4charts.Legend();\r\nchart.legend.position = \"right\";\r\nchart.legend.scrollable = true;\r\nchart.legend.maxWidth = 200;\r\n\r\n// Create series\r\nfunction createSeries(name) {\r\n  let series = chart.series.push( new am4charts.ColumnSeries() );\r\n  series.dataFields.categoryX = \"x\";\r\n  series.dataFields.categoryY = \"y\";\r\n  series.sequencedInterpolation = true;\r\n  series.defaultState.transitionDuration = 3000;\r\n  series.name = name;\r\n\r\n\r\n  // Set up column appearance\r\n  let column = series.columns.template;\r\n  column.strokeWidth = 1;\r\n  column.strokeOpacity = 1;\r\n  column.stroke = am4core.color( \"#ffffff\" );\r\n  column.width = am4core.percent( 100 );\r\n  column.height = am4core.percent( 100 );\r\n  //column.column.cornerRadius(6, 6, 6, 6);\r\n  \r\n  return series;\r\n}\r\n\r\nlet series1 = createSeries(\"Researchers\");\r\nseries1.data = [\r\n  { x: \"1\", y: \"1\" },\r\n  { x: \"1\", y: \"2\" },\r\n  { x: \"1\", y: \"3\" },\r\n  { x: \"1\", y: \"4\" },\r\n  { x: \"1\", y: \"5\" },\r\n  { x: \"1\", y: \"6\" },\r\n  { x: \"1\", y: \"7\" },\r\n  { x: \"1\", y: \"8\" },\r\n  { x: \"1\", y: \"9\" },\r\n  { x: \"1\", y: \"10\" },\r\n  \r\n  { x: \"2\", y: \"1\" },\r\n  { x: \"2\", y: \"2\" },\r\n  { x: \"2\", y: \"3\" },\r\n  { x: \"2\", y: \"4\" },\r\n  { x: \"2\", y: \"5\" },\r\n  { x: \"2\", y: \"6\" },\r\n  { x: \"2\", y: \"7\" },\r\n  { x: \"2\", y: \"8\" },\r\n  { x: \"2\", y: \"9\" },\r\n  { x: \"2\", y: \"10\" },\r\n  \r\n  { x: \"3\", y: \"1\" },\r\n  { x: \"3\", y: \"2\" },\r\n  { x: \"3\", y: \"3\" },\r\n  { x: \"3\", y: \"4\" },\r\n  { x: \"3\", y: \"5\" },\r\n  { x: \"3\", y: \"6\" },\r\n  { x: \"3\", y: \"7\" },\r\n  { x: \"3\", y: \"8\" },\r\n  { x: \"3\", y: \"9\" },\r\n  { x: \"3\", y: \"10\" },\r\n\r\n  { x: \"4\", y: \"1\" },\r\n  { x: \"4\", y: \"2\" },\r\n  { x: \"4\", y: \"3\" },\r\n  { x: \"4\", y: \"4\" },\r\n  { x: \"4\", y: \"5\" },\r\n  { x: \"4\", y: \"6\" },\r\n  { x: \"4\", y: \"7\" },\r\n  { x: \"4\", y: \"8\" },\r\n  { x: \"4\", y: \"9\" },\r\n  { x: \"4\", y: \"10\" },\r\n\r\n  { x: \"5\", y: \"1\" },\r\n  { x: \"5\", y: \"2\" },\r\n  { x: \"5\", y: \"3\" },\r\n  { x: \"5\", y: \"4\" },\r\n  { x: \"5\", y: \"5\" },\r\n  { x: \"5\", y: \"6\" },\r\n  { x: \"5\", y: \"7\" },\r\n  { x: \"5\", y: \"8\" },\r\n  { x: \"5\", y: \"9\" },\r\n  { x: \"5\", y: \"10\" },\r\n\r\n  { x: \"6\", y: \"1\" },\r\n  { x: \"6\", y: \"2\" },\r\n  { x: \"6\", y: \"3\" },\r\n  { x: \"6\", y: \"4\" },\r\n  { x: \"6\", y: \"5\" },\r\n  { x: \"6\", y: \"6\" },\r\n  { x: \"6\", y: \"7\" },\r\n  { x: \"6\", y: \"8\" },\r\n  { x: \"6\", y: \"9\" },\r\n  { x: \"6\", y: \"10\" },\r\n\r\n];\r\n\r\nlet series2 = createSeries(\"Non-Researchers\");\r\nseries2.data = [\r\n  \r\n\r\n  { x: \"7\", y: \"1\" },\r\n  { x: \"7\", y: \"2\" },\r\n  { x: \"7\", y: \"3\" },\r\n  { x: \"7\", y: \"4\" },\r\n  { x: \"7\", y: \"5\" },\r\n  { x: \"7\", y: \"6\" },\r\n  { x: \"7\", y: \"7\" },\r\n  { x: \"7\", y: \"8\" },\r\n  { x: \"7\", y: \"9\" },\r\n  { x: \"7\", y: \"10\" },\r\n\r\n  { x: \"8\", y: \"1\" },\r\n  { x: \"8\", y: \"2\" },\r\n  { x: \"8\", y: \"3\" },\r\n  { x: \"8\", y: \"4\" },\r\n  { x: \"8\", y: \"5\" },\r\n  { x: \"8\", y: \"6\" },\r\n  { x: \"8\", y: \"7\" },\r\n  { x: \"8\", y: \"8\" },\r\n  { x: \"8\", y: \"9\" },\r\n  { x: \"8\", y: \"10\" },\r\n\r\n  { x: \"9\", y: \"1\" },\r\n  { x: \"9\", y: \"2\" },\r\n  { x: \"9\", y: \"3\" },\r\n  { x: \"9\", y: \"4\" },\r\n  { x: \"9\", y: \"5\" },\r\n  { x: \"9\", y: \"6\" },\r\n  { x: \"9\", y: \"7\" },\r\n  { x: \"9\", y: \"8\" },\r\n  { x: \"9\", y: \"9\" },\r\n  { x: \"9\", y: \"10\" },\r\n\r\n  { x: \"10\", y: \"1\" },\r\n  { x: \"10\", y: \"2\" },\r\n  { x: \"10\", y: \"3\" },\r\n  { x: \"10\", y: \"4\" },\r\n  { x: \"10\", y: \"5\" },\r\n  { x: \"10\", y: \"6\" },\r\n  { x: \"10\", y: \"7\" },\r\n  { x: \"10\", y: \"8\" },\r\n  { x: \"10\", y: \"9\" },\r\n  { x: \"10\", y: \"10\" },\r\n];\r\n\r\n//!!! the problem is there are no users in the db right now\r\n//the other problem is the waffle itself doesn't change\r\nvar a = new Number(100);\r\nvar b = new Number(13);\r\nconsole.log(\"waffle proportion is...\")\r\nconsole.log(WaffleProportion(a,b));\r\n\r\naxios\r\n.get(`http://localhost:4001/twitter/userWhereID/${user_id}`)\r\n.then(response => {\r\n  var com = response.data;\r\n  var coms:object[] = [];\r\n  var num = new Number(0)\r\n  num = com['followers_r']\r\n  console.log(com)\r\n  console.log(num)\r\n  series1.name = \"Researchers: \" + num.toString();\r\n\r\n  num = com['followers_n']\r\n  series2.name = \"Non-researchers: \" + num.toString();\r\n})\r\n.catch(error => console.error(`There was an error retrieving the user list: ${error}`))\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n        <div id=\"chartdivmy\" style={{ width: \"100%\", height: \"250px\" }}></div>\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default MyWaffle;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\MyContributions.tsx",["221","222","223","224","225","226","227"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport Overlay from 'react-bootstrap/Overlay'\r\nimport Button from 'react-bootstrap/Button'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport MyWaffle from './MyWaffle';\r\nimport MyDownstream from './MyDownstream';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nvar id = \"1293416714923683841\"\r\n\r\nconst Title = styled.p`\r\n    &&& {\r\n    font-size: 30px;\r\n    font-weight:bold;\r\n}`\r\n\r\nconst Subtitle = styled.p`\r\n    &&& {\r\n    padding: 0.5em;\r\n    font-size: 24px;\r\n}`\r\n\r\nconst Space = styled.p`\r\n    &&& {\r\n    padding: 0.5em;\r\n    font-size: 24px;\r\n}`\r\n\r\nconst List = styled.li`\r\n    &&& {\r\n    padding:.25em;\r\n    font-size: 18px;\r\n    margin-left: 50px;\r\n}`\r\n    \r\nfunction MyContributions(props) {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [user, setUser] = useState([]);\r\n\r\n    const [isLoading2, setLoading2] = useState(true);\r\n    const [med, setMed] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n        .get(`http://localhost:4001/twitter/userWhereID/${id}`)\r\n        .then(response => {\r\n          setUser(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch(error => console.error(`There was an error retrieving the retweets list: ${error}`));\r\n\r\n        axios\r\n        .get(`http://localhost:4001/twitter/median`)\r\n        .then(response => {\r\n          setMed(response.data);\r\n          setLoading2(false);\r\n        })\r\n        .catch(error => console.error(`There was an error retrieving the median list: ${error}`));\r\n\r\n\r\n      }, []);\r\n\r\n      if (isLoading || isLoading2) {\r\n        return <div>\r\n        <Card>\r\n            <Title>My Contributions</Title>\r\n            <p>Loading...</p>\r\n        </Card>\r\n        </div>\r\n      }\r\n\r\n      const popover = (\r\n        <Popover id=\"popover-basic\">\r\n            <Popover.Title>Median Contributions</Popover.Title>\r\n          <Popover.Content>\r\n              <Subtitle>Median Tweets</Subtitle>\r\n            <List> Blog links: {med[\"blog_tweets\"]}</List>\r\n            <List> Paper links: {med[\"paper_tweets\"]}</List>\r\n            <List> Median daily tweets: {med[\"median_daily_tweets\"]}</List>\r\n        <Subtitle>Median Community Engagement</Subtitle>\r\n            <List> Median likes: {med[\"median_likes\"]}</List>\r\n            <List> Median retweets: {med[\"median_retweets\"]}</List>\r\n          </Popover.Content>\r\n        </Popover>\r\n      );\r\n      \r\n      const Pop = () => (\r\n        <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n        <Button variant=\"outline-primary\">See Median</Button>\r\n          \r\n        </OverlayTrigger>\r\n      );\r\n\r\n      return(\r\n<div>\r\n    <Card style ={{padding:\"3em\", height:\"600px\"}}>\r\n        <Title>My Contributions</Title>\r\n        <Subtitle>My Tweets</Subtitle>\r\n            <List> Blog links: {user[0][\"blog_tweets\"]}</List>\r\n            <List> Paper links: {user[0][\"paper_tweets\"]}</List>\r\n            <List> Median daily tweets: {user[0][\"median_daily_tweets\"]}</List>\r\n        <Subtitle>My Community Engagement</Subtitle>\r\n            <List> Median likes: {user[0][\"median_likes\"]}</List>\r\n            <List> Median retweets: {user[0][\"median_retweets\"]}</List>\r\n            <Space> </Space>\r\n            <Pop/>\r\n            \r\n    </Card>\r\n    \r\n    <br/>\r\n\r\n</div>\r\n);\r\n      }\r\n\r\nexport default MyContributions;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\MyDownstream.tsx",["228","229","230","231","232","233","234","235","236"],"import React, { useRef, useLayoutEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nfunction MyDownstream(props) {\r\n  const chart = useRef(null);\r\n\r\n  var rs = 3600\r\n  var nrs = 6400\r\n\r\n  useLayoutEffect(() => {\r\n    let x = am4core.create(\"chartdivmyd\", am4charts.XYChart);\r\n\r\n    x.paddingRight = 20;\r\n    x.paddingLeft = 20;\r\n\r\n    /* Chart code */\r\n// Themes begin\r\nam4core.useTheme(am4themes_animated);\r\n// Themes end\r\n\r\n// Chart\r\nlet chart = am4core.create( \"chartdivmyd\", am4charts.XYChart );\r\nchart.hiddenState.properties.opacity = 0; // this creates initial fade-in\r\n//chart.colors.step = 2;\r\nchart.colors.list = [am4core.color( \"#98a2df\" ), am4core.color( \"#e96b6a\" ), am4core.color(\"#a2df98\")]\r\n\r\n// X axis\r\nlet xAxis = chart.xAxes.push( new am4charts.CategoryAxis() );\r\nxAxis.dataFields.category = \"x\";\r\nxAxis.renderer.grid.template.location = 0;\r\nxAxis.renderer.minGridDistance = 10;\r\nxAxis.renderer.labels.template.disabled = true;\r\nxAxis.data = [{ x: \"1\" }, { x: \"2\" }, { x: \"3\" }, { x: \"4\" }, { x: \"5\" }, { x: \"6\" }, { x: \"7\" }, { x: \"8\" }, { x: \"9\" }, { x: \"10\" }];\r\n\r\n// Y axis\r\nlet yAxis = chart.yAxes.push( new am4charts.CategoryAxis() );\r\nyAxis.renderer.labels.template.disabled = true;\r\nyAxis.renderer.grid.template.location = 0;\r\nyAxis.renderer.minGridDistance = 10;\r\nyAxis.dataFields.category = \"y\";\r\nyAxis.data = [{ y: \"1\" }, { y: \"2\" }, { y: \"3\" }, { y: \"4\" }, { y: \"5\" }, { y: \"6\" }, { y: \"7\" }, { y: \"8\" }, { y: \"9\" }, { y: \"10\" }];\r\n\r\n// Legend\r\nchart.legend = new am4charts.Legend();\r\nchart.legend.position = \"right\";\r\nchart.legend.scrollable = true;\r\nchart.legend.maxWidth = 200;\r\n\r\n// Create series\r\nfunction createSeries(name) {\r\n  let series = chart.series.push( new am4charts.ColumnSeries() );\r\n  series.dataFields.categoryX = \"x\";\r\n  series.dataFields.categoryY = \"y\";\r\n  series.sequencedInterpolation = true;\r\n  series.defaultState.transitionDuration = 3000;\r\n  series.name = name;\r\n\r\n\r\n  // Set up column appearance\r\n  let column = series.columns.template;\r\n  column.strokeWidth = 1;\r\n  column.strokeOpacity = 1;\r\n  column.stroke = am4core.color( \"#ffffff\" );\r\n  column.width = am4core.percent( 100 );\r\n  column.height = am4core.percent( 100 );\r\n  //column.column.cornerRadius(6, 6, 6, 6);\r\n  \r\n  return series;\r\n}\r\n\r\nlet series1 = createSeries(\"Researchers\");\r\nseries1.data = [\r\n  { x: \"1\", y: \"1\" },\r\n  { x: \"1\", y: \"2\" },\r\n  { x: \"1\", y: \"3\" },\r\n  { x: \"1\", y: \"4\" },\r\n  { x: \"1\", y: \"5\" },\r\n  { x: \"1\", y: \"6\" },\r\n  { x: \"1\", y: \"7\" },\r\n  { x: \"1\", y: \"8\" },\r\n  { x: \"1\", y: \"9\" },\r\n  { x: \"1\", y: \"10\" },\r\n  \r\n  { x: \"2\", y: \"1\" },\r\n  { x: \"2\", y: \"2\" },\r\n  { x: \"2\", y: \"3\" },\r\n  { x: \"2\", y: \"4\" },\r\n  { x: \"2\", y: \"5\" },\r\n  { x: \"2\", y: \"6\" },\r\n  { x: \"2\", y: \"7\" },\r\n  { x: \"2\", y: \"8\" },\r\n  { x: \"2\", y: \"9\" },\r\n  { x: \"2\", y: \"10\" },\r\n  \r\n  { x: \"3\", y: \"1\" },\r\n  { x: \"3\", y: \"2\" },\r\n  { x: \"3\", y: \"3\" },\r\n  { x: \"3\", y: \"4\" },\r\n  { x: \"3\", y: \"5\" },\r\n  { x: \"3\", y: \"6\" },\r\n  { x: \"3\", y: \"7\" },\r\n  { x: \"3\", y: \"8\" },\r\n  \r\n\r\n];\r\n\r\nlet series2 = createSeries(\"Non-Researchers\");\r\nseries2.data = [\r\n  \r\n  { x: \"3\", y: \"9\" },\r\n  { x: \"3\", y: \"10\" },\r\n\r\n  { x: \"4\", y: \"1\" },\r\n  { x: \"4\", y: \"2\" },\r\n  { x: \"4\", y: \"3\" },\r\n  { x: \"4\", y: \"4\" },\r\n  { x: \"4\", y: \"5\" },\r\n  { x: \"4\", y: \"6\" },\r\n  { x: \"4\", y: \"7\" },\r\n  { x: \"4\", y: \"8\" },\r\n  { x: \"4\", y: \"9\" },\r\n  { x: \"4\", y: \"10\" },\r\n\r\n  { x: \"5\", y: \"1\" },\r\n  { x: \"5\", y: \"2\" },\r\n  { x: \"5\", y: \"3\" },\r\n  { x: \"5\", y: \"4\" },\r\n  { x: \"5\", y: \"5\" },\r\n  { x: \"5\", y: \"6\" },\r\n  { x: \"5\", y: \"7\" },\r\n  { x: \"5\", y: \"8\" },\r\n  { x: \"5\", y: \"9\" },\r\n  { x: \"5\", y: \"10\" },\r\n\r\n  { x: \"6\", y: \"1\" },\r\n  { x: \"6\", y: \"2\" },\r\n  { x: \"6\", y: \"3\" },\r\n  { x: \"6\", y: \"4\" },\r\n  { x: \"6\", y: \"5\" },\r\n  { x: \"6\", y: \"6\" },\r\n  { x: \"6\", y: \"7\" },\r\n  { x: \"6\", y: \"8\" },\r\n  { x: \"6\", y: \"9\" },\r\n  { x: \"6\", y: \"10\" },\r\n\r\n  { x: \"7\", y: \"1\" },\r\n  { x: \"7\", y: \"2\" },\r\n  { x: \"7\", y: \"3\" },\r\n  { x: \"7\", y: \"4\" },\r\n  { x: \"7\", y: \"5\" },\r\n  { x: \"7\", y: \"6\" },\r\n  { x: \"7\", y: \"7\" },\r\n  { x: \"7\", y: \"8\" },\r\n  { x: \"7\", y: \"9\" },\r\n  { x: \"7\", y: \"10\" },\r\n\r\n  { x: \"8\", y: \"1\" },\r\n  { x: \"8\", y: \"2\" },\r\n  { x: \"8\", y: \"3\" },\r\n  { x: \"8\", y: \"4\" },\r\n  { x: \"8\", y: \"5\" },\r\n  { x: \"8\", y: \"6\" },\r\n  { x: \"8\", y: \"7\" },\r\n  { x: \"8\", y: \"8\" },\r\n  { x: \"8\", y: \"9\" },\r\n  { x: \"8\", y: \"10\" },\r\n\r\n  { x: \"9\", y: \"1\" },\r\n  { x: \"9\", y: \"2\" },\r\n  { x: \"9\", y: \"3\" },\r\n  { x: \"9\", y: \"4\" },\r\n  { x: \"9\", y: \"5\" },\r\n  { x: \"9\", y: \"6\" },\r\n  { x: \"9\", y: \"7\" },\r\n  { x: \"9\", y: \"8\" },\r\n  { x: \"9\", y: \"9\" },\r\n  { x: \"9\", y: \"10\" },\r\n\r\n  { x: \"10\", y: \"1\" },\r\n  { x: \"10\", y: \"2\" },\r\n  { x: \"10\", y: \"3\" },\r\n  { x: \"10\", y: \"4\" },\r\n  { x: \"10\", y: \"5\" },\r\n  { x: \"10\", y: \"6\" },\r\n  { x: \"10\", y: \"7\" },\r\n  { x: \"10\", y: \"8\" },\r\n  { x: \"10\", y: \"9\" },\r\n  { x: \"10\", y: \"10\" },\r\n];\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n        <div id=\"chartdivmyd\" style={{ width: \"100%\", height: \"250px\" }}></div>\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default MyDownstream;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\Individual.tsx",["237","238","239","240","241"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport MyContributions from './MyContributions';\r\nimport IndividualStats from './IndividualStats';\r\n\r\nconst Left = styled.div`\r\n    &&&{width: 70%;\r\n    }\r\n`\r\n\r\nconst Right = styled.div`\r\n    &&&{width:30%;\r\n    }\r\n`\r\n\r\nconst divStyle ={\r\n    display:'flex',\r\n}\r\n\r\n\r\nclass Individual extends React.Component{\r\n    render(){\r\n        return (\r\n            \r\n            <div style={divStyle}>\r\n                <Left><IndividualStats /></Left>\r\n                <Right><MyContributions /></Right>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Individual;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\MyTweets.tsx",["242","243","244","245","246","247"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport WaffleChart from './WaffleChart';\r\nimport axios from 'axios'\r\nimport { Tweet} from 'react-twitter-widgets'\r\n\r\n//var id = \"634739719\"\r\nvar id = \"1293416714923683841\"\r\n\r\nconst Title = styled.p`\r\n    &&& {\r\n    padding: 1em;\r\n    font-size: 30px;\r\n    font-weight:bold;\r\n}`\r\n\r\nconst Subtitle = styled.p`\r\n    &&& {\r\n    padding: 2em;\r\n    font-size: 16px;\r\n}`\r\n\r\nfunction RenderTweet(tweets, num){\r\n    if (tweets.length < num){\r\n        return (<div></div>);\r\n    } else if (tweets[tweets.length - num]['downstream_r'] + tweets[tweets.length - num]['downstream_n'] <= 0){\r\n        return (<div></div>);\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Tweet tweetId={tweets[tweets.length - num]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n\r\n                    \r\n                </div>\r\n                <div className='column'>\r\n                    <WaffleChart title = {tweets[tweets.length - num]['retweets']} divid={\"td\".concat(num.toString())} r = {tweets[tweets.length - num]['downstream_r']} n = {tweets[tweets.length - num]['downstream_n']}/>\r\n                </div>\r\n            </div>\r\n\r\n            <br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction MyTweets(props) {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [tweets, setTweets] = useState([]);\r\n    const big = \"1251242797379645440\";\r\n\r\n    useEffect(() => {\r\n        axios\r\n        .get(`http://localhost:4001/twitter/retweetsWhereUserID/${id}`)\r\n        .then(response => {\r\n          setTweets(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch(error => console.error(`There was an error retrieving the retweets list: ${error}`));\r\n      }, []);\r\n\r\n      if (isLoading) {\r\n        return <div>\r\n        <Card>\r\n            <Title>My Tweets</Title>\r\n            <p>Loading...</p>\r\n        </Card>;\r\n        </div>\r\n      }\r\n\r\n      return (\r\n        <div>\r\n            <Card style ={{padding:\"3em\"}}>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Title>My Tweets</Title>\r\n\r\n                    \r\n                </div>\r\n                <div className='column'>\r\n                    <Title>Downstream Audience</Title>\r\n                </div>\r\n            </div>\r\n                    {RenderTweet(tweets, 1)}\r\n                    {RenderTweet(tweets, 2)}\r\n                    {RenderTweet(tweets, 3)}\r\n                    {RenderTweet(tweets, 4)}\r\n                    {RenderTweet(tweets, 5)}\r\n        \r\n            </Card>\r\n        \r\n        </div>\r\n        );\r\n    \r\n    /*\r\n    return (\r\n<div>\r\n    <Card style ={{padding:\"3em\"}}>\r\n        <Title>My Tweets</Title>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Title>Tweets</Title>\r\n                    <Tweet tweetId={tweets[tweets.length - 1]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n\r\n                    \r\n                </div>\r\n                <div className='column'>\r\n                    <Title>Downstream Audience</Title>\r\n                    <WaffleChart title = {tweets[tweets.length - 1]['retweets']} divid=\"td1\" r = {tweets[tweets.length - 1]['downstream_r']} n = {tweets[tweets.length - 1]['downstream_n']}/>\r\n                </div>\r\n            </div>\r\n\r\n            <br/>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Tweet tweetId={tweets[tweets.length - 2]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n                </div>\r\n                <div className='column'>\r\n                    <WaffleChart title = {tweets[tweets.length - 2]['retweets']} divid=\"td2\" r = {tweets[tweets.length - 2]['downstream_r']} n = {tweets[tweets.length - 2]['downstream_n']}/>\r\n                </div>\r\n            </div>\r\n\r\n            <br/>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Tweet tweetId={tweets[tweets.length - 3]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n                </div>\r\n                <div className='column'>\r\n                    <WaffleChart title = {tweets[tweets.length - 3]['retweets']} divid=\"td3\" r = {tweets[tweets.length - 3]['downstream_r']} n = {tweets[tweets.length - 3]['downstream_n']}/>\r\n                </div>\r\n            </div>\r\n\r\n            <br/>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Tweet tweetId={tweets[tweets.length - 4]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n                </div>\r\n                <div className='column'>\r\n                    <WaffleChart title = {tweets[tweets.length - 4]['retweets']} divid=\"td4\" r = {tweets[tweets.length - 4]['downstream_r']} n = {tweets[tweets.length - 4]['downstream_n']}/>\r\n                </div>\r\n            </div>\r\n\r\n            <br/>\r\n            <div className='columns'>\r\n                <div className='column'>\r\n                    <Tweet tweetId={tweets[tweets.length - 5]['tweet_id_text']} options={{ width: \"50%\", cards: \"hidden\" }}/>\r\n                </div>\r\n                <div className='column'>\r\n                    <WaffleChart title = {tweets[tweets.length - 5]['retweets']} divid=\"td5\" r = {tweets[tweets.length - 5]['downstream_r']} n = {tweets[tweets.length - 5]['downstream_n']}/>\r\n                </div>\r\n            </div>\r\n\r\n    </Card>\r\n\r\n</div>\r\n);*/\r\n}\r\n\r\n\r\nexport default MyTweets;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\WaffleChart.tsx",["248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272"],"import React, { useRef, useLayoutEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport axios from 'axios'\r\n\r\nvar user_id = \"634739719\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nfunction WaffleProportionCheat(n: Number, m: Number){\r\n  var data1 = [];\r\n  var data2 = [];\r\n  var x_val = n.valueOf();\r\n  var y_val = m.valueOf();\r\n\r\n  var tot = x_val + y_val;\r\n\r\n  var num_cols = parseInt(Math.sqrt((tot / 50)).toFixed());\r\n\r\n  num_cols = Math.max(3, num_cols);\r\n  num_cols = Math.min(30, num_cols)\r\n\r\n  var num_cells = num_cols * num_cols\r\n\r\n  var num1 = x_val / tot;\r\n  var num2 = 1 - num1;\r\n\r\n  var s1 = (num1 * num_cells).toFixed();\r\n  var s2 = (num2 * num_cells).toFixed();\r\n\r\n  var r1 = parseInt(s1);\r\n  var r2 = parseInt(s2);\r\n\r\n  var row = 1\r\n  var col = 1\r\n\r\n  var new_data_x = [];\r\n  var new_data_y = [];\r\n\r\n  for (let i = 1; i <= num_cols; i++) {\r\n    new_data_x.push({x : i.toString()});\r\n  }\r\n\r\n  for (let i = 1; i <= num_cols; i++) {\r\n    new_data_y.push({y : i.toString()});\r\n  }\r\n\r\n  for (let i = 0; i < r1; i++) {\r\n    var x_str = row.toString();\r\n    var y_str = col.toString();\r\n    data1.push({ x: x_str, y: y_str});\r\n    if(col == num_cols){\r\n      row = row + 1;\r\n      col = 1\r\n    } else {\r\n      col = col + 1\r\n    }\r\n  }\r\n\r\n  for (let i = r1; i < num_cells; i++) {\r\n    var x_str = row.toString();\r\n    var y_str = col.toString();\r\n    data2.push({ x: x_str, y: y_str});\r\n    if(col == num_cols){\r\n      row = row + 1;\r\n      col = 1\r\n    } else {\r\n      col = col + 1\r\n    }\r\n  }\r\n\r\n  return([data1, data2, new_data_x, new_data_y]);\r\n}\r\n\r\nfunction WaffleProportion(n: Number, m: Number){\r\n  var data1 = []\r\n  var data2 = []\r\n  var x_val = n.valueOf();\r\n  var y_val = m.valueOf();\r\n  var tot = x_val + y_val;\r\n  var num1 = x_val / tot;\r\n  var num2 = tot - num1;\r\n\r\n  var s1 = num1.toFixed();\r\n  var s2 = num2.toFixed();\r\n\r\n  var r1 = parseInt(s1);\r\n  var r2 = parseInt(s2);\r\n\r\n  var row = 1\r\n  var col = 1\r\n\r\n  for (let i = 0; i < r1; i++) {\r\n    var x_str = row.toString();\r\n    var y_str = col.toString();\r\n    data1.push({ x: x_str, y: y_str});\r\n    if(col == 10){\r\n      row = row + 1;\r\n      col = 1\r\n    } else {\r\n      col = col + 1\r\n    }\r\n  }\r\n\r\n  for (let i = r1; i < 100; i++) {\r\n    var x_str = row.toString();\r\n    var y_str = col.toString();\r\n    data2.push({ x: x_str, y: y_str});\r\n    if(col == 10){\r\n      row = row + 1;\r\n      col = 1\r\n    } else {\r\n      col = col + 1\r\n    }\r\n  }\r\n\r\n  return([data1, data2]);\r\n}\r\n\r\nfunction WaffleChart(props) {\r\n  const chart = useRef(null);\r\n\r\n  var rs = 3600\r\n  var nrs = 6400\r\n\r\n  useLayoutEffect(() => {\r\n    let x = am4core.create(props.divid, am4charts.XYChart);\r\n\r\n    x.paddingRight = 20;\r\n    x.paddingLeft = 20;\r\n\r\n    /* Chart code */\r\n// Themes begin\r\nam4core.useTheme(am4themes_animated);\r\n// Themes end\r\n\r\n// Chart\r\nlet chart = am4core.create( props.divid, am4charts.XYChart );\r\nchart.hiddenState.properties.opacity = 0; // this creates initial fade-in\r\n//chart.colors.step = 2;\r\nchart.colors.list = [am4core.color( \"#98a2df\" ), am4core.color( \"#e96b6a\" ), am4core.color(\"#a2df98\")]\r\n\r\n// X axis\r\nlet xAxis = chart.xAxes.push( new am4charts.CategoryAxis() );\r\nxAxis.dataFields.category = \"x\";\r\nxAxis.renderer.grid.template.location = 0;\r\nxAxis.renderer.minGridDistance = 10;\r\nxAxis.renderer.labels.template.disabled = true;\r\nxAxis.data = [{ x: \"1\" }, { x: \"2\" }, { x: \"3\" }, { x: \"4\" }, { x: \"5\" }, { x: \"6\" }, { x: \"7\" }, { x: \"8\" }, { x: \"9\" }, { x: \"10\" }];\r\n\r\n// Y axis\r\nlet yAxis = chart.yAxes.push( new am4charts.CategoryAxis() );\r\nyAxis.renderer.labels.template.disabled = true;\r\nyAxis.renderer.grid.template.location = 0;\r\nyAxis.renderer.minGridDistance = 10;\r\nyAxis.dataFields.category = \"y\";\r\nyAxis.data = [{ y: \"1\" }, { y: \"2\" }, { y: \"3\" }, { y: \"4\" }, { y: \"5\" }, { y: \"6\" }, { y: \"7\" }, { y: \"8\" }, { y: \"9\" }, { y: \"10\" }];\r\n\r\n// Create series\r\nfunction createSeries(name) {\r\n  let series = chart.series.push( new am4charts.ColumnSeries() );\r\n  series.dataFields.categoryX = \"x\";\r\n  series.dataFields.categoryY = \"y\";\r\n  series.sequencedInterpolation = true;\r\n  series.defaultState.transitionDuration = 3000;\r\n  series.name = name;\r\n\r\n\r\n  // Set up column appearance\r\n  let column = series.columns.template;\r\n  column.strokeWidth = 1;\r\n  column.strokeOpacity = 1;\r\n  column.stroke = am4core.color( \"#ffffff\" );\r\n  column.width = am4core.percent( 100 );\r\n  column.height = am4core.percent( 100 );\r\n  //column.column.cornerRadius(6, 6, 6, 6);\r\n  \r\n  return series;\r\n}\r\n\r\nlet series1 = createSeries(\"Researchers\");\r\nseries1.data = [\r\n  { x: \"1\", y: \"1\" },\r\n  { x: \"1\", y: \"2\" },\r\n  { x: \"1\", y: \"3\" },\r\n  { x: \"1\", y: \"4\" },\r\n  { x: \"1\", y: \"5\" },\r\n  { x: \"1\", y: \"6\" },\r\n  { x: \"1\", y: \"7\" },\r\n  { x: \"1\", y: \"8\" },\r\n  { x: \"1\", y: \"9\" },\r\n  { x: \"1\", y: \"10\" },\r\n  \r\n  { x: \"2\", y: \"1\" },\r\n  { x: \"2\", y: \"2\" },\r\n  { x: \"2\", y: \"3\" },\r\n  { x: \"2\", y: \"4\" },\r\n  { x: \"2\", y: \"5\" },\r\n  { x: \"2\", y: \"6\" },\r\n  { x: \"2\", y: \"7\" },\r\n  { x: \"2\", y: \"8\" },\r\n  { x: \"2\", y: \"9\" },\r\n  { x: \"2\", y: \"10\" },\r\n  \r\n  { x: \"3\", y: \"1\" },\r\n  { x: \"3\", y: \"2\" },\r\n  { x: \"3\", y: \"3\" },\r\n  { x: \"3\", y: \"4\" },\r\n  { x: \"3\", y: \"5\" },\r\n  { x: \"3\", y: \"6\" },\r\n  { x: \"3\", y: \"7\" },\r\n  { x: \"3\", y: \"8\" },\r\n  { x: \"3\", y: \"9\" },\r\n  { x: \"3\", y: \"10\" },\r\n\r\n  { x: \"4\", y: \"1\" },\r\n  { x: \"4\", y: \"2\" },\r\n  { x: \"4\", y: \"3\" },\r\n  { x: \"4\", y: \"4\" },\r\n  { x: \"4\", y: \"5\" },\r\n  { x: \"4\", y: \"6\" },\r\n  { x: \"4\", y: \"7\" },\r\n  { x: \"4\", y: \"8\" },\r\n  { x: \"4\", y: \"9\" },\r\n  { x: \"4\", y: \"10\" },\r\n\r\n  { x: \"5\", y: \"1\" },\r\n  { x: \"5\", y: \"2\" },\r\n  { x: \"5\", y: \"3\" },\r\n  { x: \"5\", y: \"4\" },\r\n  { x: \"5\", y: \"5\" },\r\n  { x: \"5\", y: \"6\" },\r\n  { x: \"5\", y: \"7\" },\r\n  { x: \"5\", y: \"8\" },\r\n  { x: \"5\", y: \"9\" },\r\n  { x: \"5\", y: \"10\" },\r\n\r\n  { x: \"6\", y: \"1\" },\r\n  { x: \"6\", y: \"2\" },\r\n  { x: \"6\", y: \"3\" },\r\n  { x: \"6\", y: \"4\" },\r\n  { x: \"6\", y: \"5\" },\r\n  { x: \"6\", y: \"6\" },\r\n  { x: \"6\", y: \"7\" },\r\n  { x: \"6\", y: \"8\" },\r\n  { x: \"6\", y: \"9\" },\r\n  { x: \"6\", y: \"10\" },\r\n\r\n];\r\n\r\nlet series2 = createSeries(\"Non-Researchers\");\r\nseries2.data = [\r\n  \r\n\r\n  { x: \"7\", y: \"1\" },\r\n  { x: \"7\", y: \"2\" },\r\n  { x: \"7\", y: \"3\" },\r\n  { x: \"7\", y: \"4\" },\r\n  { x: \"7\", y: \"5\" },\r\n  { x: \"7\", y: \"6\" },\r\n  { x: \"7\", y: \"7\" },\r\n  { x: \"7\", y: \"8\" },\r\n  { x: \"7\", y: \"9\" },\r\n  { x: \"7\", y: \"10\" },\r\n\r\n  { x: \"8\", y: \"1\" },\r\n  { x: \"8\", y: \"2\" },\r\n  { x: \"8\", y: \"3\" },\r\n  { x: \"8\", y: \"4\" },\r\n  { x: \"8\", y: \"5\" },\r\n  { x: \"8\", y: \"6\" },\r\n  { x: \"8\", y: \"7\" },\r\n  { x: \"8\", y: \"8\" },\r\n  { x: \"8\", y: \"9\" },\r\n  { x: \"8\", y: \"10\" },\r\n\r\n  { x: \"9\", y: \"1\" },\r\n  { x: \"9\", y: \"2\" },\r\n  { x: \"9\", y: \"3\" },\r\n  { x: \"9\", y: \"4\" },\r\n  { x: \"9\", y: \"5\" },\r\n  { x: \"9\", y: \"6\" },\r\n  { x: \"9\", y: \"7\" },\r\n  { x: \"9\", y: \"8\" },\r\n  { x: \"9\", y: \"9\" },\r\n  { x: \"9\", y: \"10\" },\r\n\r\n  { x: \"10\", y: \"1\" },\r\n  { x: \"10\", y: \"2\" },\r\n  { x: \"10\", y: \"3\" },\r\n  { x: \"10\", y: \"4\" },\r\n  { x: \"10\", y: \"5\" },\r\n  { x: \"10\", y: \"6\" },\r\n  { x: \"10\", y: \"7\" },\r\n  { x: \"10\", y: \"8\" },\r\n  { x: \"10\", y: \"9\" },\r\n  { x: \"10\", y: \"10\" },\r\n];\r\n\r\nvar num1 = new Number(0)\r\nnum1 = props.r\r\nvar num2 = new Number(0)\r\nnum2 = props.n\r\n\r\nseries1.name = \"Researchers: \" + num1.toString();\r\nseries2.name = \"Other: \" + num2.toString();\r\n\r\nvar datas = WaffleProportionCheat(num1, num2);\r\n\r\nxAxis.data = datas[2];\r\nyAxis.data = datas[3];\r\n\r\nseries1.data = datas[0];\r\nseries2.data = datas[1];\r\n\r\n// Legend\r\nchart.legend = new am4charts.Legend();\r\nchart.legend.position = \"right\";\r\nchart.legend.scrollable = true;\r\nchart.legend.maxWidth = 200;\r\n\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n        <div id={props.divid} style={{ width: \"100%\", height: \"250px\" }}></div>\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default WaffleChart;","C:\\Users\\spenc\\Documents\\GitHub\\hci-com\\src\\containers\\Home\\components\\LineChart.tsx",["273","274","275","276","277","278","279","280","281","282","283","284"],"import React, { useRef, useLayoutEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport styled from 'styled-components';\r\nimport {space, color, layout} from 'styled-system';\r\nimport Card from 'react-bootstrap/Card';\r\nimport axios from 'axios'\r\nimport { ContactlessOutlined } from '@material-ui/icons';\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nfunction date_format(s: string) {\r\n  s = s.substring(0, 10);\r\n  s = s.replaceAll('/', '-');\r\n  return s;\r\n}\r\n\r\nfunction LineChart(props) {\r\n  const chart = useRef(null);\r\n\r\n  var rs = 3600\r\n  var nrs = 6400\r\n\r\n  useLayoutEffect(() => {\r\n    let x = am4core.create(props.id, am4charts.XYChart);\r\n\r\n    x.paddingRight = 20;\r\n    x.paddingLeft = 20;\r\n\r\n    /* Chart code */\r\n// Themes begin\r\nam4core.useTheme(am4themes_animated);\r\n// Themes end\r\n\r\n// Chart\r\nlet chart = am4core.create( props.id, am4charts.XYChart );\r\n\r\n// Add data\r\nchart.data = [ {\r\n  \"date\": \"2020-06-01\",\r\n  \"value\": 10000\r\n}, {\r\n  \"date\": \"2020-06-10\",\r\n  \"value\": 10091\r\n},\r\n{\r\n  \"date\": \"2020-06-20\",\r\n  \"value\": 10514\r\n},\r\n{\r\n  \"date\": \"2020-07-01\",\r\n  \"value\": 11111\r\n}, {\r\n  \"date\": \"2020-07-10\",\r\n  \"value\": 11138\r\n},\r\n{\r\n  \"date\": \"2020-07-20\",\r\n  \"value\": 13136\r\n},\r\n{\r\n  \"date\": \"2020-08-01\",\r\n  \"value\": 13204\r\n}, {\r\n  \"date\": \"2020-08-10\",\r\n  \"value\": 13609\r\n},\r\n{\r\n  \"date\": \"2020-08-20\",\r\n  \"value\": 14609\r\n},\r\n{\r\n  \"date\": \"2020-09-01\",\r\n  \"value\": 16609\r\n}, {\r\n  \"date\": \"2020-09-10\",\r\n  \"value\": 17111\r\n},\r\n{\r\n  \"date\": \"2020-09-20\",\r\n  \"value\": 17911\r\n},\r\n   ];\r\n\r\n//Update data\r\nvar com = props.data;\r\nvar coms:object[] = [];\r\nfor (let i = 0; i < com.length; i++){\r\n  if (com[i][props.dv] > -1){\r\n    coms.push({\"date\": date_format(com[i]['timestamp']),\r\n               \"value\": com[i][props.dv]})\r\n  }\r\n  \r\n}\r\nchart.data = coms\r\n\r\n// Create axes\r\nvar dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\ndateAxis.renderer.grid.template.location = 0;\r\ndateAxis.renderer.minGridDistance = 50;\r\n\r\nvar valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n//valueAxis.title.text = \"Followers\"\r\nvalueAxis.title.text = props.yaxis;\r\n\r\n// Create series\r\nvar series = chart.series.push(new am4charts.LineSeries());\r\nseries.dataFields.valueY = \"value\";\r\nseries.dataFields.dateX = \"date\";\r\nseries.tooltipText = \"{valueY}\";\r\nseries.strokeWidth = 3;\r\nseries.fillOpacity = 0.5;\r\nseries.minBulletDistance = 15;\r\n\r\n// Add vertical scrollbar\r\n// chart.scrollbarY = new am4core.Scrollbar();\r\n//chart.scrollbarY.marginLeft = 0;\r\n\r\n// Add cursor\r\nchart.cursor = new am4charts.XYCursor();\r\nvalueAxis.cursorTooltipEnabled = false;\r\n//chart.cursor.behavior = \"zoomY\";\r\nchart.cursor.lineX.disabled = true;\r\nchart.cursor.lineY.disabled = true;\r\n\r\n\r\n\r\n// Drop-shaped tooltips\r\nseries.tooltip.background.cornerRadius = 20;\r\nseries.tooltip.background.strokeOpacity = 0;\r\nseries.tooltip.pointerOrientation = \"vertical\";\r\nseries.tooltip.label.minWidth = 40;\r\nseries.tooltip.label.minHeight = 40;\r\nseries.tooltip.label.textAlign = \"middle\";\r\n\r\n// Make bullets grow on hover\r\nvar bullet = series.bullets.push(new am4charts.CircleBullet());\r\nbullet.circle.strokeWidth = 2;\r\nbullet.circle.radius = 4;\r\nbullet.circle.fill = am4core.color(\"#fff\");\r\n\r\nvar bullethover = bullet.states.create(\"hover\");\r\nbullethover.properties.scale = 1.3;\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n        <div id={props.id} style={{ width: \"75%\", height: \"300px\" }}></div>\r\n    </div>\r\n    \r\n  );\r\n  \r\n  }; // end am4core.ready()\r\n\r\nexport default LineChart;",{"ruleId":"285","replacedBy":"286"},{"ruleId":"287","replacedBy":"288"},{"ruleId":"289","severity":1,"message":"290","line":2,"column":10,"nodeType":"291","messageId":"292","endLine":2,"endColumn":25},{"ruleId":"293","severity":1,"message":"294","line":32,"column":7,"nodeType":"295","endLine":32,"endColumn":51},{"ruleId":"293","severity":1,"message":"294","line":33,"column":7,"nodeType":"295","endLine":33,"endColumn":52},{"ruleId":"289","severity":1,"message":"290","line":4,"column":10,"nodeType":"291","messageId":"292","endLine":4,"endColumn":25},{"ruleId":"289","severity":1,"message":"296","line":5,"column":28,"nodeType":"291","messageId":"292","endLine":5,"endColumn":43},{"ruleId":"289","severity":1,"message":"297","line":2,"column":8,"nodeType":"291","messageId":"292","endLine":2,"endColumn":11},{"ruleId":"289","severity":1,"message":"298","line":3,"column":8,"nodeType":"291","messageId":"292","endLine":3,"endColumn":14},{"ruleId":"289","severity":1,"message":"290","line":6,"column":10,"nodeType":"291","messageId":"292","endLine":6,"endColumn":25},{"ruleId":"289","severity":1,"message":"299","line":9,"column":38,"nodeType":"291","messageId":"292","endLine":9,"endColumn":53},{"ruleId":"289","severity":1,"message":"300","line":9,"column":55,"nodeType":"291","messageId":"292","endLine":9,"endColumn":70},{"ruleId":"289","severity":1,"message":"301","line":10,"column":13,"nodeType":"291","messageId":"292","endLine":10,"endColumn":20},{"ruleId":"289","severity":1,"message":"302","line":11,"column":13,"nodeType":"291","messageId":"292","endLine":11,"endColumn":22},{"ruleId":"289","severity":1,"message":"303","line":12,"column":8,"nodeType":"291","messageId":"292","endLine":12,"endColumn":26},{"ruleId":"289","severity":1,"message":"304","line":13,"column":10,"nodeType":"291","messageId":"292","endLine":13,"endColumn":15},{"ruleId":"289","severity":1,"message":"305","line":16,"column":9,"nodeType":"291","messageId":"292","endLine":16,"endColumn":20},{"ruleId":"289","severity":1,"message":"306","line":20,"column":9,"nodeType":"291","messageId":"292","endLine":20,"endColumn":15},{"ruleId":"289","severity":1,"message":"307","line":23,"column":7,"nodeType":"291","messageId":"292","endLine":23,"endColumn":8},{"ruleId":"289","severity":1,"message":"308","line":39,"column":9,"nodeType":"291","messageId":"292","endLine":39,"endColumn":10},{"ruleId":"289","severity":1,"message":"309","line":52,"column":9,"nodeType":"291","messageId":"292","endLine":52,"endColumn":12},{"ruleId":"289","severity":1,"message":"310","line":64,"column":9,"nodeType":"291","messageId":"292","endLine":64,"endColumn":14},{"ruleId":"289","severity":1,"message":"311","line":72,"column":12,"nodeType":"291","messageId":"292","endLine":72,"endColumn":22},{"ruleId":"312","severity":1,"message":"313","line":104,"column":12,"nodeType":"314","messageId":"315","endLine":104,"endColumn":51},{"ruleId":"293","severity":1,"message":"294","line":184,"column":13,"nodeType":"295","endLine":184,"endColumn":44},{"ruleId":"289","severity":1,"message":"290","line":4,"column":10,"nodeType":"291","messageId":"292","endLine":4,"endColumn":25},{"ruleId":"289","severity":1,"message":"316","line":3,"column":9,"nodeType":"291","messageId":"292","endLine":3,"endColumn":14},{"ruleId":"289","severity":1,"message":"317","line":3,"column":16,"nodeType":"291","messageId":"292","endLine":3,"endColumn":21},{"ruleId":"289","severity":1,"message":"318","line":3,"column":23,"nodeType":"291","messageId":"292","endLine":3,"endColumn":29},{"ruleId":"289","severity":1,"message":"301","line":5,"column":13,"nodeType":"291","messageId":"292","endLine":5,"endColumn":20},{"ruleId":"289","severity":1,"message":"302","line":6,"column":13,"nodeType":"291","messageId":"292","endLine":6,"endColumn":22},{"ruleId":"289","severity":1,"message":"303","line":7,"column":8,"nodeType":"291","messageId":"292","endLine":7,"endColumn":26},{"ruleId":"289","severity":1,"message":"316","line":3,"column":9,"nodeType":"291","messageId":"292","endLine":3,"endColumn":14},{"ruleId":"289","severity":1,"message":"317","line":3,"column":16,"nodeType":"291","messageId":"292","endLine":3,"endColumn":21},{"ruleId":"289","severity":1,"message":"318","line":3,"column":23,"nodeType":"291","messageId":"292","endLine":3,"endColumn":29},{"ruleId":"289","severity":1,"message":"319","line":6,"column":8,"nodeType":"291","messageId":"292","endLine":6,"endColumn":15},{"ruleId":"289","severity":1,"message":"320","line":9,"column":8,"nodeType":"291","messageId":"292","endLine":9,"endColumn":19},{"ruleId":"289","severity":1,"message":"321","line":10,"column":8,"nodeType":"291","messageId":"292","endLine":10,"endColumn":16},{"ruleId":"289","severity":1,"message":"322","line":11,"column":8,"nodeType":"291","messageId":"292","endLine":11,"endColumn":20},{"ruleId":"289","severity":1,"message":"323","line":2,"column":8,"nodeType":"291","messageId":"292","endLine":2,"endColumn":12},{"ruleId":"289","severity":1,"message":"324","line":6,"column":8,"nodeType":"291","messageId":"292","endLine":6,"endColumn":14},{"ruleId":"289","severity":1,"message":"316","line":7,"column":9,"nodeType":"291","messageId":"292","endLine":7,"endColumn":14},{"ruleId":"289","severity":1,"message":"317","line":7,"column":16,"nodeType":"291","messageId":"292","endLine":7,"endColumn":21},{"ruleId":"289","severity":1,"message":"318","line":7,"column":23,"nodeType":"291","messageId":"292","endLine":7,"endColumn":29},{"ruleId":"289","severity":1,"message":"325","line":8,"column":8,"nodeType":"291","messageId":"292","endLine":8,"endColumn":12},{"ruleId":"289","severity":1,"message":"326","line":40,"column":7,"nodeType":"291","messageId":"292","endLine":40,"endColumn":9},{"ruleId":"327","severity":1,"message":"328","line":60,"column":12,"nodeType":"329","messageId":"330","endLine":60,"endColumn":14},{"ruleId":"331","severity":1,"message":"332","line":69,"column":9,"nodeType":"291","messageId":"333","endLine":69,"endColumn":14},{"ruleId":"331","severity":1,"message":"334","line":70,"column":9,"nodeType":"291","messageId":"333","endLine":70,"endColumn":14},{"ruleId":"327","severity":1,"message":"328","line":72,"column":12,"nodeType":"329","messageId":"330","endLine":72,"endColumn":14},{"ruleId":"331","severity":1,"message":"332","line":81,"column":9,"nodeType":"291","messageId":"333","endLine":81,"endColumn":14},{"ruleId":"331","severity":1,"message":"334","line":82,"column":9,"nodeType":"291","messageId":"333","endLine":82,"endColumn":14},{"ruleId":"327","severity":1,"message":"328","line":84,"column":12,"nodeType":"329","messageId":"330","endLine":84,"endColumn":14},{"ruleId":"289","severity":1,"message":"335","line":95,"column":10,"nodeType":"291","messageId":"292","endLine":95,"endColumn":26},{"ruleId":"327","severity":1,"message":"328","line":125,"column":12,"nodeType":"329","messageId":"330","endLine":125,"endColumn":14},{"ruleId":"331","severity":1,"message":"332","line":134,"column":9,"nodeType":"291","messageId":"333","endLine":134,"endColumn":14},{"ruleId":"331","severity":1,"message":"334","line":135,"column":9,"nodeType":"291","messageId":"333","endLine":135,"endColumn":14},{"ruleId":"327","severity":1,"message":"328","line":137,"column":12,"nodeType":"329","messageId":"330","endLine":137,"endColumn":14},{"ruleId":"331","severity":1,"message":"332","line":146,"column":9,"nodeType":"291","messageId":"333","endLine":146,"endColumn":14},{"ruleId":"331","severity":1,"message":"334","line":147,"column":9,"nodeType":"291","messageId":"333","endLine":147,"endColumn":14},{"ruleId":"327","severity":1,"message":"328","line":149,"column":12,"nodeType":"329","messageId":"330","endLine":149,"endColumn":14},{"ruleId":"289","severity":1,"message":"336","line":163,"column":9,"nodeType":"291","messageId":"292","endLine":163,"endColumn":15},{"ruleId":"289","severity":1,"message":"337","line":354,"column":7,"nodeType":"291","messageId":"292","endLine":354,"endColumn":20},{"ruleId":"338","severity":1,"message":"339","line":355,"column":14,"nodeType":"340","messageId":"341","endLine":355,"endColumn":27},{"ruleId":"338","severity":1,"message":"339","line":359,"column":14,"nodeType":"340","messageId":"341","endLine":359,"endColumn":27},{"ruleId":"338","severity":1,"message":"339","line":363,"column":14,"nodeType":"340","messageId":"341","endLine":363,"endColumn":27},{"ruleId":"289","severity":1,"message":"323","line":2,"column":8,"nodeType":"291","messageId":"292","endLine":2,"endColumn":12},{"ruleId":"289","severity":1,"message":"324","line":6,"column":8,"nodeType":"291","messageId":"292","endLine":6,"endColumn":14},{"ruleId":"289","severity":1,"message":"316","line":7,"column":9,"nodeType":"291","messageId":"292","endLine":7,"endColumn":14},{"ruleId":"289","severity":1,"message":"317","line":7,"column":16,"nodeType":"291","messageId":"292","endLine":7,"endColumn":21},{"ruleId":"289","severity":1,"message":"318","line":7,"column":23,"nodeType":"291","messageId":"292","endLine":7,"endColumn":29},{"ruleId":"289","severity":1,"message":"325","line":8,"column":8,"nodeType":"291","messageId":"292","endLine":8,"endColumn":12},{"ruleId":"289","severity":1,"message":"342","line":28,"column":7,"nodeType":"291","messageId":"292","endLine":28,"endColumn":9},{"ruleId":"327","severity":1,"message":"328","line":37,"column":12,"nodeType":"329","messageId":"330","endLine":37,"endColumn":14},{"ruleId":"331","severity":1,"message":"332","line":46,"column":9,"nodeType":"291","messageId":"333","endLine":46,"endColumn":14},{"ruleId":"331","severity":1,"message":"334","line":47,"column":9,"nodeType":"291","messageId":"333","endLine":47,"endColumn":14},{"ruleId":"327","severity":1,"message":"328","line":49,"column":12,"nodeType":"329","messageId":"330","endLine":49,"endColumn":14},{"ruleId":"289","severity":1,"message":"343","line":61,"column":9,"nodeType":"291","messageId":"292","endLine":61,"endColumn":14},{"ruleId":"289","severity":1,"message":"344","line":63,"column":7,"nodeType":"291","messageId":"292","endLine":63,"endColumn":9},{"ruleId":"289","severity":1,"message":"345","line":64,"column":7,"nodeType":"291","messageId":"292","endLine":64,"endColumn":10},{"ruleId":"338","severity":1,"message":"339","line":248,"column":9,"nodeType":"340","messageId":"341","endLine":248,"endColumn":24},{"ruleId":"338","severity":1,"message":"339","line":249,"column":9,"nodeType":"340","messageId":"341","endLine":249,"endColumn":23},{"ruleId":"289","severity":1,"message":"337","line":257,"column":7,"nodeType":"291","messageId":"292","endLine":257,"endColumn":20},{"ruleId":"338","severity":1,"message":"339","line":258,"column":13,"nodeType":"340","messageId":"341","endLine":258,"endColumn":26},{"ruleId":"289","severity":1,"message":"316","line":3,"column":9,"nodeType":"291","messageId":"292","endLine":3,"endColumn":14},{"ruleId":"289","severity":1,"message":"317","line":3,"column":16,"nodeType":"291","messageId":"292","endLine":3,"endColumn":21},{"ruleId":"289","severity":1,"message":"318","line":3,"column":23,"nodeType":"291","messageId":"292","endLine":3,"endColumn":29},{"ruleId":"289","severity":1,"message":"319","line":6,"column":8,"nodeType":"291","messageId":"292","endLine":6,"endColumn":15},{"ruleId":"289","severity":1,"message":"320","line":9,"column":8,"nodeType":"291","messageId":"292","endLine":9,"endColumn":19},{"ruleId":"289","severity":1,"message":"321","line":10,"column":8,"nodeType":"291","messageId":"292","endLine":10,"endColumn":16},{"ruleId":"289","severity":1,"message":"322","line":11,"column":8,"nodeType":"291","messageId":"292","endLine":11,"endColumn":20},{"ruleId":"289","severity":1,"message":"323","line":2,"column":8,"nodeType":"291","messageId":"292","endLine":2,"endColumn":12},{"ruleId":"289","severity":1,"message":"324","line":6,"column":8,"nodeType":"291","messageId":"292","endLine":6,"endColumn":14},{"ruleId":"289","severity":1,"message":"316","line":7,"column":9,"nodeType":"291","messageId":"292","endLine":7,"endColumn":14},{"ruleId":"289","severity":1,"message":"317","line":7,"column":16,"nodeType":"291","messageId":"292","endLine":7,"endColumn":21},{"ruleId":"289","severity":1,"message":"318","line":7,"column":23,"nodeType":"291","messageId":"292","endLine":7,"endColumn":29},{"ruleId":"289","severity":1,"message":"325","line":8,"column":8,"nodeType":"291","messageId":"292","endLine":8,"endColumn":12},{"ruleId":"289","severity":1,"message":"343","line":13,"column":9,"nodeType":"291","messageId":"292","endLine":13,"endColumn":14},{"ruleId":"289","severity":1,"message":"344","line":15,"column":7,"nodeType":"291","messageId":"292","endLine":15,"endColumn":9},{"ruleId":"289","severity":1,"message":"345","line":16,"column":7,"nodeType":"291","messageId":"292","endLine":16,"endColumn":10},{"ruleId":"289","severity":1,"message":"316","line":3,"column":9,"nodeType":"291","messageId":"292","endLine":3,"endColumn":14},{"ruleId":"289","severity":1,"message":"317","line":3,"column":16,"nodeType":"291","messageId":"292","endLine":3,"endColumn":21},{"ruleId":"289","severity":1,"message":"318","line":3,"column":23,"nodeType":"291","messageId":"292","endLine":3,"endColumn":29},{"ruleId":"289","severity":1,"message":"325","line":4,"column":8,"nodeType":"291","messageId":"292","endLine":4,"endColumn":12},{"ruleId":"289","severity":1,"message":"320","line":5,"column":8,"nodeType":"291","messageId":"292","endLine":5,"endColumn":19},{"ruleId":"289","severity":1,"message":"316","line":3,"column":9,"nodeType":"291","messageId":"292","endLine":3,"endColumn":14},{"ruleId":"289","severity":1,"message":"317","line":3,"column":16,"nodeType":"291","messageId":"292","endLine":3,"endColumn":21},{"ruleId":"289","severity":1,"message":"318","line":3,"column":23,"nodeType":"291","messageId":"292","endLine":3,"endColumn":29},{"ruleId":"289","severity":1,"message":"320","line":5,"column":8,"nodeType":"291","messageId":"292","endLine":5,"endColumn":19},{"ruleId":"289","severity":1,"message":"346","line":20,"column":7,"nodeType":"291","messageId":"292","endLine":20,"endColumn":15},{"ruleId":"289","severity":1,"message":"347","line":57,"column":11,"nodeType":"291","messageId":"292","endLine":57,"endColumn":14},{"ruleId":"289","severity":1,"message":"323","line":2,"column":8,"nodeType":"291","messageId":"292","endLine":2,"endColumn":12},{"ruleId":"289","severity":1,"message":"324","line":6,"column":8,"nodeType":"291","messageId":"292","endLine":6,"endColumn":14},{"ruleId":"289","severity":1,"message":"316","line":7,"column":9,"nodeType":"291","messageId":"292","endLine":7,"endColumn":14},{"ruleId":"289","severity":1,"message":"317","line":7,"column":16,"nodeType":"291","messageId":"292","endLine":7,"endColumn":21},{"ruleId":"289","severity":1,"message":"318","line":7,"column":23,"nodeType":"291","messageId":"292","endLine":7,"endColumn":29},{"ruleId":"289","severity":1,"message":"325","line":8,"column":8,"nodeType":"291","messageId":"292","endLine":8,"endColumn":12},{"ruleId":"289","severity":1,"message":"348","line":9,"column":8,"nodeType":"291","messageId":"292","endLine":9,"endColumn":13},{"ruleId":"289","severity":1,"message":"349","line":11,"column":5,"nodeType":"291","messageId":"292","endLine":11,"endColumn":12},{"ruleId":"289","severity":1,"message":"342","line":37,"column":7,"nodeType":"291","messageId":"292","endLine":37,"endColumn":9},{"ruleId":"327","severity":1,"message":"328","line":57,"column":12,"nodeType":"329","messageId":"330","endLine":57,"endColumn":14},{"ruleId":"331","severity":1,"message":"332","line":66,"column":9,"nodeType":"291","messageId":"333","endLine":66,"endColumn":14},{"ruleId":"331","severity":1,"message":"334","line":67,"column":9,"nodeType":"291","messageId":"333","endLine":67,"endColumn":14},{"ruleId":"327","severity":1,"message":"328","line":69,"column":12,"nodeType":"329","messageId":"330","endLine":69,"endColumn":14},{"ruleId":"289","severity":1,"message":"335","line":80,"column":10,"nodeType":"291","messageId":"292","endLine":80,"endColumn":26},{"ruleId":"289","severity":1,"message":"342","line":93,"column":7,"nodeType":"291","messageId":"292","endLine":93,"endColumn":9},{"ruleId":"327","severity":1,"message":"328","line":102,"column":12,"nodeType":"329","messageId":"330","endLine":102,"endColumn":14},{"ruleId":"331","severity":1,"message":"332","line":111,"column":9,"nodeType":"291","messageId":"333","endLine":111,"endColumn":14},{"ruleId":"331","severity":1,"message":"334","line":112,"column":9,"nodeType":"291","messageId":"333","endLine":112,"endColumn":14},{"ruleId":"327","severity":1,"message":"328","line":114,"column":12,"nodeType":"329","messageId":"330","endLine":114,"endColumn":14},{"ruleId":"289","severity":1,"message":"343","line":126,"column":9,"nodeType":"291","messageId":"292","endLine":126,"endColumn":14},{"ruleId":"289","severity":1,"message":"344","line":128,"column":7,"nodeType":"291","messageId":"292","endLine":128,"endColumn":9},{"ruleId":"289","severity":1,"message":"345","line":129,"column":7,"nodeType":"291","messageId":"292","endLine":129,"endColumn":10},{"ruleId":"338","severity":1,"message":"339","line":305,"column":12,"nodeType":"340","messageId":"341","endLine":305,"endColumn":25},{"ruleId":"338","severity":1,"message":"339","line":307,"column":12,"nodeType":"340","messageId":"341","endLine":307,"endColumn":25},{"ruleId":"350","severity":1,"message":"351","line":329,"column":6,"nodeType":"352","endLine":329,"endColumn":8,"suggestions":"353"},{"ruleId":"289","severity":1,"message":"323","line":2,"column":8,"nodeType":"291","messageId":"292","endLine":2,"endColumn":12},{"ruleId":"289","severity":1,"message":"324","line":6,"column":8,"nodeType":"291","messageId":"292","endLine":6,"endColumn":14},{"ruleId":"289","severity":1,"message":"316","line":7,"column":9,"nodeType":"291","messageId":"292","endLine":7,"endColumn":14},{"ruleId":"289","severity":1,"message":"317","line":7,"column":16,"nodeType":"291","messageId":"292","endLine":7,"endColumn":21},{"ruleId":"289","severity":1,"message":"318","line":7,"column":23,"nodeType":"291","messageId":"292","endLine":7,"endColumn":29},{"ruleId":"289","severity":1,"message":"325","line":8,"column":8,"nodeType":"291","messageId":"292","endLine":8,"endColumn":12},{"ruleId":"289","severity":1,"message":"348","line":9,"column":8,"nodeType":"291","messageId":"292","endLine":9,"endColumn":13},{"ruleId":"289","severity":1,"message":"354","line":10,"column":10,"nodeType":"291","messageId":"292","endLine":10,"endColumn":29},{"ruleId":"289","severity":1,"message":"343","line":21,"column":9,"nodeType":"291","messageId":"292","endLine":21,"endColumn":14},{"ruleId":"289","severity":1,"message":"344","line":23,"column":7,"nodeType":"291","messageId":"292","endLine":23,"endColumn":9},{"ruleId":"289","severity":1,"message":"345","line":24,"column":7,"nodeType":"291","messageId":"292","endLine":24,"endColumn":10},{"ruleId":"350","severity":1,"message":"355","line":148,"column":6,"nodeType":"352","endLine":148,"endColumn":8,"suggestions":"356"},"no-native-reassign",["357"],"no-negated-in-lhs",["358"],"@typescript-eslint/no-unused-vars","'FontAwesomeIcon' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReactSeoLogoSvg' is defined but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'IndividualStats' is defined but never used.","'MyContributions' is defined but never used.","'am4core' is defined but never used.","'am4charts' is defined but never used.","'am4themes_animated' is defined but never used.","'Tweet' is defined but never used.","'featureList' is assigned a value but never used.","'sample' is assigned a value but never used.","'x' is assigned a value but never used.","'u' is assigned a value but never used.","'com' is assigned a value but never used.","'snaps' is assigned a value but never used.","'CSVToArray' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'space' is defined but never used.","'color' is defined but never used.","'layout' is defined but never used.","'Overlay' is defined but never used.","'CardColumns' is defined but never used.","'MyWaffle' is defined but never used.","'MyDownstream' is defined but never used.","'logo' is defined but never used.","'styled' is defined but never used.","'Card' is defined but never used.","'r3' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-redeclare","'x_str' is already defined.","redeclared","'y_str' is already defined.","'WaffleProportion' is defined but never used.","'chart2' is assigned a value but never used.","'coms' is assigned a value but never used.","no-new-wrappers","Do not use Number as a constructor.","NewExpression","noConstructor","'r2' is assigned a value but never used.","'chart' is assigned a value but never used.","'rs' is assigned a value but never used.","'nrs' is assigned a value but never used.","'Subtitle' is assigned a value but never used.","'big' is assigned a value but never used.","'axios' is defined but never used.","'user_id' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useLayoutEffect has missing dependencies: 'props.divid', 'props.n', and 'props.r'. Either include them or remove the dependency array.","ArrayExpression",["359"],"'ContactlessOutlined' is defined but never used.","React Hook useLayoutEffect has missing dependencies: 'props.data', 'props.dv', 'props.id', and 'props.yaxis'. Either include them or remove the dependency array.",["360"],"no-global-assign","no-unsafe-negation",{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},"Update the dependencies array to be: [props.divid, props.n, props.r]",{"range":"365","text":"366"},"Update the dependencies array to be: [props.data, props.dv, props.id, props.yaxis]",{"range":"367","text":"368"},[7789,7791],"[props.divid, props.n, props.r]",[3443,3445],"[props.data, props.dv, props.id, props.yaxis]"]