{"version":3,"sources":["components/Footer.tsx","config/routes.config.ts","components/NavBar.tsx","components/MetaInfo.tsx","components/NotFound.tsx","components/BackToTop.tsx","Layout.tsx","config/features.config.ts","containers/Home/Home.tsx","containers/About/About.tsx","withTracker.tsx","App.tsx","config/fa.config.ts","serviceWorker.ts","index.tsx"],"names":["Footer","className","RoutesConfig","Object","freeze","Home","path","exact","displayName","activeClassName","icon","metaInfo","title","description","About","NavBar","role","aria-label","to","MetaInfo","React","memo","Helmet","name","content","NotFound","useEffect","window","location","pathname","href","notificationClassName","size","scrollOptions","delay","duration","smooth","BackToTopLink","styled","a","$show","AngleDoubleUpIcon","FontAwesomeIcon","BackToTop","showRef","useRef","useState","show","setShow","handleScroll","scrollY","pageYOffset","current","addEventListener","removeEventListener","onClick","animateScroll","scrollToTop","Layout","children","FeatureInfoConfig","typescript","css","pwa","reacthelmet","packageName","reactga","prerender","useMemo","keys","map","key","src","ReactGA","initialize","gaOptions","cookieFlags","withTracker","WrappedComponent","options","trackPage","page","set","pageview","props","App","component","library","add","faCheck","faReact","faGithub","faMediumM","faTwitter","faInfoCircle","faAngleDoubleUp","faExternalLinkAlt","faExclamationCircle","Boolean","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.059e55a5.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Footer: React.FC = () => (\n  <footer className='footer'>\n    {/* <div className='buttons'>\n      <a\n        target='_blank'\n        aria-label='GitHub'\n        rel='noopener noreferrer'\n        className='button is-medium'\n        href='https://github.com/based-ghost'\n      >\n        <FontAwesomeIcon icon={['fab', 'github']} />\n      </a>\n      <a\n        href='#/'\n        aria-label='Twitter'\n        className='button is-medium'\n      >\n        <FontAwesomeIcon icon={['fab', 'twitter']} />\n      </a>\n      <a\n        href='#/'\n        aria-label='Medium'\n        className='button is-medium'\n      >\n        <FontAwesomeIcon icon={['fab', 'medium-m']} />\n      </a>\n    </div> */}\n    <div className='content'>insert CSE and HCDE logo</div>\n  </footer>\n);\n\nexport default Footer;\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\n\nexport type MetaInfoProps = {\n  readonly title?: string;\n  readonly description?: string;\n};\n\nexport type Route = {\n  readonly path: string;\n  readonly icon: IconProp;\n  readonly exact?: boolean;\n  readonly displayName: string;\n  readonly activeClassName: string;\n  readonly metaInfo: MetaInfoProps;\n};\n\nexport const RoutesConfig = Object.freeze<Record<string, Route>>({\n  Home: {\n    path: '/',\n    exact: true,\n    displayName: 'Home',\n    activeClassName: 'is-active',\n    icon: 'home',\n    metaInfo: {\n      title: 'HCI Community Analytics',\n      description: 'Home page description - limit of 160 characters (try for 150-155).'\n    }\n  },\n  About: {\n    path: '/about',\n    exact: true,\n    displayName: 'About',\n    activeClassName: 'is-active',\n    icon: 'info',\n    metaInfo: {\n      title: 'About | HCI Community Analytics',\n      description: 'About page description - limit of 160 characters (try for 150-155).'\n    }\n  }\n});\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { RoutesConfig } from '../config/routes.config';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ReactComponent as ReactSeoLogoSvg } from '../assets/img/ReactSeoLogo.svg';\n\nconst NavBar: React.FC = () => (\n  <nav\n    role='navigation'\n    className='navbar'\n    aria-label='main navigation'\n  >\n    <div className='navbar-wrapper'>\n      <div className='brand-wrapper'>\n        Insert Logo Here\n      </div>\n      <div className='navbar-routes'>\n        <NavLink\n          className='navbar-item'\n          to={RoutesConfig.Home.path}\n          exact={RoutesConfig.Home.exact}\n          activeClassName={RoutesConfig.Home.activeClassName}\n        >\n          <span>{RoutesConfig.Home.displayName}</span>\n        </NavLink>\n        <NavLink\n          className='navbar-item'\n          to={RoutesConfig.About.path}\n          exact={RoutesConfig.About.exact}\n          activeClassName={RoutesConfig.About.activeClassName}\n        >\n          <span>{RoutesConfig.About.displayName}</span>\n        </NavLink>\n      \n      </div>\n    </div>\n  </nav>\n);\n\nexport default NavBar;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { MetaInfoProps } from '../config/routes.config';\n\nconst MetaInfo: React.FC<MetaInfoProps> = React.memo(({ title, description }) => (\n  <Helmet>\n    <title>{title}</title>\n    <meta name='og:title' content={title} />\n    <meta name='description' content={description} />\n    <meta name='og:description' content={description} />\n  </Helmet>\n));\n\nMetaInfo.displayName = 'MetaInfo';\n\nexport default MetaInfo;\n","import React, { useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst NotFound: React.FC = () => {\n  useEffect(() => {\n    if (window.location.pathname !== '/404') {\n      window.location.href = '/404';\n    }\n  }, []);\n\n  const notificationClassName = `notification tile is-child is-danger ${\n    window?.location.pathname === '/404' ? 'rubberBand-animation' : 'hide'\n  }`;\n\n  return (\n    <section className='container view-wrapper'>\n      <div className='tile is-parent is-8 is-vertical is-notification-tile is-not-found-tile'>\n        <div className={notificationClassName}>\n          <div>\n            <FontAwesomeIcon icon='exclamation-circle' size='2x' />\n            <span className='title'>404 Not Found</span>\n          </div>\n          <p className='subtitle'>The requested page could not be found.</p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default NotFound;\n","import { useEffect, useState, useRef, FunctionComponent } from 'react';\nimport styled from 'styled-components';\nimport { animateScroll } from 'react-scroll';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nconst scrollOptions = {\n  delay: 5,\n  duration: 500,\n  smooth: 'easeInOutCubic'\n};\n\nconst BackToTopLink = styled.a<{ $show: boolean }>`\n  width: 3.5rem;\n  z-index: 9999;\n  display: block;\n  height: 3.5rem;\n  right: 1.25rem;\n  cursor: pointer;\n  position: fixed;\n  user-select: none;\n  border-radius: 50%;\n  -webkit-touch-callout: none;\n  background: rgb(37, 40, 47);\n  -webkit-tap-highlight-color: transparent;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 0px 20px;\n  transition: opacity 0.4s ease, bottom 0.4s ease;\n  bottom: ${({ $show }) => $show ? '1.25rem' : '-3.5rem'};\n  opacity: ${({ $show }) => $show ? 1 : 0};\n`;\n\nconst AngleDoubleUpIcon = styled(FontAwesomeIcon)`\n  display: block;\n  color: #61dafb;\n  font-size: 1.75em;\n  padding-left: 0.1rem;\n  margin: 0.75rem auto auto auto;\n`;\n\n// Write the show state value to a ref so we can use it as a check to prevent\n// ...re-renders on every scroll down that triggers a show for the button\nconst BackToTop: FunctionComponent = () => {\n  const showRef = useRef<boolean>(false);\n  const [show, setShow] = useState<boolean>(false);\n\n  useEffect(() => {\n    const handleScroll = (): void => {\n      const scrollY = (window.scrollY || window.pageYOffset);\n\n      if (!showRef.current && scrollY > 100) {\n        showRef.current = true;\n        setShow(showRef.current);\n      } else if (scrollY === 0) {\n        showRef.current = false;\n        setShow(showRef.current);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <BackToTopLink\n      $show={show}\n      role='button'\n      aria-label='BackToTop'\n      onClick={() => animateScroll.scrollToTop(scrollOptions)}\n    >\n      <AngleDoubleUpIcon icon='angle-double-up' />\n    </BackToTopLink>\n  );\n};\n\nexport default BackToTop;","import React, { Fragment } from 'react';\nimport { Footer, NavBar, BackToTop } from './components';\n\nconst Layout: React.FC = ({ children }) => (\n  <Fragment>\n    <NavBar />\n    {children}\n    <BackToTop />\n    <Footer />\n  </Fragment>\n);\n\nexport default Layout;\n","export type FeatureInfo = {\n  readonly description: string;\n  readonly packageName?: string;\n};\n\nexport const FeatureInfoConfig: Record<string, FeatureInfo> = {\n  typescript: {\n    description: 'TypeScript + TSX'\n  },\n  css: {\n    description: 'UI styled with Bulma CSS + SASS + Font Awesome 5 (svg-core)'\n  },\n  pwa: {\n    description: 'Configured as a (PWA) Progressive Web App'\n  },\n  reacthelmet: {\n    description: 'Meta tags dynamically handled per route using',\n    packageName: 'react-helmet'\n  },\n  reactga: {\n    description: 'Google Analytics ready to go and easily configurable using',\n    packageName: 'react-ga'\n  },\n  prerender: {\n    description: 'Configured to serve prerendered html using',\n    packageName: 'react-snapshot'\n  },\n};","import React, { useMemo } from 'react';\nimport { FeatureList } from './components';\nimport { MetaInfo } from '../../components';\nimport { RoutesConfig } from '../../config/routes.config';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FeatureInfoConfig, FeatureInfo } from '../../config/features.config';\n\nconst Home: React.FC = () => {\n  const featureList = useMemo<FeatureInfo[]>(() => {\n    return Object.keys(FeatureInfoConfig).map((key) => FeatureInfoConfig[key]);\n  }, []);\n\n  return (\n    <div className='view-wrapper'>\n      <MetaInfo {...RoutesConfig.Home.metaInfo} />\n      \n      <section className='container dashboard-content'>\n      <div className='columns'>\n          <div className='column'>\n            <p className='title'>Lorem Ipsum</p>\n            <div className='content'>\n              Lorem ipsum dolor sit amet, alia appareat usu id, has legere facilis\n              in. Nam inani malorum epicuri id, illud eleifend reformidans nec cu.\n              Stet meis rebum quo an, ad recusabo praesent reprimique duo, ne\n              delectus expetendis philosophia nam. Mel lorem recusabo ex, vim\n              congue facilisis eu, id vix oblique mentitum. Vide aeterno duo ei.\n              Qui ne urbanitas conceptam deseruisse, commune philosophia eos no.\n              Id ullum reprimique qui, vix ei malorum assueverit contentiones. Nec\n              facilis dignissim efficiantur ad, tantas tempor nam in. Per feugait\n              atomorum ut. Novum appareat ei usu, an usu omnium concludaturque. Et\n              nam latine mentitum, impedit explicari ullamcorper ut est, vis ipsum\n              viderer ei. Porro essent eu per, ut tantas dissentias vim. Dicant\n              regione argumentum vis id, adipisci accusata postulant at vix.\n              Adipisci vituperata ea duo, eu summo detracto mei, et per option\n              periculis. Eos laudem vivendo ex.\n            </div>\n          </div>\n          <div className = 'column'>\n            <img src = 'https://miro.medium.com/max/2978/1*rmq7bd3GFjcwfXtkrBQaPQ.png'></img>\n          </div>\n        </div>\n        <hr/>\n\n        <div className='columns'>\n          <div className='column'>\n            <p className='subtitle'>Community Followers</p>\n            <div className='content'>\n              <p>\n                Insert Waffle Chart and info here\n                <img src='https://i.imgur.com/ZWMG58P.png'></img>\n              </p>\n              \n            </div>\n          </div>\n          <div className='column'>\n            <p className='subtitle'>Average Followers</p>\n            <div className='content'>\n              <p>\n                Insert Waffle Chart and info here\n                <img src='https://i.imgur.com/W7ABxos.png'></img>\n              </p>\n            </div>\n          </div>\n          <div className='column'>\n            <p className='subtitle'>Average Downstream Audience</p>\n            <div className='content'>\n              <p>\n                Insert Waffle Chart and info here\n                <img src='https://i.imgur.com/VWjwhus.png'></img>\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <hr />\n        \n        <div className='columns'>\n          <div className='column'>\n            <p className='subtitle'>Follower Breakdowns</p>\n              <div className='content'>\n                <div className='columns'>\n                  <div className = 'column'>\n                    My Followers\n                    <img src ='https://i.imgur.com/UuBv2ob.png'></img>\n                  </div>\n                  \n                  <div className = 'column'>\n                    My Downstream Audience\n                    <img src = 'https://i.imgur.com/QJ04ATd.png'></img>\n                  </div>\n                </div>\n              </div>\n          </div>\n          <div className='column'>\n            <p className='subtitle'>Tweet Engagement</p>\n            <div className='content'>\n              <p>\n                Insert Waffle Chart and info here\n                <img src='https://i.imgur.com/tzr4R8C.png'></img>\n              </p>\n            </div>\n          </div>\n        \n        </div>\n        <hr />\n\n        <div className='columns'>\n          <div className='column'>\n            <p className='subtitle'>My Tweets</p>\n            <div className='content'>\n              <p>\n                Insert Waffle Chart and info here\n              </p>\n              \n            </div>\n          </div>\n        </div>\n\n        <hr/>\n\n        <div className='columns'>\n          <div className='column'>\n            <p className='subtitle'>My Followers</p>\n            <div className='content'>\n              <p>\n                Insert Waffle Chart and info here\n              </p>\n              \n            </div>\n          </div>\n        </div>\n        <hr />\n      </section>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { MetaInfo } from '../../components';\nimport { RoutesConfig } from '../../config/routes.config';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst About: React.FC = () => (\n  <div className='container view-wrapper'>\n    <section className = 'container dashboard-content'>\n    <MetaInfo {...RoutesConfig.About.metaInfo} />\n    {/* { <div className='tile is-parent is-8 is-vertical is-notification-tile'>\n      <div className='notification tile is-child is-primary pageSlideDown-animation'>\n        <div>\n          <FontAwesomeIcon icon='info-circle' size='2x' />\n          <span className='title'>About Page</span>\n        </div>\n        <p className='subtitle'>Very interesting information may go here.</p>\n      </div>\n    </div> } */}\n    <div className='columns'>\n      <div className='column'>\n        <p className='title'>About the Project</p>\n        <div className='content'>\n          Lorem ipsum dolor sit amet, alia appareat usu id, has legere facilis\n          in. Nam inani malorum epicuri id, illud eleifend reformidans nec cu.\n          Stet meis rebum quo an, ad recusabo praesent reprimique duo, ne\n          delectus expetendis philosophia nam. Mel lorem recusabo ex, vim\n          congue facilisis eu, id vix oblique mentitum. Vide aeterno duo ei.\n          Qui ne urbanitas conceptam deseruisse, commune philosophia eos no.\n          Id ullum reprimique qui, vix ei malorum assueverit contentiones. Nec\n          facilis dignissim efficiantur ad, tantas tempor nam in. Per feugait\n          atomorum ut. Novum appareat ei usu, an usu omnium concludaturque. Et\n          nam latine mentitum, impedit explicari ullamcorper ut est, vis ipsum\n          viderer ei. Porro essent eu per, ut tantas dissentias vim. Dicant\n          regione argumentum vis id, adipisci accusata postulant at vix.\n          Adipisci vituperata ea duo, eu summo detracto mei, et per option\n          periculis. Eos laudem vivendo ex.\n        </div>\n      </div>\n    </div>\n\n    <hr/>\n  \n    <div className = 'columns'>\n      <div className='column'>\n      <p className = 'title'>About the Team</p>\n      </div>\n    </div>\n\n    <div className='columns'>\n      <div className='column'>\n        <p className='subtitle'>Spencer Williams</p>\n        <div className='content'>\n          PhD Student <br/>\n          UW Human Centered Design and Engineering\n        </div>\n      </div>\n      <div className='column'>\n        <p className='subtitle'>Gary Hsieh</p>\n        <div className='content'>\n          Associate Professor <br/>\n          UW Human Centered Design and Engineering\n        </div>\n      </div>\n      <div className='column'>\n        <p className='subtitle'>Katharina Reinecke</p>\n        <div className='content'>\n         Associate Professor <br/>\n         UW Computer Science and Engineering\n        </div>\n      </div>\n      <div className='column'>\n        <p className='subtitle'>Keri Mallari</p>\n        <div className='content'>\n          PhD Student <br/>\n          UW Human Centered Design and Engineering\n        </div>\n      </div>\n      <div className='column'>\n        <p className='subtitle'>Carol Lei</p>\n        <div className='content'>\n          Undergraduate Student <br/>\n          UW Human Centered Design and Engineering\n        </div>\n      </div>\n    </div>\n  </section>\n  </div>\n);\n\nexport default About;\n","import React, { useEffect } from 'react';\nimport ReactGA, { FieldsObject } from 'react-ga';\nimport { RouteComponentProps } from 'react-router-dom';\n\n// Initialize the react-ga plugin using your issued GA tracker code\nReactGA.initialize('UA-0000000-0', {\n  gaOptions: {\n    cookieFlags: 'max-age=7200;secure;samesite=none'\n  }\n});\n\n// React.FC component used as a wrapper for route components - e.g. withTracker(RouteComponent)\nexport const withTracker = <P extends RouteComponentProps>(\n  WrappedComponent: React.ComponentType<P>,\n  options: FieldsObject = {}\n) => {\n  const trackPage = (page: string): void => {\n    ReactGA.set({ page, ...options });\n    ReactGA.pageview(page);\n  };\n\n  return (props: P): JSX.Element => {\n    const { pathname } = props.location;\n\n    useEffect(() => {\n      trackPage(pathname);\n    }, [pathname]);\n\n    return <WrappedComponent {...props} />;\n  };\n};\n","import React from 'react';\nimport Layout from './Layout';\nimport { NotFound } from './components';\nimport { Home, About } from './containers';\nimport { withTracker } from './withTracker';\nimport { Route, Switch } from 'react-router-dom';\nimport { RoutesConfig } from './config/routes.config';\n\nconst App: React.FC = () => (\n  <Layout>\n    <Switch>\n      <Route\n        path={RoutesConfig.Home.path}\n        component={withTracker(Home)}\n        exact={RoutesConfig.Home.exact}\n      />\n      <Route\n        path={RoutesConfig.About.path}\n        component={withTracker(About)}\n        exact={RoutesConfig.About.exact}\n      />\n      <Route component={NotFound} />\n    </Switch>\n  </Layout>\n);\n\nexport default App;\n","import { library } from '@fortawesome/fontawesome-svg-core';\n\nimport {\n  faCheck,\n  faInfoCircle,\n  faAngleDoubleUp,\n  faExternalLinkAlt,\n  faExclamationCircle,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  faReact,\n  faGithub,\n  faMediumM,\n  faTwitter,\n} from '@fortawesome/free-brands-svg-icons';\n\nlibrary.add(\n  faCheck,\n  faReact,\n  faGithub,\n  faMediumM,\n  faTwitter,\n  faInfoCircle,\n  faAngleDoubleUp,\n  faExternalLinkAlt,\n  faExclamationCircle,\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-snapshot';\nimport './assets/style/main.scss';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport './config/fa.config';\nimport * as serviceWorker from './serviceWorker';\n\nrender(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}